// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.17.3
// source: api.proto

package walletrpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SyncNotificationType int32

const (
	SyncNotificationType_SYNCED                            SyncNotificationType = 0
	SyncNotificationType_UNSYNCED                          SyncNotificationType = 1
	SyncNotificationType_PEER_CONNECTED                    SyncNotificationType = 2
	SyncNotificationType_PEER_DISCONNECTED                 SyncNotificationType = 3
	SyncNotificationType_FETCHED_MISSING_CFILTERS_STARTED  SyncNotificationType = 4
	SyncNotificationType_FETCHED_MISSING_CFILTERS_PROGRESS SyncNotificationType = 5
	SyncNotificationType_FETCHED_MISSING_CFILTERS_FINISHED SyncNotificationType = 6
	SyncNotificationType_FETCHED_HEADERS_STARTED           SyncNotificationType = 7
	SyncNotificationType_FETCHED_HEADERS_PROGRESS          SyncNotificationType = 8
	SyncNotificationType_FETCHED_HEADERS_FINISHED          SyncNotificationType = 9
	SyncNotificationType_DISCOVER_ADDRESSES_STARTED        SyncNotificationType = 10
	SyncNotificationType_DISCOVER_ADDRESSES_FINISHED       SyncNotificationType = 11
	SyncNotificationType_RESCAN_STARTED                    SyncNotificationType = 12
	SyncNotificationType_RESCAN_PROGRESS                   SyncNotificationType = 13
	SyncNotificationType_RESCAN_FINISHED                   SyncNotificationType = 14
)

// Enum value maps for SyncNotificationType.
var (
	SyncNotificationType_name = map[int32]string{
		0:  "SYNCED",
		1:  "UNSYNCED",
		2:  "PEER_CONNECTED",
		3:  "PEER_DISCONNECTED",
		4:  "FETCHED_MISSING_CFILTERS_STARTED",
		5:  "FETCHED_MISSING_CFILTERS_PROGRESS",
		6:  "FETCHED_MISSING_CFILTERS_FINISHED",
		7:  "FETCHED_HEADERS_STARTED",
		8:  "FETCHED_HEADERS_PROGRESS",
		9:  "FETCHED_HEADERS_FINISHED",
		10: "DISCOVER_ADDRESSES_STARTED",
		11: "DISCOVER_ADDRESSES_FINISHED",
		12: "RESCAN_STARTED",
		13: "RESCAN_PROGRESS",
		14: "RESCAN_FINISHED",
	}
	SyncNotificationType_value = map[string]int32{
		"SYNCED":                            0,
		"UNSYNCED":                          1,
		"PEER_CONNECTED":                    2,
		"PEER_DISCONNECTED":                 3,
		"FETCHED_MISSING_CFILTERS_STARTED":  4,
		"FETCHED_MISSING_CFILTERS_PROGRESS": 5,
		"FETCHED_MISSING_CFILTERS_FINISHED": 6,
		"FETCHED_HEADERS_STARTED":           7,
		"FETCHED_HEADERS_PROGRESS":          8,
		"FETCHED_HEADERS_FINISHED":          9,
		"DISCOVER_ADDRESSES_STARTED":        10,
		"DISCOVER_ADDRESSES_FINISHED":       11,
		"RESCAN_STARTED":                    12,
		"RESCAN_PROGRESS":                   13,
		"RESCAN_FINISHED":                   14,
	}
)

func (x SyncNotificationType) Enum() *SyncNotificationType {
	p := new(SyncNotificationType)
	*p = x
	return p
}

func (x SyncNotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncNotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (SyncNotificationType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x SyncNotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncNotificationType.Descriptor instead.
func (SyncNotificationType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type TransactionDetails_TransactionType int32

const (
	TransactionDetails_REGULAR         TransactionDetails_TransactionType = 0
	TransactionDetails_COINBASE        TransactionDetails_TransactionType = 4
	TransactionDetails_TICKET_PURCHASE TransactionDetails_TransactionType = 1
	TransactionDetails_VOTE            TransactionDetails_TransactionType = 2
	TransactionDetails_REVOCATION      TransactionDetails_TransactionType = 3
)

// Enum value maps for TransactionDetails_TransactionType.
var (
	TransactionDetails_TransactionType_name = map[int32]string{
		0: "REGULAR",
		4: "COINBASE",
		1: "TICKET_PURCHASE",
		2: "VOTE",
		3: "REVOCATION",
	}
	TransactionDetails_TransactionType_value = map[string]int32{
		"REGULAR":         0,
		"COINBASE":        4,
		"TICKET_PURCHASE": 1,
		"VOTE":            2,
		"REVOCATION":      3,
	}
)

func (x TransactionDetails_TransactionType) Enum() *TransactionDetails_TransactionType {
	p := new(TransactionDetails_TransactionType)
	*p = x
	return p
}

func (x TransactionDetails_TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionDetails_TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (TransactionDetails_TransactionType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x TransactionDetails_TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionDetails_TransactionType.Descriptor instead.
func (TransactionDetails_TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2, 0}
}

type NextAddressRequest_Kind int32

const (
	NextAddressRequest_BIP0044_EXTERNAL NextAddressRequest_Kind = 0
	NextAddressRequest_BIP0044_INTERNAL NextAddressRequest_Kind = 1
)

// Enum value maps for NextAddressRequest_Kind.
var (
	NextAddressRequest_Kind_name = map[int32]string{
		0: "BIP0044_EXTERNAL",
		1: "BIP0044_INTERNAL",
	}
	NextAddressRequest_Kind_value = map[string]int32{
		"BIP0044_EXTERNAL": 0,
		"BIP0044_INTERNAL": 1,
	}
)

func (x NextAddressRequest_Kind) Enum() *NextAddressRequest_Kind {
	p := new(NextAddressRequest_Kind)
	*p = x
	return p
}

func (x NextAddressRequest_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NextAddressRequest_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[2].Descriptor()
}

func (NextAddressRequest_Kind) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[2]
}

func (x NextAddressRequest_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NextAddressRequest_Kind.Descriptor instead.
func (NextAddressRequest_Kind) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22, 0}
}

type NextAddressRequest_GapPolicy int32

const (
	NextAddressRequest_GAP_POLICY_UNSPECIFIED NextAddressRequest_GapPolicy = 0
	NextAddressRequest_GAP_POLICY_ERROR       NextAddressRequest_GapPolicy = 1
	NextAddressRequest_GAP_POLICY_IGNORE      NextAddressRequest_GapPolicy = 2
	NextAddressRequest_GAP_POLICY_WRAP        NextAddressRequest_GapPolicy = 3
)

// Enum value maps for NextAddressRequest_GapPolicy.
var (
	NextAddressRequest_GapPolicy_name = map[int32]string{
		0: "GAP_POLICY_UNSPECIFIED",
		1: "GAP_POLICY_ERROR",
		2: "GAP_POLICY_IGNORE",
		3: "GAP_POLICY_WRAP",
	}
	NextAddressRequest_GapPolicy_value = map[string]int32{
		"GAP_POLICY_UNSPECIFIED": 0,
		"GAP_POLICY_ERROR":       1,
		"GAP_POLICY_IGNORE":      2,
		"GAP_POLICY_WRAP":        3,
	}
)

func (x NextAddressRequest_GapPolicy) Enum() *NextAddressRequest_GapPolicy {
	p := new(NextAddressRequest_GapPolicy)
	*p = x
	return p
}

func (x NextAddressRequest_GapPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NextAddressRequest_GapPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[3].Descriptor()
}

func (NextAddressRequest_GapPolicy) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[3]
}

func (x NextAddressRequest_GapPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NextAddressRequest_GapPolicy.Descriptor instead.
func (NextAddressRequest_GapPolicy) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22, 1}
}

type GetTicketsResponse_TicketDetails_TicketStatus int32

const (
	GetTicketsResponse_TicketDetails_UNKNOWN  GetTicketsResponse_TicketDetails_TicketStatus = 0
	GetTicketsResponse_TicketDetails_UNMINED  GetTicketsResponse_TicketDetails_TicketStatus = 1
	GetTicketsResponse_TicketDetails_IMMATURE GetTicketsResponse_TicketDetails_TicketStatus = 2
	GetTicketsResponse_TicketDetails_LIVE     GetTicketsResponse_TicketDetails_TicketStatus = 3
	GetTicketsResponse_TicketDetails_VOTED    GetTicketsResponse_TicketDetails_TicketStatus = 4
	GetTicketsResponse_TicketDetails_MISSED   GetTicketsResponse_TicketDetails_TicketStatus = 5
	GetTicketsResponse_TicketDetails_EXPIRED  GetTicketsResponse_TicketDetails_TicketStatus = 6
	GetTicketsResponse_TicketDetails_REVOKED  GetTicketsResponse_TicketDetails_TicketStatus = 7
)

// Enum value maps for GetTicketsResponse_TicketDetails_TicketStatus.
var (
	GetTicketsResponse_TicketDetails_TicketStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "UNMINED",
		2: "IMMATURE",
		3: "LIVE",
		4: "VOTED",
		5: "MISSED",
		6: "EXPIRED",
		7: "REVOKED",
	}
	GetTicketsResponse_TicketDetails_TicketStatus_value = map[string]int32{
		"UNKNOWN":  0,
		"UNMINED":  1,
		"IMMATURE": 2,
		"LIVE":     3,
		"VOTED":    4,
		"MISSED":   5,
		"EXPIRED":  6,
		"REVOKED":  7,
	}
)

func (x GetTicketsResponse_TicketDetails_TicketStatus) Enum() *GetTicketsResponse_TicketDetails_TicketStatus {
	p := new(GetTicketsResponse_TicketDetails_TicketStatus)
	*p = x
	return p
}

func (x GetTicketsResponse_TicketDetails_TicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTicketsResponse_TicketDetails_TicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[4].Descriptor()
}

func (GetTicketsResponse_TicketDetails_TicketStatus) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[4]
}

func (x GetTicketsResponse_TicketDetails_TicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTicketsResponse_TicketDetails_TicketStatus.Descriptor instead.
func (GetTicketsResponse_TicketDetails_TicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38, 0, 0}
}

type ChangePassphraseRequest_Key int32

const (
	ChangePassphraseRequest_PRIVATE ChangePassphraseRequest_Key = 0
	ChangePassphraseRequest_PUBLIC  ChangePassphraseRequest_Key = 1
)

// Enum value maps for ChangePassphraseRequest_Key.
var (
	ChangePassphraseRequest_Key_name = map[int32]string{
		0: "PRIVATE",
		1: "PUBLIC",
	}
	ChangePassphraseRequest_Key_value = map[string]int32{
		"PRIVATE": 0,
		"PUBLIC":  1,
	}
)

func (x ChangePassphraseRequest_Key) Enum() *ChangePassphraseRequest_Key {
	p := new(ChangePassphraseRequest_Key)
	*p = x
	return p
}

func (x ChangePassphraseRequest_Key) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangePassphraseRequest_Key) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[5].Descriptor()
}

func (ChangePassphraseRequest_Key) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[5]
}

func (x ChangePassphraseRequest_Key) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangePassphraseRequest_Key.Descriptor instead.
func (ChangePassphraseRequest_Key) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{45, 0}
}

type ConstructTransactionRequest_OutputSelectionAlgorithm int32

const (
	ConstructTransactionRequest_UNSPECIFIED ConstructTransactionRequest_OutputSelectionAlgorithm = 0
	ConstructTransactionRequest_ALL         ConstructTransactionRequest_OutputSelectionAlgorithm = 1
)

// Enum value maps for ConstructTransactionRequest_OutputSelectionAlgorithm.
var (
	ConstructTransactionRequest_OutputSelectionAlgorithm_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ALL",
	}
	ConstructTransactionRequest_OutputSelectionAlgorithm_value = map[string]int32{
		"UNSPECIFIED": 0,
		"ALL":         1,
	}
)

func (x ConstructTransactionRequest_OutputSelectionAlgorithm) Enum() *ConstructTransactionRequest_OutputSelectionAlgorithm {
	p := new(ConstructTransactionRequest_OutputSelectionAlgorithm)
	*p = x
	return p
}

func (x ConstructTransactionRequest_OutputSelectionAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConstructTransactionRequest_OutputSelectionAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[6].Descriptor()
}

func (ConstructTransactionRequest_OutputSelectionAlgorithm) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[6]
}

func (x ConstructTransactionRequest_OutputSelectionAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConstructTransactionRequest_OutputSelectionAlgorithm.Descriptor instead.
func (ConstructTransactionRequest_OutputSelectionAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{51, 0}
}

type CreateSignatureRequest_SigHashType int32

const (
	CreateSignatureRequest_SIGHASH_OLD          CreateSignatureRequest_SigHashType = 0
	CreateSignatureRequest_SIGHASH_ALL          CreateSignatureRequest_SigHashType = 1
	CreateSignatureRequest_SIGHASH_NONE         CreateSignatureRequest_SigHashType = 2
	CreateSignatureRequest_SIGHASH_SINGLE       CreateSignatureRequest_SigHashType = 3
	CreateSignatureRequest_SIGHASH_ALLVALUE     CreateSignatureRequest_SigHashType = 4
	CreateSignatureRequest_SIGHASH_ANYONECANPAY CreateSignatureRequest_SigHashType = 128
)

// Enum value maps for CreateSignatureRequest_SigHashType.
var (
	CreateSignatureRequest_SigHashType_name = map[int32]string{
		0:   "SIGHASH_OLD",
		1:   "SIGHASH_ALL",
		2:   "SIGHASH_NONE",
		3:   "SIGHASH_SINGLE",
		4:   "SIGHASH_ALLVALUE",
		128: "SIGHASH_ANYONECANPAY",
	}
	CreateSignatureRequest_SigHashType_value = map[string]int32{
		"SIGHASH_OLD":          0,
		"SIGHASH_ALL":          1,
		"SIGHASH_NONE":         2,
		"SIGHASH_SINGLE":       3,
		"SIGHASH_ALLVALUE":     4,
		"SIGHASH_ANYONECANPAY": 128,
	}
)

func (x CreateSignatureRequest_SigHashType) Enum() *CreateSignatureRequest_SigHashType {
	p := new(CreateSignatureRequest_SigHashType)
	*p = x
	return p
}

func (x CreateSignatureRequest_SigHashType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateSignatureRequest_SigHashType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[7].Descriptor()
}

func (CreateSignatureRequest_SigHashType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[7]
}

func (x CreateSignatureRequest_SigHashType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateSignatureRequest_SigHashType.Descriptor instead.
func (CreateSignatureRequest_SigHashType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{57, 0}
}

type DecodedTransaction_Input_TreeType int32

const (
	DecodedTransaction_Input_REGULAR DecodedTransaction_Input_TreeType = 0
	DecodedTransaction_Input_UNKNOWN DecodedTransaction_Input_TreeType = -1
	DecodedTransaction_Input_STAKE   DecodedTransaction_Input_TreeType = 1
)

// Enum value maps for DecodedTransaction_Input_TreeType.
var (
	DecodedTransaction_Input_TreeType_name = map[int32]string{
		0:  "REGULAR",
		-1: "UNKNOWN",
		1:  "STAKE",
	}
	DecodedTransaction_Input_TreeType_value = map[string]int32{
		"REGULAR": 0,
		"UNKNOWN": -1,
		"STAKE":   1,
	}
)

func (x DecodedTransaction_Input_TreeType) Enum() *DecodedTransaction_Input_TreeType {
	p := new(DecodedTransaction_Input_TreeType)
	*p = x
	return p
}

func (x DecodedTransaction_Input_TreeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DecodedTransaction_Input_TreeType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[8].Descriptor()
}

func (DecodedTransaction_Input_TreeType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[8]
}

func (x DecodedTransaction_Input_TreeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DecodedTransaction_Input_TreeType.Descriptor instead.
func (DecodedTransaction_Input_TreeType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{151, 0, 0}
}

type DecodedTransaction_Output_ScriptClass int32

const (
	DecodedTransaction_Output_NON_STANDARD     DecodedTransaction_Output_ScriptClass = 0
	DecodedTransaction_Output_PUB_KEY          DecodedTransaction_Output_ScriptClass = 1
	DecodedTransaction_Output_PUB_KEY_HASH     DecodedTransaction_Output_ScriptClass = 2
	DecodedTransaction_Output_SCRIPT_HASH      DecodedTransaction_Output_ScriptClass = 3
	DecodedTransaction_Output_MULTI_SIG        DecodedTransaction_Output_ScriptClass = 4
	DecodedTransaction_Output_NULL_DATA        DecodedTransaction_Output_ScriptClass = 5
	DecodedTransaction_Output_STAKE_SUBMISSION DecodedTransaction_Output_ScriptClass = 6
	DecodedTransaction_Output_STAKE_GEN        DecodedTransaction_Output_ScriptClass = 7
	DecodedTransaction_Output_STAKE_REVOCATION DecodedTransaction_Output_ScriptClass = 8
	DecodedTransaction_Output_STAKE_SUB_CHANGE DecodedTransaction_Output_ScriptClass = 9
	DecodedTransaction_Output_PUB_KEY_ALT      DecodedTransaction_Output_ScriptClass = 10
	DecodedTransaction_Output_PUB_KEY_HASH_ALT DecodedTransaction_Output_ScriptClass = 11
	DecodedTransaction_Output_TGEN             DecodedTransaction_Output_ScriptClass = 12
	DecodedTransaction_Output_TADD             DecodedTransaction_Output_ScriptClass = 13
)

// Enum value maps for DecodedTransaction_Output_ScriptClass.
var (
	DecodedTransaction_Output_ScriptClass_name = map[int32]string{
		0:  "NON_STANDARD",
		1:  "PUB_KEY",
		2:  "PUB_KEY_HASH",
		3:  "SCRIPT_HASH",
		4:  "MULTI_SIG",
		5:  "NULL_DATA",
		6:  "STAKE_SUBMISSION",
		7:  "STAKE_GEN",
		8:  "STAKE_REVOCATION",
		9:  "STAKE_SUB_CHANGE",
		10: "PUB_KEY_ALT",
		11: "PUB_KEY_HASH_ALT",
		12: "TGEN",
		13: "TADD",
	}
	DecodedTransaction_Output_ScriptClass_value = map[string]int32{
		"NON_STANDARD":     0,
		"PUB_KEY":          1,
		"PUB_KEY_HASH":     2,
		"SCRIPT_HASH":      3,
		"MULTI_SIG":        4,
		"NULL_DATA":        5,
		"STAKE_SUBMISSION": 6,
		"STAKE_GEN":        7,
		"STAKE_REVOCATION": 8,
		"STAKE_SUB_CHANGE": 9,
		"PUB_KEY_ALT":      10,
		"PUB_KEY_HASH_ALT": 11,
		"TGEN":             12,
		"TADD":             13,
	}
)

func (x DecodedTransaction_Output_ScriptClass) Enum() *DecodedTransaction_Output_ScriptClass {
	p := new(DecodedTransaction_Output_ScriptClass)
	*p = x
	return p
}

func (x DecodedTransaction_Output_ScriptClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DecodedTransaction_Output_ScriptClass) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[9].Descriptor()
}

func (DecodedTransaction_Output_ScriptClass) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[9]
}

func (x DecodedTransaction_Output_ScriptClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DecodedTransaction_Output_ScriptClass.Descriptor instead.
func (DecodedTransaction_Output_ScriptClass) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{151, 1, 0}
}

type ValidateAddressResponse_ScriptType int32

const (
	ValidateAddressResponse_NonStandardTy     ValidateAddressResponse_ScriptType = 0
	ValidateAddressResponse_PubKeyTy          ValidateAddressResponse_ScriptType = 1
	ValidateAddressResponse_PubKeyHashTy      ValidateAddressResponse_ScriptType = 2
	ValidateAddressResponse_ScriptHashTy      ValidateAddressResponse_ScriptType = 3
	ValidateAddressResponse_MultiSigTy        ValidateAddressResponse_ScriptType = 4
	ValidateAddressResponse_NullDataTy        ValidateAddressResponse_ScriptType = 5
	ValidateAddressResponse_StakeSubmissionTy ValidateAddressResponse_ScriptType = 6
	ValidateAddressResponse_StakeGenTy        ValidateAddressResponse_ScriptType = 7
	ValidateAddressResponse_StakeRevocationTy ValidateAddressResponse_ScriptType = 8
	ValidateAddressResponse_StakeSubChangeTy  ValidateAddressResponse_ScriptType = 9
	ValidateAddressResponse_PubkeyAltTy       ValidateAddressResponse_ScriptType = 10
	ValidateAddressResponse_PubkeyHashAltTy   ValidateAddressResponse_ScriptType = 11
	ValidateAddressResponse_TreasuryGenTy     ValidateAddressResponse_ScriptType = 12
	ValidateAddressResponse_TreasuryAddTy     ValidateAddressResponse_ScriptType = 13
)

// Enum value maps for ValidateAddressResponse_ScriptType.
var (
	ValidateAddressResponse_ScriptType_name = map[int32]string{
		0:  "NonStandardTy",
		1:  "PubKeyTy",
		2:  "PubKeyHashTy",
		3:  "ScriptHashTy",
		4:  "MultiSigTy",
		5:  "NullDataTy",
		6:  "StakeSubmissionTy",
		7:  "StakeGenTy",
		8:  "StakeRevocationTy",
		9:  "StakeSubChangeTy",
		10: "PubkeyAltTy",
		11: "PubkeyHashAltTy",
		12: "TreasuryGenTy",
		13: "TreasuryAddTy",
	}
	ValidateAddressResponse_ScriptType_value = map[string]int32{
		"NonStandardTy":     0,
		"PubKeyTy":          1,
		"PubKeyHashTy":      2,
		"ScriptHashTy":      3,
		"MultiSigTy":        4,
		"NullDataTy":        5,
		"StakeSubmissionTy": 6,
		"StakeGenTy":        7,
		"StakeRevocationTy": 8,
		"StakeSubChangeTy":  9,
		"PubkeyAltTy":       10,
		"PubkeyHashAltTy":   11,
		"TreasuryGenTy":     12,
		"TreasuryAddTy":     13,
	}
)

func (x ValidateAddressResponse_ScriptType) Enum() *ValidateAddressResponse_ScriptType {
	p := new(ValidateAddressResponse_ScriptType)
	*p = x
	return p
}

func (x ValidateAddressResponse_ScriptType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidateAddressResponse_ScriptType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[10].Descriptor()
}

func (ValidateAddressResponse_ScriptType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[10]
}

func (x ValidateAddressResponse_ScriptType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidateAddressResponse_ScriptType.Descriptor instead.
func (ValidateAddressResponse_ScriptType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{155, 0}
}

type GetVSPTicketsByFeeStatusRequest_FeeStatus int32

const (
	GetVSPTicketsByFeeStatusRequest_VSP_FEE_PROCESS_STARTED   GetVSPTicketsByFeeStatusRequest_FeeStatus = 0
	GetVSPTicketsByFeeStatusRequest_VSP_FEE_PROCESS_PAID      GetVSPTicketsByFeeStatusRequest_FeeStatus = 1
	GetVSPTicketsByFeeStatusRequest_VSP_FEE_PROCESS_ERRORED   GetVSPTicketsByFeeStatusRequest_FeeStatus = 2
	GetVSPTicketsByFeeStatusRequest_VSP_FEE_PROCESS_CONFIRMED GetVSPTicketsByFeeStatusRequest_FeeStatus = 3
)

// Enum value maps for GetVSPTicketsByFeeStatusRequest_FeeStatus.
var (
	GetVSPTicketsByFeeStatusRequest_FeeStatus_name = map[int32]string{
		0: "VSP_FEE_PROCESS_STARTED",
		1: "VSP_FEE_PROCESS_PAID",
		2: "VSP_FEE_PROCESS_ERRORED",
		3: "VSP_FEE_PROCESS_CONFIRMED",
	}
	GetVSPTicketsByFeeStatusRequest_FeeStatus_value = map[string]int32{
		"VSP_FEE_PROCESS_STARTED":   0,
		"VSP_FEE_PROCESS_PAID":      1,
		"VSP_FEE_PROCESS_ERRORED":   2,
		"VSP_FEE_PROCESS_CONFIRMED": 3,
	}
)

func (x GetVSPTicketsByFeeStatusRequest_FeeStatus) Enum() *GetVSPTicketsByFeeStatusRequest_FeeStatus {
	p := new(GetVSPTicketsByFeeStatusRequest_FeeStatus)
	*p = x
	return p
}

func (x GetVSPTicketsByFeeStatusRequest_FeeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetVSPTicketsByFeeStatusRequest_FeeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[11].Descriptor()
}

func (GetVSPTicketsByFeeStatusRequest_FeeStatus) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[11]
}

func (x GetVSPTicketsByFeeStatusRequest_FeeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetVSPTicketsByFeeStatusRequest_FeeStatus.Descriptor instead.
func (GetVSPTicketsByFeeStatusRequest_FeeStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{195, 0}
}

type VersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionString string `protobuf:"bytes,1,opt,name=version_string,json=versionString,proto3" json:"version_string,omitempty"`
	Major         uint32 `protobuf:"varint,2,opt,name=major,proto3" json:"major,omitempty"`
	Minor         uint32 `protobuf:"varint,3,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch         uint32 `protobuf:"varint,4,opt,name=patch,proto3" json:"patch,omitempty"`
	Prerelease    string `protobuf:"bytes,5,opt,name=prerelease,proto3" json:"prerelease,omitempty"`
	BuildMetadata string `protobuf:"bytes,6,opt,name=build_metadata,json=buildMetadata,proto3" json:"build_metadata,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *VersionResponse) GetVersionString() string {
	if x != nil {
		return x.VersionString
	}
	return ""
}

func (x *VersionResponse) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *VersionResponse) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *VersionResponse) GetPatch() uint32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *VersionResponse) GetPrerelease() string {
	if x != nil {
		return x.Prerelease
	}
	return ""
}

func (x *VersionResponse) GetBuildMetadata() string {
	if x != nil {
		return x.BuildMetadata
	}
	return ""
}

type TransactionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash            []byte                             `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Transaction     []byte                             `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Debits          []*TransactionDetails_Input        `protobuf:"bytes,3,rep,name=debits,proto3" json:"debits,omitempty"`
	Credits         []*TransactionDetails_Output       `protobuf:"bytes,4,rep,name=credits,proto3" json:"credits,omitempty"`
	Fee             int64                              `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	Timestamp       int64                              `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // May be earlier than a block timestamp, but never later.
	TransactionType TransactionDetails_TransactionType `protobuf:"varint,7,opt,name=transaction_type,json=transactionType,proto3,enum=walletrpc.TransactionDetails_TransactionType" json:"transaction_type,omitempty"`
}

func (x *TransactionDetails) Reset() {
	*x = TransactionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetails) ProtoMessage() {}

func (x *TransactionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetails.ProtoReflect.Descriptor instead.
func (*TransactionDetails) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionDetails) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *TransactionDetails) GetTransaction() []byte {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TransactionDetails) GetDebits() []*TransactionDetails_Input {
	if x != nil {
		return x.Debits
	}
	return nil
}

func (x *TransactionDetails) GetCredits() []*TransactionDetails_Output {
	if x != nil {
		return x.Credits
	}
	return nil
}

func (x *TransactionDetails) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TransactionDetails) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransactionDetails) GetTransactionType() TransactionDetails_TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionDetails_REGULAR
}

type BlockDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash           []byte                `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height         int32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp      int64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ApprovesParent bool                  `protobuf:"varint,5,opt,name=approves_parent,json=approvesParent,proto3" json:"approves_parent,omitempty"`
	Transactions   []*TransactionDetails `protobuf:"bytes,4,rep,name=transactions,proto3" json:"transactions,omitempty"`
	PrevBlock      []byte                `protobuf:"bytes,6,opt,name=prev_block,json=prevBlock,proto3" json:"prev_block,omitempty"`
}

func (x *BlockDetails) Reset() {
	*x = BlockDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDetails) ProtoMessage() {}

func (x *BlockDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDetails.ProtoReflect.Descriptor instead.
func (*BlockDetails) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *BlockDetails) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *BlockDetails) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockDetails) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockDetails) GetApprovesParent() bool {
	if x != nil {
		return x.ApprovesParent
	}
	return false
}

func (x *BlockDetails) GetTransactions() []*TransactionDetails {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *BlockDetails) GetPrevBlock() []byte {
	if x != nil {
		return x.PrevBlock
	}
	return nil
}

type DetachedBlockDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash      []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height    int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	PrevBlock []byte `protobuf:"bytes,3,opt,name=prev_block,json=prevBlock,proto3" json:"prev_block,omitempty"`
	Timestamp int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *DetachedBlockDetails) Reset() {
	*x = DetachedBlockDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetachedBlockDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachedBlockDetails) ProtoMessage() {}

func (x *DetachedBlockDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachedBlockDetails.ProtoReflect.Descriptor instead.
func (*DetachedBlockDetails) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *DetachedBlockDetails) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *DetachedBlockDetails) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DetachedBlockDetails) GetPrevBlock() []byte {
	if x != nil {
		return x.PrevBlock
	}
	return nil
}

func (x *DetachedBlockDetails) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AccountBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account      uint32 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	TotalBalance int64  `protobuf:"varint,2,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
}

func (x *AccountBalance) Reset() {
	*x = AccountBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBalance) ProtoMessage() {}

func (x *AccountBalance) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBalance.ProtoReflect.Descriptor instead.
func (*AccountBalance) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *AccountBalance) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *AccountBalance) GetTotalBalance() int64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

type NetworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NetworkRequest) Reset() {
	*x = NetworkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkRequest) ProtoMessage() {}

func (x *NetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkRequest.ProtoReflect.Descriptor instead.
func (*NetworkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

type NetworkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveNetwork uint32 `protobuf:"varint,1,opt,name=active_network,json=activeNetwork,proto3" json:"active_network,omitempty"`
}

func (x *NetworkResponse) Reset() {
	*x = NetworkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkResponse) ProtoMessage() {}

func (x *NetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkResponse.ProtoReflect.Descriptor instead.
func (*NetworkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *NetworkResponse) GetActiveNetwork() uint32 {
	if x != nil {
		return x.ActiveNetwork
	}
	return 0
}

type CoinTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoinTypeRequest) Reset() {
	*x = CoinTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinTypeRequest) ProtoMessage() {}

func (x *CoinTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinTypeRequest.ProtoReflect.Descriptor instead.
func (*CoinTypeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

type CoinTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinType uint32 `protobuf:"varint,1,opt,name=coin_type,json=coinType,proto3" json:"coin_type,omitempty"`
}

func (x *CoinTypeResponse) Reset() {
	*x = CoinTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinTypeResponse) ProtoMessage() {}

func (x *CoinTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinTypeResponse.ProtoReflect.Descriptor instead.
func (*CoinTypeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *CoinTypeResponse) GetCoinType() uint32 {
	if x != nil {
		return x.CoinType
	}
	return 0
}

type AccountNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
}

func (x *AccountNumberRequest) Reset() {
	*x = AccountNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountNumberRequest) ProtoMessage() {}

func (x *AccountNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountNumberRequest.ProtoReflect.Descriptor instead.
func (*AccountNumberRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *AccountNumberRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

type AccountNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
}

func (x *AccountNumberResponse) Reset() {
	*x = AccountNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountNumberResponse) ProtoMessage() {}

func (x *AccountNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountNumberResponse.ProtoReflect.Descriptor instead.
func (*AccountNumberResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *AccountNumberResponse) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

type AccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccountsRequest) Reset() {
	*x = AccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsRequest) ProtoMessage() {}

func (x *AccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsRequest.ProtoReflect.Descriptor instead.
func (*AccountsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

type AccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts           []*AccountsResponse_Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	CurrentBlockHash   []byte                      `protobuf:"bytes,2,opt,name=current_block_hash,json=currentBlockHash,proto3" json:"current_block_hash,omitempty"`
	CurrentBlockHeight int32                       `protobuf:"varint,3,opt,name=current_block_height,json=currentBlockHeight,proto3" json:"current_block_height,omitempty"`
}

func (x *AccountsResponse) Reset() {
	*x = AccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsResponse) ProtoMessage() {}

func (x *AccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsResponse.ProtoReflect.Descriptor instead.
func (*AccountsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *AccountsResponse) GetAccounts() []*AccountsResponse_Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *AccountsResponse) GetCurrentBlockHash() []byte {
	if x != nil {
		return x.CurrentBlockHash
	}
	return nil
}

func (x *AccountsResponse) GetCurrentBlockHeight() int32 {
	if x != nil {
		return x.CurrentBlockHeight
	}
	return 0
}

type RenameAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	NewName       string `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *RenameAccountRequest) Reset() {
	*x = RenameAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameAccountRequest) ProtoMessage() {}

func (x *RenameAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameAccountRequest.ProtoReflect.Descriptor instead.
func (*RenameAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *RenameAccountRequest) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *RenameAccountRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type RenameAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RenameAccountResponse) Reset() {
	*x = RenameAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameAccountResponse) ProtoMessage() {}

func (x *RenameAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameAccountResponse.ProtoReflect.Descriptor instead.
func (*RenameAccountResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

type RescanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginHeight int32  `protobuf:"varint,1,opt,name=begin_height,json=beginHeight,proto3" json:"begin_height,omitempty"`
	BeginHash   []byte `protobuf:"bytes,2,opt,name=begin_hash,json=beginHash,proto3" json:"begin_hash,omitempty"`
}

func (x *RescanRequest) Reset() {
	*x = RescanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescanRequest) ProtoMessage() {}

func (x *RescanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescanRequest.ProtoReflect.Descriptor instead.
func (*RescanRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *RescanRequest) GetBeginHeight() int32 {
	if x != nil {
		return x.BeginHeight
	}
	return 0
}

func (x *RescanRequest) GetBeginHash() []byte {
	if x != nil {
		return x.BeginHash
	}
	return nil
}

type RescanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RescannedThrough int32 `protobuf:"varint,1,opt,name=rescanned_through,json=rescannedThrough,proto3" json:"rescanned_through,omitempty"`
}

func (x *RescanResponse) Reset() {
	*x = RescanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescanResponse) ProtoMessage() {}

func (x *RescanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescanResponse.ProtoReflect.Descriptor instead.
func (*RescanResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *RescanResponse) GetRescannedThrough() int32 {
	if x != nil {
		return x.RescannedThrough
	}
	return 0
}

type NextAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase  []byte `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	AccountName string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
}

func (x *NextAccountRequest) Reset() {
	*x = NextAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextAccountRequest) ProtoMessage() {}

func (x *NextAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextAccountRequest.ProtoReflect.Descriptor instead.
func (*NextAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *NextAccountRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *NextAccountRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

type NextAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
}

func (x *NextAccountResponse) Reset() {
	*x = NextAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextAccountResponse) ProtoMessage() {}

func (x *NextAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextAccountResponse.ProtoReflect.Descriptor instead.
func (*NextAccountResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (x *NextAccountResponse) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

type NextAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   uint32                       `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	Kind      NextAddressRequest_Kind      `protobuf:"varint,2,opt,name=kind,proto3,enum=walletrpc.NextAddressRequest_Kind" json:"kind,omitempty"`
	GapPolicy NextAddressRequest_GapPolicy `protobuf:"varint,3,opt,name=gap_policy,json=gapPolicy,proto3,enum=walletrpc.NextAddressRequest_GapPolicy" json:"gap_policy,omitempty"`
}

func (x *NextAddressRequest) Reset() {
	*x = NextAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextAddressRequest) ProtoMessage() {}

func (x *NextAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextAddressRequest.ProtoReflect.Descriptor instead.
func (*NextAddressRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *NextAddressRequest) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *NextAddressRequest) GetKind() NextAddressRequest_Kind {
	if x != nil {
		return x.Kind
	}
	return NextAddressRequest_BIP0044_EXTERNAL
}

func (x *NextAddressRequest) GetGapPolicy() NextAddressRequest_GapPolicy {
	if x != nil {
		return x.GapPolicy
	}
	return NextAddressRequest_GAP_POLICY_UNSPECIFIED
}

type NextAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *NextAddressResponse) Reset() {
	*x = NextAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextAddressResponse) ProtoMessage() {}

func (x *NextAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextAddressResponse.ProtoReflect.Descriptor instead.
func (*NextAddressResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23}
}

func (x *NextAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NextAddressResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type ImportPrivateKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase    []byte `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Account       uint32 `protobuf:"varint,2,opt,name=account,proto3" json:"account,omitempty"`
	PrivateKeyWif string `protobuf:"bytes,3,opt,name=private_key_wif,json=privateKeyWif,proto3" json:"private_key_wif,omitempty"`
	Rescan        bool   `protobuf:"varint,4,opt,name=rescan,proto3" json:"rescan,omitempty"`
	ScanFrom      int32  `protobuf:"varint,5,opt,name=scan_from,json=scanFrom,proto3" json:"scan_from,omitempty"`
}

func (x *ImportPrivateKeyRequest) Reset() {
	*x = ImportPrivateKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportPrivateKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPrivateKeyRequest) ProtoMessage() {}

func (x *ImportPrivateKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPrivateKeyRequest.ProtoReflect.Descriptor instead.
func (*ImportPrivateKeyRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24}
}

func (x *ImportPrivateKeyRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *ImportPrivateKeyRequest) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *ImportPrivateKeyRequest) GetPrivateKeyWif() string {
	if x != nil {
		return x.PrivateKeyWif
	}
	return ""
}

func (x *ImportPrivateKeyRequest) GetRescan() bool {
	if x != nil {
		return x.Rescan
	}
	return false
}

func (x *ImportPrivateKeyRequest) GetScanFrom() int32 {
	if x != nil {
		return x.ScanFrom
	}
	return 0
}

type ImportPrivateKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ImportPrivateKeyResponse) Reset() {
	*x = ImportPrivateKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportPrivateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPrivateKeyResponse) ProtoMessage() {}

func (x *ImportPrivateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPrivateKeyResponse.ProtoReflect.Descriptor instead.
func (*ImportPrivateKeyResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25}
}

type ImportExtendedPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xpub        string `protobuf:"bytes,1,opt,name=xpub,proto3" json:"xpub,omitempty"`
	AccountName string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	Rescan      bool   `protobuf:"varint,3,opt,name=rescan,proto3" json:"rescan,omitempty"`
	ScanFrom    int32  `protobuf:"varint,4,opt,name=scan_from,json=scanFrom,proto3" json:"scan_from,omitempty"`
}

func (x *ImportExtendedPublicKeyRequest) Reset() {
	*x = ImportExtendedPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportExtendedPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportExtendedPublicKeyRequest) ProtoMessage() {}

func (x *ImportExtendedPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportExtendedPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*ImportExtendedPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26}
}

func (x *ImportExtendedPublicKeyRequest) GetXpub() string {
	if x != nil {
		return x.Xpub
	}
	return ""
}

func (x *ImportExtendedPublicKeyRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ImportExtendedPublicKeyRequest) GetRescan() bool {
	if x != nil {
		return x.Rescan
	}
	return false
}

func (x *ImportExtendedPublicKeyRequest) GetScanFrom() int32 {
	if x != nil {
		return x.ScanFrom
	}
	return 0
}

type ImportExtendedPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ImportExtendedPublicKeyResponse) Reset() {
	*x = ImportExtendedPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportExtendedPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportExtendedPublicKeyResponse) ProtoMessage() {}

func (x *ImportExtendedPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportExtendedPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*ImportExtendedPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27}
}

type ImportScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase        []byte `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Script            []byte `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	Rescan            bool   `protobuf:"varint,3,opt,name=rescan,proto3" json:"rescan,omitempty"`
	ScanFrom          int32  `protobuf:"varint,4,opt,name=scan_from,json=scanFrom,proto3" json:"scan_from,omitempty"`
	RequireRedeemable bool   `protobuf:"varint,5,opt,name=require_redeemable,json=requireRedeemable,proto3" json:"require_redeemable,omitempty"`
}

func (x *ImportScriptRequest) Reset() {
	*x = ImportScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportScriptRequest) ProtoMessage() {}

func (x *ImportScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportScriptRequest.ProtoReflect.Descriptor instead.
func (*ImportScriptRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28}
}

func (x *ImportScriptRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *ImportScriptRequest) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *ImportScriptRequest) GetRescan() bool {
	if x != nil {
		return x.Rescan
	}
	return false
}

func (x *ImportScriptRequest) GetScanFrom() int32 {
	if x != nil {
		return x.ScanFrom
	}
	return 0
}

func (x *ImportScriptRequest) GetRequireRedeemable() bool {
	if x != nil {
		return x.RequireRedeemable
	}
	return false
}

type ImportScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P2ShAddress string `protobuf:"bytes,1,opt,name=p2sh_address,json=p2shAddress,proto3" json:"p2sh_address,omitempty"`
	Redeemable  bool   `protobuf:"varint,2,opt,name=redeemable,proto3" json:"redeemable,omitempty"`
}

func (x *ImportScriptResponse) Reset() {
	*x = ImportScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportScriptResponse) ProtoMessage() {}

func (x *ImportScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportScriptResponse.ProtoReflect.Descriptor instead.
func (*ImportScriptResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29}
}

func (x *ImportScriptResponse) GetP2ShAddress() string {
	if x != nil {
		return x.P2ShAddress
	}
	return ""
}

func (x *ImportScriptResponse) GetRedeemable() bool {
	if x != nil {
		return x.Redeemable
	}
	return false
}

type BalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber         uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	RequiredConfirmations int32  `protobuf:"varint,2,opt,name=required_confirmations,json=requiredConfirmations,proto3" json:"required_confirmations,omitempty"`
}

func (x *BalanceRequest) Reset() {
	*x = BalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceRequest) ProtoMessage() {}

func (x *BalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceRequest.ProtoReflect.Descriptor instead.
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{30}
}

func (x *BalanceRequest) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *BalanceRequest) GetRequiredConfirmations() int32 {
	if x != nil {
		return x.RequiredConfirmations
	}
	return 0
}

type BalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total                   int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Spendable               int64 `protobuf:"varint,2,opt,name=spendable,proto3" json:"spendable,omitempty"`
	ImmatureReward          int64 `protobuf:"varint,3,opt,name=immature_reward,json=immatureReward,proto3" json:"immature_reward,omitempty"`
	ImmatureStakeGeneration int64 `protobuf:"varint,4,opt,name=immature_stake_generation,json=immatureStakeGeneration,proto3" json:"immature_stake_generation,omitempty"`
	LockedByTickets         int64 `protobuf:"varint,5,opt,name=locked_by_tickets,json=lockedByTickets,proto3" json:"locked_by_tickets,omitempty"`
	VotingAuthority         int64 `protobuf:"varint,6,opt,name=voting_authority,json=votingAuthority,proto3" json:"voting_authority,omitempty"`
	Unconfirmed             int64 `protobuf:"varint,7,opt,name=unconfirmed,proto3" json:"unconfirmed,omitempty"`
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31}
}

func (x *BalanceResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BalanceResponse) GetSpendable() int64 {
	if x != nil {
		return x.Spendable
	}
	return 0
}

func (x *BalanceResponse) GetImmatureReward() int64 {
	if x != nil {
		return x.ImmatureReward
	}
	return 0
}

func (x *BalanceResponse) GetImmatureStakeGeneration() int64 {
	if x != nil {
		return x.ImmatureStakeGeneration
	}
	return 0
}

func (x *BalanceResponse) GetLockedByTickets() int64 {
	if x != nil {
		return x.LockedByTickets
	}
	return 0
}

func (x *BalanceResponse) GetVotingAuthority() int64 {
	if x != nil {
		return x.VotingAuthority
	}
	return 0
}

func (x *BalanceResponse) GetUnconfirmed() int64 {
	if x != nil {
		return x.Unconfirmed
	}
	return 0
}

type GetTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{32}
}

func (x *GetTransactionRequest) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

type GetTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction   *TransactionDetails `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Confirmations int32               `protobuf:"varint,2,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	BlockHash     []byte              `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
}

func (x *GetTransactionResponse) Reset() {
	*x = GetTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResponse) ProtoMessage() {}

func (x *GetTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33}
}

func (x *GetTransactionResponse) GetTransaction() *TransactionDetails {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *GetTransactionResponse) GetConfirmations() int32 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *GetTransactionResponse) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type GetTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optionally specify the starting block from which to begin including all transactions.
	// Either the starting block hash or height may be specified, but not both.
	// If a block height is specified and is negative, the absolute value becomes the number of
	// last blocks to include.  That is, given a current chain height of 1000 and a starting block
	// height of -3, transaction notifications will be created for blocks 998, 999, and 1000.
	// If both options are excluded, transaction results are created for transactions since the
	// genesis block.
	StartingBlockHash   []byte `protobuf:"bytes,1,opt,name=starting_block_hash,json=startingBlockHash,proto3" json:"starting_block_hash,omitempty"`
	StartingBlockHeight int32  `protobuf:"zigzag32,2,opt,name=starting_block_height,json=startingBlockHeight,proto3" json:"starting_block_height,omitempty"`
	// Optionally specify the last block that transaction results may appear in.
	// Either the ending block hash or height may be specified, but not both.
	// If both are excluded, transaction results are created for all transactions
	// through the best block, and include all unmined transactions.
	EndingBlockHash   []byte `protobuf:"bytes,3,opt,name=ending_block_hash,json=endingBlockHash,proto3" json:"ending_block_hash,omitempty"`
	EndingBlockHeight int32  `protobuf:"varint,4,opt,name=ending_block_height,json=endingBlockHeight,proto3" json:"ending_block_height,omitempty"`
	// Include at least this many of the newest transactions if they exist.
	// Cannot be used when the ending block hash is specified.
	//
	// TODO: remove until spec adds it back in some way.
	MinimumRecentTransactions int32 `protobuf:"varint,5,opt,name=minimum_recent_transactions,json=minimumRecentTransactions,proto3" json:"minimum_recent_transactions,omitempty"`
	// Try to include at most this many transactions in the reply
	TargetTransactionCount int32 `protobuf:"varint,6,opt,name=target_transaction_count,json=targetTransactionCount,proto3" json:"target_transaction_count,omitempty"`
}

func (x *GetTransactionsRequest) Reset() {
	*x = GetTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsRequest) ProtoMessage() {}

func (x *GetTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{34}
}

func (x *GetTransactionsRequest) GetStartingBlockHash() []byte {
	if x != nil {
		return x.StartingBlockHash
	}
	return nil
}

func (x *GetTransactionsRequest) GetStartingBlockHeight() int32 {
	if x != nil {
		return x.StartingBlockHeight
	}
	return 0
}

func (x *GetTransactionsRequest) GetEndingBlockHash() []byte {
	if x != nil {
		return x.EndingBlockHash
	}
	return nil
}

func (x *GetTransactionsRequest) GetEndingBlockHeight() int32 {
	if x != nil {
		return x.EndingBlockHeight
	}
	return 0
}

func (x *GetTransactionsRequest) GetMinimumRecentTransactions() int32 {
	if x != nil {
		return x.MinimumRecentTransactions
	}
	return 0
}

func (x *GetTransactionsRequest) GetTargetTransactionCount() int32 {
	if x != nil {
		return x.TargetTransactionCount
	}
	return 0
}

type GetTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinedTransactions   *BlockDetails         `protobuf:"bytes,1,opt,name=mined_transactions,json=minedTransactions,proto3" json:"mined_transactions,omitempty"`
	UnminedTransactions []*TransactionDetails `protobuf:"bytes,2,rep,name=unmined_transactions,json=unminedTransactions,proto3" json:"unmined_transactions,omitempty"`
}

func (x *GetTransactionsResponse) Reset() {
	*x = GetTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsResponse) ProtoMessage() {}

func (x *GetTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35}
}

func (x *GetTransactionsResponse) GetMinedTransactions() *BlockDetails {
	if x != nil {
		return x.MinedTransactions
	}
	return nil
}

func (x *GetTransactionsResponse) GetUnminedTransactions() []*TransactionDetails {
	if x != nil {
		return x.UnminedTransactions
	}
	return nil
}

type GetTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketHash []byte `protobuf:"bytes,1,opt,name=ticket_hash,json=ticketHash,proto3" json:"ticket_hash,omitempty"`
}

func (x *GetTicketRequest) Reset() {
	*x = GetTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketRequest) ProtoMessage() {}

func (x *GetTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketRequest.ProtoReflect.Descriptor instead.
func (*GetTicketRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{36}
}

func (x *GetTicketRequest) GetTicketHash() []byte {
	if x != nil {
		return x.TicketHash
	}
	return nil
}

type GetTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartingBlockHash   []byte `protobuf:"bytes,1,opt,name=starting_block_hash,json=startingBlockHash,proto3" json:"starting_block_hash,omitempty"`
	StartingBlockHeight int32  `protobuf:"zigzag32,2,opt,name=starting_block_height,json=startingBlockHeight,proto3" json:"starting_block_height,omitempty"`
	EndingBlockHash     []byte `protobuf:"bytes,3,opt,name=ending_block_hash,json=endingBlockHash,proto3" json:"ending_block_hash,omitempty"`
	EndingBlockHeight   int32  `protobuf:"varint,4,opt,name=ending_block_height,json=endingBlockHeight,proto3" json:"ending_block_height,omitempty"`
	TargetTicketCount   int32  `protobuf:"varint,5,opt,name=target_ticket_count,json=targetTicketCount,proto3" json:"target_ticket_count,omitempty"`
}

func (x *GetTicketsRequest) Reset() {
	*x = GetTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketsRequest) ProtoMessage() {}

func (x *GetTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketsRequest.ProtoReflect.Descriptor instead.
func (*GetTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37}
}

func (x *GetTicketsRequest) GetStartingBlockHash() []byte {
	if x != nil {
		return x.StartingBlockHash
	}
	return nil
}

func (x *GetTicketsRequest) GetStartingBlockHeight() int32 {
	if x != nil {
		return x.StartingBlockHeight
	}
	return 0
}

func (x *GetTicketsRequest) GetEndingBlockHash() []byte {
	if x != nil {
		return x.EndingBlockHash
	}
	return nil
}

func (x *GetTicketsRequest) GetEndingBlockHeight() int32 {
	if x != nil {
		return x.EndingBlockHeight
	}
	return 0
}

func (x *GetTicketsRequest) GetTargetTicketCount() int32 {
	if x != nil {
		return x.TargetTicketCount
	}
	return 0
}

type GetTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *GetTicketsResponse_TicketDetails `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Block  *GetTicketsResponse_BlockDetails  `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *GetTicketsResponse) Reset() {
	*x = GetTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketsResponse) ProtoMessage() {}

func (x *GetTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketsResponse.ProtoReflect.Descriptor instead.
func (*GetTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38}
}

func (x *GetTicketsResponse) GetTicket() *GetTicketsResponse_TicketDetails {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *GetTicketsResponse) GetBlock() *GetTicketsResponse_BlockDetails {
	if x != nil {
		return x.Block
	}
	return nil
}

type TicketPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TicketPriceRequest) Reset() {
	*x = TicketPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketPriceRequest) ProtoMessage() {}

func (x *TicketPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketPriceRequest.ProtoReflect.Descriptor instead.
func (*TicketPriceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{39}
}

type TicketPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketPrice int64 `protobuf:"varint,1,opt,name=ticket_price,json=ticketPrice,proto3" json:"ticket_price,omitempty"`
	Height      int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *TicketPriceResponse) Reset() {
	*x = TicketPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketPriceResponse) ProtoMessage() {}

func (x *TicketPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketPriceResponse.ProtoReflect.Descriptor instead.
func (*TicketPriceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{40}
}

func (x *TicketPriceResponse) GetTicketPrice() int64 {
	if x != nil {
		return x.TicketPrice
	}
	return 0
}

func (x *TicketPriceResponse) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type StakeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StakeInfoRequest) Reset() {
	*x = StakeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeInfoRequest) ProtoMessage() {}

func (x *StakeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeInfoRequest.ProtoReflect.Descriptor instead.
func (*StakeInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{41}
}

type StakeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolSize      uint32 `protobuf:"varint,1,opt,name=pool_size,json=poolSize,proto3" json:"pool_size,omitempty"`
	AllMempoolTix uint32 `protobuf:"varint,2,opt,name=all_mempool_tix,json=allMempoolTix,proto3" json:"all_mempool_tix,omitempty"`
	OwnMempoolTix uint32 `protobuf:"varint,3,opt,name=own_mempool_tix,json=ownMempoolTix,proto3" json:"own_mempool_tix,omitempty"`
	Immature      uint32 `protobuf:"varint,4,opt,name=immature,proto3" json:"immature,omitempty"`
	Live          uint32 `protobuf:"varint,5,opt,name=live,proto3" json:"live,omitempty"`
	Voted         uint32 `protobuf:"varint,6,opt,name=voted,proto3" json:"voted,omitempty"`
	Missed        uint32 `protobuf:"varint,7,opt,name=missed,proto3" json:"missed,omitempty"`
	Revoked       uint32 `protobuf:"varint,8,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Expired       uint32 `protobuf:"varint,9,opt,name=expired,proto3" json:"expired,omitempty"`
	TotalSubsidy  int64  `protobuf:"varint,10,opt,name=total_subsidy,json=totalSubsidy,proto3" json:"total_subsidy,omitempty"`
	Unspent       uint32 `protobuf:"varint,11,opt,name=unspent,proto3" json:"unspent,omitempty"`
}

func (x *StakeInfoResponse) Reset() {
	*x = StakeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeInfoResponse) ProtoMessage() {}

func (x *StakeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeInfoResponse.ProtoReflect.Descriptor instead.
func (*StakeInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{42}
}

func (x *StakeInfoResponse) GetPoolSize() uint32 {
	if x != nil {
		return x.PoolSize
	}
	return 0
}

func (x *StakeInfoResponse) GetAllMempoolTix() uint32 {
	if x != nil {
		return x.AllMempoolTix
	}
	return 0
}

func (x *StakeInfoResponse) GetOwnMempoolTix() uint32 {
	if x != nil {
		return x.OwnMempoolTix
	}
	return 0
}

func (x *StakeInfoResponse) GetImmature() uint32 {
	if x != nil {
		return x.Immature
	}
	return 0
}

func (x *StakeInfoResponse) GetLive() uint32 {
	if x != nil {
		return x.Live
	}
	return 0
}

func (x *StakeInfoResponse) GetVoted() uint32 {
	if x != nil {
		return x.Voted
	}
	return 0
}

func (x *StakeInfoResponse) GetMissed() uint32 {
	if x != nil {
		return x.Missed
	}
	return 0
}

func (x *StakeInfoResponse) GetRevoked() uint32 {
	if x != nil {
		return x.Revoked
	}
	return 0
}

func (x *StakeInfoResponse) GetExpired() uint32 {
	if x != nil {
		return x.Expired
	}
	return 0
}

func (x *StakeInfoResponse) GetTotalSubsidy() int64 {
	if x != nil {
		return x.TotalSubsidy
	}
	return 0
}

func (x *StakeInfoResponse) GetUnspent() uint32 {
	if x != nil {
		return x.Unspent
	}
	return 0
}

type BlockInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash   []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockHeight int32  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *BlockInfoRequest) Reset() {
	*x = BlockInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockInfoRequest) ProtoMessage() {}

func (x *BlockInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockInfoRequest.ProtoReflect.Descriptor instead.
func (*BlockInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{43}
}

func (x *BlockInfoRequest) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *BlockInfoRequest) GetBlockHeight() int32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type BlockInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash        []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockHeight      int32  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Confirmations    int32  `protobuf:"varint,3,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	Timestamp        int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BlockHeader      []byte `protobuf:"bytes,5,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`
	StakeInvalidated bool   `protobuf:"varint,6,opt,name=stake_invalidated,json=stakeInvalidated,proto3" json:"stake_invalidated,omitempty"`
	ApprovesParent   bool   `protobuf:"varint,7,opt,name=approves_parent,json=approvesParent,proto3" json:"approves_parent,omitempty"`
}

func (x *BlockInfoResponse) Reset() {
	*x = BlockInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockInfoResponse) ProtoMessage() {}

func (x *BlockInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockInfoResponse.ProtoReflect.Descriptor instead.
func (*BlockInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{44}
}

func (x *BlockInfoResponse) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *BlockInfoResponse) GetBlockHeight() int32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *BlockInfoResponse) GetConfirmations() int32 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *BlockInfoResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockInfoResponse) GetBlockHeader() []byte {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

func (x *BlockInfoResponse) GetStakeInvalidated() bool {
	if x != nil {
		return x.StakeInvalidated
	}
	return false
}

func (x *BlockInfoResponse) GetApprovesParent() bool {
	if x != nil {
		return x.ApprovesParent
	}
	return false
}

type ChangePassphraseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           ChangePassphraseRequest_Key `protobuf:"varint,1,opt,name=key,proto3,enum=walletrpc.ChangePassphraseRequest_Key" json:"key,omitempty"`
	OldPassphrase []byte                      `protobuf:"bytes,2,opt,name=old_passphrase,json=oldPassphrase,proto3" json:"old_passphrase,omitempty"`
	NewPassphrase []byte                      `protobuf:"bytes,3,opt,name=new_passphrase,json=newPassphrase,proto3" json:"new_passphrase,omitempty"`
}

func (x *ChangePassphraseRequest) Reset() {
	*x = ChangePassphraseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePassphraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePassphraseRequest) ProtoMessage() {}

func (x *ChangePassphraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePassphraseRequest.ProtoReflect.Descriptor instead.
func (*ChangePassphraseRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{45}
}

func (x *ChangePassphraseRequest) GetKey() ChangePassphraseRequest_Key {
	if x != nil {
		return x.Key
	}
	return ChangePassphraseRequest_PRIVATE
}

func (x *ChangePassphraseRequest) GetOldPassphrase() []byte {
	if x != nil {
		return x.OldPassphrase
	}
	return nil
}

func (x *ChangePassphraseRequest) GetNewPassphrase() []byte {
	if x != nil {
		return x.NewPassphrase
	}
	return nil
}

type ChangePassphraseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangePassphraseResponse) Reset() {
	*x = ChangePassphraseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePassphraseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePassphraseResponse) ProtoMessage() {}

func (x *ChangePassphraseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePassphraseResponse.ProtoReflect.Descriptor instead.
func (*ChangePassphraseResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{46}
}

type FundTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account                  uint32 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	TargetAmount             int64  `protobuf:"varint,2,opt,name=target_amount,json=targetAmount,proto3" json:"target_amount,omitempty"`
	RequiredConfirmations    int32  `protobuf:"varint,3,opt,name=required_confirmations,json=requiredConfirmations,proto3" json:"required_confirmations,omitempty"`
	IncludeImmatureCoinbases bool   `protobuf:"varint,4,opt,name=include_immature_coinbases,json=includeImmatureCoinbases,proto3" json:"include_immature_coinbases,omitempty"`
	IncludeChangeScript      bool   `protobuf:"varint,5,opt,name=include_change_script,json=includeChangeScript,proto3" json:"include_change_script,omitempty"`
}

func (x *FundTransactionRequest) Reset() {
	*x = FundTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundTransactionRequest) ProtoMessage() {}

func (x *FundTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundTransactionRequest.ProtoReflect.Descriptor instead.
func (*FundTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{47}
}

func (x *FundTransactionRequest) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *FundTransactionRequest) GetTargetAmount() int64 {
	if x != nil {
		return x.TargetAmount
	}
	return 0
}

func (x *FundTransactionRequest) GetRequiredConfirmations() int32 {
	if x != nil {
		return x.RequiredConfirmations
	}
	return 0
}

func (x *FundTransactionRequest) GetIncludeImmatureCoinbases() bool {
	if x != nil {
		return x.IncludeImmatureCoinbases
	}
	return false
}

func (x *FundTransactionRequest) GetIncludeChangeScript() bool {
	if x != nil {
		return x.IncludeChangeScript
	}
	return false
}

type FundTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedOutputs []*FundTransactionResponse_PreviousOutput `protobuf:"bytes,1,rep,name=selected_outputs,json=selectedOutputs,proto3" json:"selected_outputs,omitempty"`
	TotalAmount     int64                                     `protobuf:"varint,2,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	ChangePkScript  []byte                                    `protobuf:"bytes,3,opt,name=change_pk_script,json=changePkScript,proto3" json:"change_pk_script,omitempty"`
}

func (x *FundTransactionResponse) Reset() {
	*x = FundTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundTransactionResponse) ProtoMessage() {}

func (x *FundTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundTransactionResponse.ProtoReflect.Descriptor instead.
func (*FundTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{48}
}

func (x *FundTransactionResponse) GetSelectedOutputs() []*FundTransactionResponse_PreviousOutput {
	if x != nil {
		return x.SelectedOutputs
	}
	return nil
}

func (x *FundTransactionResponse) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *FundTransactionResponse) GetChangePkScript() []byte {
	if x != nil {
		return x.ChangePkScript
	}
	return nil
}

type UnspentOutputsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account                  uint32 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	TargetAmount             int64  `protobuf:"varint,2,opt,name=target_amount,json=targetAmount,proto3" json:"target_amount,omitempty"`
	RequiredConfirmations    int32  `protobuf:"varint,3,opt,name=required_confirmations,json=requiredConfirmations,proto3" json:"required_confirmations,omitempty"`
	IncludeImmatureCoinbases bool   `protobuf:"varint,4,opt,name=include_immature_coinbases,json=includeImmatureCoinbases,proto3" json:"include_immature_coinbases,omitempty"`
}

func (x *UnspentOutputsRequest) Reset() {
	*x = UnspentOutputsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnspentOutputsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnspentOutputsRequest) ProtoMessage() {}

func (x *UnspentOutputsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnspentOutputsRequest.ProtoReflect.Descriptor instead.
func (*UnspentOutputsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{49}
}

func (x *UnspentOutputsRequest) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *UnspentOutputsRequest) GetTargetAmount() int64 {
	if x != nil {
		return x.TargetAmount
	}
	return 0
}

func (x *UnspentOutputsRequest) GetRequiredConfirmations() int32 {
	if x != nil {
		return x.RequiredConfirmations
	}
	return 0
}

func (x *UnspentOutputsRequest) GetIncludeImmatureCoinbases() bool {
	if x != nil {
		return x.IncludeImmatureCoinbases
	}
	return false
}

type UnspentOutputResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	OutputIndex     uint32 `protobuf:"varint,2,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"`
	Amount          int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	PkScript        []byte `protobuf:"bytes,4,opt,name=pk_script,json=pkScript,proto3" json:"pk_script,omitempty"`
	ReceiveTime     int64  `protobuf:"varint,5,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`
	FromCoinbase    bool   `protobuf:"varint,6,opt,name=from_coinbase,json=fromCoinbase,proto3" json:"from_coinbase,omitempty"`
	Tree            int32  `protobuf:"varint,7,opt,name=tree,proto3" json:"tree,omitempty"`
	AmountSum       int64  `protobuf:"varint,8,opt,name=amount_sum,json=amountSum,proto3" json:"amount_sum,omitempty"`
}

func (x *UnspentOutputResponse) Reset() {
	*x = UnspentOutputResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnspentOutputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnspentOutputResponse) ProtoMessage() {}

func (x *UnspentOutputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnspentOutputResponse.ProtoReflect.Descriptor instead.
func (*UnspentOutputResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{50}
}

func (x *UnspentOutputResponse) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *UnspentOutputResponse) GetOutputIndex() uint32 {
	if x != nil {
		return x.OutputIndex
	}
	return 0
}

func (x *UnspentOutputResponse) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UnspentOutputResponse) GetPkScript() []byte {
	if x != nil {
		return x.PkScript
	}
	return nil
}

func (x *UnspentOutputResponse) GetReceiveTime() int64 {
	if x != nil {
		return x.ReceiveTime
	}
	return 0
}

func (x *UnspentOutputResponse) GetFromCoinbase() bool {
	if x != nil {
		return x.FromCoinbase
	}
	return false
}

func (x *UnspentOutputResponse) GetTree() int32 {
	if x != nil {
		return x.Tree
	}
	return 0
}

func (x *UnspentOutputResponse) GetAmountSum() int64 {
	if x != nil {
		return x.AmountSum
	}
	return 0
}

type ConstructTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAccount            uint32                                               `protobuf:"varint,1,opt,name=source_account,json=sourceAccount,proto3" json:"source_account,omitempty"`
	RequiredConfirmations    int32                                                `protobuf:"varint,2,opt,name=required_confirmations,json=requiredConfirmations,proto3" json:"required_confirmations,omitempty"`
	FeePerKb                 int32                                                `protobuf:"varint,3,opt,name=fee_per_kb,json=feePerKb,proto3" json:"fee_per_kb,omitempty"`
	OutputSelectionAlgorithm ConstructTransactionRequest_OutputSelectionAlgorithm `protobuf:"varint,4,opt,name=output_selection_algorithm,json=outputSelectionAlgorithm,proto3,enum=walletrpc.ConstructTransactionRequest_OutputSelectionAlgorithm" json:"output_selection_algorithm,omitempty"`
	NonChangeOutputs         []*ConstructTransactionRequest_Output                `protobuf:"bytes,5,rep,name=non_change_outputs,json=nonChangeOutputs,proto3" json:"non_change_outputs,omitempty"`
	ChangeDestination        *ConstructTransactionRequest_OutputDestination       `protobuf:"bytes,6,opt,name=change_destination,json=changeDestination,proto3" json:"change_destination,omitempty"`
}

func (x *ConstructTransactionRequest) Reset() {
	*x = ConstructTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstructTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstructTransactionRequest) ProtoMessage() {}

func (x *ConstructTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstructTransactionRequest.ProtoReflect.Descriptor instead.
func (*ConstructTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{51}
}

func (x *ConstructTransactionRequest) GetSourceAccount() uint32 {
	if x != nil {
		return x.SourceAccount
	}
	return 0
}

func (x *ConstructTransactionRequest) GetRequiredConfirmations() int32 {
	if x != nil {
		return x.RequiredConfirmations
	}
	return 0
}

func (x *ConstructTransactionRequest) GetFeePerKb() int32 {
	if x != nil {
		return x.FeePerKb
	}
	return 0
}

func (x *ConstructTransactionRequest) GetOutputSelectionAlgorithm() ConstructTransactionRequest_OutputSelectionAlgorithm {
	if x != nil {
		return x.OutputSelectionAlgorithm
	}
	return ConstructTransactionRequest_UNSPECIFIED
}

func (x *ConstructTransactionRequest) GetNonChangeOutputs() []*ConstructTransactionRequest_Output {
	if x != nil {
		return x.NonChangeOutputs
	}
	return nil
}

func (x *ConstructTransactionRequest) GetChangeDestination() *ConstructTransactionRequest_OutputDestination {
	if x != nil {
		return x.ChangeDestination
	}
	return nil
}

type ConstructTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnsignedTransaction       []byte `protobuf:"bytes,1,opt,name=unsigned_transaction,json=unsignedTransaction,proto3" json:"unsigned_transaction,omitempty"`
	TotalPreviousOutputAmount int64  `protobuf:"varint,2,opt,name=total_previous_output_amount,json=totalPreviousOutputAmount,proto3" json:"total_previous_output_amount,omitempty"`
	TotalOutputAmount         int64  `protobuf:"varint,3,opt,name=total_output_amount,json=totalOutputAmount,proto3" json:"total_output_amount,omitempty"`
	EstimatedSignedSize       uint32 `protobuf:"varint,4,opt,name=estimated_signed_size,json=estimatedSignedSize,proto3" json:"estimated_signed_size,omitempty"`
	ChangeIndex               int32  `protobuf:"varint,5,opt,name=change_index,json=changeIndex,proto3" json:"change_index,omitempty"`
}

func (x *ConstructTransactionResponse) Reset() {
	*x = ConstructTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstructTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstructTransactionResponse) ProtoMessage() {}

func (x *ConstructTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstructTransactionResponse.ProtoReflect.Descriptor instead.
func (*ConstructTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{52}
}

func (x *ConstructTransactionResponse) GetUnsignedTransaction() []byte {
	if x != nil {
		return x.UnsignedTransaction
	}
	return nil
}

func (x *ConstructTransactionResponse) GetTotalPreviousOutputAmount() int64 {
	if x != nil {
		return x.TotalPreviousOutputAmount
	}
	return 0
}

func (x *ConstructTransactionResponse) GetTotalOutputAmount() int64 {
	if x != nil {
		return x.TotalOutputAmount
	}
	return 0
}

func (x *ConstructTransactionResponse) GetEstimatedSignedSize() uint32 {
	if x != nil {
		return x.EstimatedSignedSize
	}
	return 0
}

func (x *ConstructTransactionResponse) GetChangeIndex() int32 {
	if x != nil {
		return x.ChangeIndex
	}
	return 0
}

type SignTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase            []byte `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	SerializedTransaction []byte `protobuf:"bytes,2,opt,name=serialized_transaction,json=serializedTransaction,proto3" json:"serialized_transaction,omitempty"`
	// If no indexes are specified, signatures scripts will be added for
	// every input. If any input indexes are specified, only those inputs
	// will be signed.  Rather than returning an incompletely signed
	// transaction if any of the inputs to be signed can not be, the RPC
	// immediately errors.
	// repeated uint32 input_indexes = 3;
	AdditionalScripts []*SignTransactionRequest_AdditionalScript `protobuf:"bytes,4,rep,name=additional_scripts,json=additionalScripts,proto3" json:"additional_scripts,omitempty"`
}

func (x *SignTransactionRequest) Reset() {
	*x = SignTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionRequest) ProtoMessage() {}

func (x *SignTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionRequest.ProtoReflect.Descriptor instead.
func (*SignTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{53}
}

func (x *SignTransactionRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *SignTransactionRequest) GetSerializedTransaction() []byte {
	if x != nil {
		return x.SerializedTransaction
	}
	return nil
}

func (x *SignTransactionRequest) GetAdditionalScripts() []*SignTransactionRequest_AdditionalScript {
	if x != nil {
		return x.AdditionalScripts
	}
	return nil
}

type SignTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction          []byte   `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	UnsignedInputIndexes []uint32 `protobuf:"varint,2,rep,packed,name=unsigned_input_indexes,json=unsignedInputIndexes,proto3" json:"unsigned_input_indexes,omitempty"`
}

func (x *SignTransactionResponse) Reset() {
	*x = SignTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionResponse) ProtoMessage() {}

func (x *SignTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionResponse.ProtoReflect.Descriptor instead.
func (*SignTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{54}
}

func (x *SignTransactionResponse) GetTransaction() []byte {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *SignTransactionResponse) GetUnsignedInputIndexes() []uint32 {
	if x != nil {
		return x.UnsignedInputIndexes
	}
	return nil
}

type SignTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase        []byte                                         `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Transactions      []*SignTransactionsRequest_UnsignedTransaction `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	AdditionalScripts []*SignTransactionsRequest_AdditionalScript    `protobuf:"bytes,3,rep,name=additional_scripts,json=additionalScripts,proto3" json:"additional_scripts,omitempty"`
}

func (x *SignTransactionsRequest) Reset() {
	*x = SignTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionsRequest) ProtoMessage() {}

func (x *SignTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionsRequest.ProtoReflect.Descriptor instead.
func (*SignTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{55}
}

func (x *SignTransactionsRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *SignTransactionsRequest) GetTransactions() []*SignTransactionsRequest_UnsignedTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *SignTransactionsRequest) GetAdditionalScripts() []*SignTransactionsRequest_AdditionalScript {
	if x != nil {
		return x.AdditionalScripts
	}
	return nil
}

type SignTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*SignTransactionsResponse_SignedTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *SignTransactionsResponse) Reset() {
	*x = SignTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionsResponse) ProtoMessage() {}

func (x *SignTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionsResponse.ProtoReflect.Descriptor instead.
func (*SignTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{56}
}

func (x *SignTransactionsResponse) GetTransactions() []*SignTransactionsResponse_SignedTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type CreateSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase            []byte                             `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Address               string                             `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	SerializedTransaction []byte                             `protobuf:"bytes,3,opt,name=serialized_transaction,json=serializedTransaction,proto3" json:"serialized_transaction,omitempty"`
	InputIndex            uint32                             `protobuf:"varint,4,opt,name=input_index,json=inputIndex,proto3" json:"input_index,omitempty"`
	HashType              CreateSignatureRequest_SigHashType `protobuf:"varint,5,opt,name=hash_type,json=hashType,proto3,enum=walletrpc.CreateSignatureRequest_SigHashType" json:"hash_type,omitempty"`
	PreviousPkScript      []byte                             `protobuf:"bytes,6,opt,name=previous_pk_script,json=previousPkScript,proto3" json:"previous_pk_script,omitempty"`
}

func (x *CreateSignatureRequest) Reset() {
	*x = CreateSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureRequest) ProtoMessage() {}

func (x *CreateSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureRequest.ProtoReflect.Descriptor instead.
func (*CreateSignatureRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{57}
}

func (x *CreateSignatureRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *CreateSignatureRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateSignatureRequest) GetSerializedTransaction() []byte {
	if x != nil {
		return x.SerializedTransaction
	}
	return nil
}

func (x *CreateSignatureRequest) GetInputIndex() uint32 {
	if x != nil {
		return x.InputIndex
	}
	return 0
}

func (x *CreateSignatureRequest) GetHashType() CreateSignatureRequest_SigHashType {
	if x != nil {
		return x.HashType
	}
	return CreateSignatureRequest_SIGHASH_OLD
}

func (x *CreateSignatureRequest) GetPreviousPkScript() []byte {
	if x != nil {
		return x.PreviousPkScript
	}
	return nil
}

type CreateSignatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	PublicKey []byte `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *CreateSignatureResponse) Reset() {
	*x = CreateSignatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureResponse) ProtoMessage() {}

func (x *CreateSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureResponse.ProtoReflect.Descriptor instead.
func (*CreateSignatureResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{58}
}

func (x *CreateSignatureResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *CreateSignatureResponse) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type PublishTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedTransaction []byte `protobuf:"bytes,1,opt,name=signed_transaction,json=signedTransaction,proto3" json:"signed_transaction,omitempty"`
}

func (x *PublishTransactionRequest) Reset() {
	*x = PublishTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTransactionRequest) ProtoMessage() {}

func (x *PublishTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTransactionRequest.ProtoReflect.Descriptor instead.
func (*PublishTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{59}
}

func (x *PublishTransactionRequest) GetSignedTransaction() []byte {
	if x != nil {
		return x.SignedTransaction
	}
	return nil
}

type PublishTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
}

func (x *PublishTransactionResponse) Reset() {
	*x = PublishTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTransactionResponse) ProtoMessage() {}

func (x *PublishTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTransactionResponse.ProtoReflect.Descriptor instead.
func (*PublishTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{60}
}

func (x *PublishTransactionResponse) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

type PublishUnminedTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishUnminedTransactionsRequest) Reset() {
	*x = PublishUnminedTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishUnminedTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishUnminedTransactionsRequest) ProtoMessage() {}

func (x *PublishUnminedTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishUnminedTransactionsRequest.ProtoReflect.Descriptor instead.
func (*PublishUnminedTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{61}
}

type PublishUnminedTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishUnminedTransactionsResponse) Reset() {
	*x = PublishUnminedTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishUnminedTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishUnminedTransactionsResponse) ProtoMessage() {}

func (x *PublishUnminedTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishUnminedTransactionsResponse.ProtoReflect.Descriptor instead.
func (*PublishUnminedTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{62}
}

type PurchaseTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase            []byte  `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Account               uint32  `protobuf:"varint,2,opt,name=account,proto3" json:"account,omitempty"`
	SpendLimit            int64   `protobuf:"varint,3,opt,name=spend_limit,json=spendLimit,proto3" json:"spend_limit,omitempty"`
	RequiredConfirmations uint32  `protobuf:"varint,4,opt,name=required_confirmations,json=requiredConfirmations,proto3" json:"required_confirmations,omitempty"`
	TicketAddress         string  `protobuf:"bytes,5,opt,name=ticket_address,json=ticketAddress,proto3" json:"ticket_address,omitempty"`
	NumTickets            uint32  `protobuf:"varint,6,opt,name=num_tickets,json=numTickets,proto3" json:"num_tickets,omitempty"`
	PoolAddress           string  `protobuf:"bytes,7,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`
	PoolFees              float64 `protobuf:"fixed64,8,opt,name=pool_fees,json=poolFees,proto3" json:"pool_fees,omitempty"`
	Expiry                uint32  `protobuf:"varint,9,opt,name=expiry,proto3" json:"expiry,omitempty"`
	TxFee                 int64   `protobuf:"varint,10,opt,name=tx_fee,json=txFee,proto3" json:"tx_fee,omitempty"`
	TicketFee             int64   `protobuf:"varint,11,opt,name=ticket_fee,json=ticketFee,proto3" json:"ticket_fee,omitempty"`
	DontSignTx            bool    `protobuf:"varint,12,opt,name=dont_sign_tx,json=dontSignTx,proto3" json:"dont_sign_tx,omitempty"`
	CsppServer            string  `protobuf:"bytes,13,opt,name=cspp_server,json=csppServer,proto3" json:"cspp_server,omitempty"`
	MixedAccount          uint32  `protobuf:"varint,14,opt,name=mixed_account,json=mixedAccount,proto3" json:"mixed_account,omitempty"`
	MixedAccountBranch    uint32  `protobuf:"varint,15,opt,name=mixed_account_branch,json=mixedAccountBranch,proto3" json:"mixed_account_branch,omitempty"`
	MixedSplitAccount     uint32  `protobuf:"varint,16,opt,name=mixed_split_account,json=mixedSplitAccount,proto3" json:"mixed_split_account,omitempty"`
	ChangeAccount         uint32  `protobuf:"varint,17,opt,name=change_account,json=changeAccount,proto3" json:"change_account,omitempty"`
	VspHost               string  `protobuf:"bytes,18,opt,name=vsp_host,json=vspHost,proto3" json:"vsp_host,omitempty"`
	VspPubkey             string  `protobuf:"bytes,19,opt,name=vsp_pubkey,json=vspPubkey,proto3" json:"vsp_pubkey,omitempty"`
}

func (x *PurchaseTicketsRequest) Reset() {
	*x = PurchaseTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseTicketsRequest) ProtoMessage() {}

func (x *PurchaseTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseTicketsRequest.ProtoReflect.Descriptor instead.
func (*PurchaseTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{63}
}

func (x *PurchaseTicketsRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *PurchaseTicketsRequest) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetSpendLimit() int64 {
	if x != nil {
		return x.SpendLimit
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetRequiredConfirmations() uint32 {
	if x != nil {
		return x.RequiredConfirmations
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetTicketAddress() string {
	if x != nil {
		return x.TicketAddress
	}
	return ""
}

func (x *PurchaseTicketsRequest) GetNumTickets() uint32 {
	if x != nil {
		return x.NumTickets
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetPoolAddress() string {
	if x != nil {
		return x.PoolAddress
	}
	return ""
}

func (x *PurchaseTicketsRequest) GetPoolFees() float64 {
	if x != nil {
		return x.PoolFees
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetExpiry() uint32 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetTxFee() int64 {
	if x != nil {
		return x.TxFee
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetTicketFee() int64 {
	if x != nil {
		return x.TicketFee
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetDontSignTx() bool {
	if x != nil {
		return x.DontSignTx
	}
	return false
}

func (x *PurchaseTicketsRequest) GetCsppServer() string {
	if x != nil {
		return x.CsppServer
	}
	return ""
}

func (x *PurchaseTicketsRequest) GetMixedAccount() uint32 {
	if x != nil {
		return x.MixedAccount
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetMixedAccountBranch() uint32 {
	if x != nil {
		return x.MixedAccountBranch
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetMixedSplitAccount() uint32 {
	if x != nil {
		return x.MixedSplitAccount
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetChangeAccount() uint32 {
	if x != nil {
		return x.ChangeAccount
	}
	return 0
}

func (x *PurchaseTicketsRequest) GetVspHost() string {
	if x != nil {
		return x.VspHost
	}
	return ""
}

func (x *PurchaseTicketsRequest) GetVspPubkey() string {
	if x != nil {
		return x.VspPubkey
	}
	return ""
}

type PurchaseTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketHashes [][]byte `protobuf:"bytes,1,rep,name=ticket_hashes,json=ticketHashes,proto3" json:"ticket_hashes,omitempty"`
	Tickets      [][]byte `protobuf:"bytes,2,rep,name=tickets,proto3" json:"tickets,omitempty"`
	SplitTx      []byte   `protobuf:"bytes,3,opt,name=split_tx,json=splitTx,proto3" json:"split_tx,omitempty"`
}

func (x *PurchaseTicketsResponse) Reset() {
	*x = PurchaseTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseTicketsResponse) ProtoMessage() {}

func (x *PurchaseTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseTicketsResponse.ProtoReflect.Descriptor instead.
func (*PurchaseTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{64}
}

func (x *PurchaseTicketsResponse) GetTicketHashes() [][]byte {
	if x != nil {
		return x.TicketHashes
	}
	return nil
}

func (x *PurchaseTicketsResponse) GetTickets() [][]byte {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *PurchaseTicketsResponse) GetSplitTx() []byte {
	if x != nil {
		return x.SplitTx
	}
	return nil
}

type RevokeTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketHash []byte `protobuf:"bytes,1,opt,name=ticket_hash,json=ticketHash,proto3" json:"ticket_hash,omitempty"`
}

func (x *RevokeTicketRequest) Reset() {
	*x = RevokeTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeTicketRequest) ProtoMessage() {}

func (x *RevokeTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeTicketRequest.ProtoReflect.Descriptor instead.
func (*RevokeTicketRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{65}
}

func (x *RevokeTicketRequest) GetTicketHash() []byte {
	if x != nil {
		return x.TicketHash
	}
	return nil
}

type RevokeTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeTicketResponse) Reset() {
	*x = RevokeTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeTicketResponse) ProtoMessage() {}

func (x *RevokeTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeTicketResponse.ProtoReflect.Descriptor instead.
func (*RevokeTicketResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{66}
}

type RevokeTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase []byte `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *RevokeTicketsRequest) Reset() {
	*x = RevokeTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeTicketsRequest) ProtoMessage() {}

func (x *RevokeTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeTicketsRequest.ProtoReflect.Descriptor instead.
func (*RevokeTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{67}
}

func (x *RevokeTicketsRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

type RevokeTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeTicketsResponse) Reset() {
	*x = RevokeTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeTicketsResponse) ProtoMessage() {}

func (x *RevokeTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeTicketsResponse.ProtoReflect.Descriptor instead.
func (*RevokeTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{68}
}

type LoadActiveDataFiltersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoadActiveDataFiltersRequest) Reset() {
	*x = LoadActiveDataFiltersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadActiveDataFiltersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadActiveDataFiltersRequest) ProtoMessage() {}

func (x *LoadActiveDataFiltersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadActiveDataFiltersRequest.ProtoReflect.Descriptor instead.
func (*LoadActiveDataFiltersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{69}
}

type LoadActiveDataFiltersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoadActiveDataFiltersResponse) Reset() {
	*x = LoadActiveDataFiltersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadActiveDataFiltersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadActiveDataFiltersResponse) ProtoMessage() {}

func (x *LoadActiveDataFiltersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadActiveDataFiltersResponse.ProtoReflect.Descriptor instead.
func (*LoadActiveDataFiltersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{70}
}

type SignMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Passphrase []byte `protobuf:"bytes,3,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *SignMessageRequest) Reset() {
	*x = SignMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageRequest) ProtoMessage() {}

func (x *SignMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageRequest.ProtoReflect.Descriptor instead.
func (*SignMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{71}
}

func (x *SignMessageRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SignMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SignMessageRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

type SignMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SignMessageResponse) Reset() {
	*x = SignMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageResponse) ProtoMessage() {}

func (x *SignMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageResponse.ProtoReflect.Descriptor instead.
func (*SignMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{72}
}

func (x *SignMessageResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type SignMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase []byte                         `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Messages   []*SignMessagesRequest_Message `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *SignMessagesRequest) Reset() {
	*x = SignMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessagesRequest) ProtoMessage() {}

func (x *SignMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessagesRequest.ProtoReflect.Descriptor instead.
func (*SignMessagesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{73}
}

func (x *SignMessagesRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *SignMessagesRequest) GetMessages() []*SignMessagesRequest_Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SignMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies []*SignMessagesResponse_SignReply `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
}

func (x *SignMessagesResponse) Reset() {
	*x = SignMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessagesResponse) ProtoMessage() {}

func (x *SignMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessagesResponse.ProtoReflect.Descriptor instead.
func (*SignMessagesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{74}
}

func (x *SignMessagesResponse) GetReplies() []*SignMessagesResponse_SignReply {
	if x != nil {
		return x.Replies
	}
	return nil
}

type TransactionNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransactionNotificationsRequest) Reset() {
	*x = TransactionNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionNotificationsRequest) ProtoMessage() {}

func (x *TransactionNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionNotificationsRequest.ProtoReflect.Descriptor instead.
func (*TransactionNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{75}
}

type TransactionNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sorted by increasing height.  This is a repeated field so many new blocks
	// in a new best chain can be notified at once during a reorganize.
	AttachedBlocks []*BlockDetails `protobuf:"bytes,1,rep,name=attached_blocks,json=attachedBlocks,proto3" json:"attached_blocks,omitempty"`
	// If there was a chain reorganize, there may have been blocks with wallet
	// transactions that are no longer in the best chain.  These are those
	// block's hashes.
	DetachedBlocks [][]byte `protobuf:"bytes,2,rep,name=detached_blocks,json=detachedBlocks,proto3" json:"detached_blocks,omitempty"`
	// Any new unmined transactions are included here.  These unmined transactions
	// refer to the current best chain, so transactions from detached blocks may
	// be moved to mempool and included here if they are not mined or double spent
	// in the new chain.  Additionally, if no new blocks were attached but a relevant
	// unmined transaction is seen by the wallet, it will be reported here.
	UnminedTransactions []*TransactionDetails `protobuf:"bytes,3,rep,name=unmined_transactions,json=unminedTransactions,proto3" json:"unmined_transactions,omitempty"`
	// Instead of notifying all of the removed unmined transactions,
	// just send all of the current hashes.
	UnminedTransactionHashes [][]byte                `protobuf:"bytes,4,rep,name=unmined_transaction_hashes,json=unminedTransactionHashes,proto3" json:"unmined_transaction_hashes,omitempty"`
	DetachedBlockHeaders     []*DetachedBlockDetails `protobuf:"bytes,5,rep,name=detached_block_headers,json=detachedBlockHeaders,proto3" json:"detached_block_headers,omitempty"`
}

func (x *TransactionNotificationsResponse) Reset() {
	*x = TransactionNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionNotificationsResponse) ProtoMessage() {}

func (x *TransactionNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionNotificationsResponse.ProtoReflect.Descriptor instead.
func (*TransactionNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{76}
}

func (x *TransactionNotificationsResponse) GetAttachedBlocks() []*BlockDetails {
	if x != nil {
		return x.AttachedBlocks
	}
	return nil
}

func (x *TransactionNotificationsResponse) GetDetachedBlocks() [][]byte {
	if x != nil {
		return x.DetachedBlocks
	}
	return nil
}

func (x *TransactionNotificationsResponse) GetUnminedTransactions() []*TransactionDetails {
	if x != nil {
		return x.UnminedTransactions
	}
	return nil
}

func (x *TransactionNotificationsResponse) GetUnminedTransactionHashes() [][]byte {
	if x != nil {
		return x.UnminedTransactionHashes
	}
	return nil
}

func (x *TransactionNotificationsResponse) GetDetachedBlockHeaders() []*DetachedBlockDetails {
	if x != nil {
		return x.DetachedBlockHeaders
	}
	return nil
}

type AccountNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccountNotificationsRequest) Reset() {
	*x = AccountNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountNotificationsRequest) ProtoMessage() {}

func (x *AccountNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountNotificationsRequest.ProtoReflect.Descriptor instead.
func (*AccountNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{77}
}

type AccountNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber    uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	AccountName      string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	ExternalKeyCount uint32 `protobuf:"varint,3,opt,name=external_key_count,json=externalKeyCount,proto3" json:"external_key_count,omitempty"`
	InternalKeyCount uint32 `protobuf:"varint,4,opt,name=internal_key_count,json=internalKeyCount,proto3" json:"internal_key_count,omitempty"`
	ImportedKeyCount uint32 `protobuf:"varint,5,opt,name=imported_key_count,json=importedKeyCount,proto3" json:"imported_key_count,omitempty"`
}

func (x *AccountNotificationsResponse) Reset() {
	*x = AccountNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountNotificationsResponse) ProtoMessage() {}

func (x *AccountNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountNotificationsResponse.ProtoReflect.Descriptor instead.
func (*AccountNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{78}
}

func (x *AccountNotificationsResponse) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *AccountNotificationsResponse) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AccountNotificationsResponse) GetExternalKeyCount() uint32 {
	if x != nil {
		return x.ExternalKeyCount
	}
	return 0
}

func (x *AccountNotificationsResponse) GetInternalKeyCount() uint32 {
	if x != nil {
		return x.InternalKeyCount
	}
	return 0
}

func (x *AccountNotificationsResponse) GetImportedKeyCount() uint32 {
	if x != nil {
		return x.ImportedKeyCount
	}
	return 0
}

type ConfirmationNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHashes  [][]byte `protobuf:"bytes,1,rep,name=tx_hashes,json=txHashes,proto3" json:"tx_hashes,omitempty"`
	StopAfter int32    `protobuf:"varint,2,opt,name=stop_after,json=stopAfter,proto3" json:"stop_after,omitempty"`
}

func (x *ConfirmationNotificationsRequest) Reset() {
	*x = ConfirmationNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmationNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmationNotificationsRequest) ProtoMessage() {}

func (x *ConfirmationNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmationNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ConfirmationNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{79}
}

func (x *ConfirmationNotificationsRequest) GetTxHashes() [][]byte {
	if x != nil {
		return x.TxHashes
	}
	return nil
}

func (x *ConfirmationNotificationsRequest) GetStopAfter() int32 {
	if x != nil {
		return x.StopAfter
	}
	return 0
}

type ConfirmationNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confirmations []*ConfirmationNotificationsResponse_TransactionConfirmations `protobuf:"bytes,1,rep,name=confirmations,proto3" json:"confirmations,omitempty"`
}

func (x *ConfirmationNotificationsResponse) Reset() {
	*x = ConfirmationNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmationNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmationNotificationsResponse) ProtoMessage() {}

func (x *ConfirmationNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmationNotificationsResponse.ProtoReflect.Descriptor instead.
func (*ConfirmationNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{80}
}

func (x *ConfirmationNotificationsResponse) GetConfirmations() []*ConfirmationNotificationsResponse_TransactionConfirmations {
	if x != nil {
		return x.Confirmations
	}
	return nil
}

type CreateWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicPassphrase  []byte `protobuf:"bytes,1,opt,name=public_passphrase,json=publicPassphrase,proto3" json:"public_passphrase,omitempty"`
	PrivatePassphrase []byte `protobuf:"bytes,2,opt,name=private_passphrase,json=privatePassphrase,proto3" json:"private_passphrase,omitempty"`
	Seed              []byte `protobuf:"bytes,3,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{81}
}

func (x *CreateWalletRequest) GetPublicPassphrase() []byte {
	if x != nil {
		return x.PublicPassphrase
	}
	return nil
}

func (x *CreateWalletRequest) GetPrivatePassphrase() []byte {
	if x != nil {
		return x.PrivatePassphrase
	}
	return nil
}

func (x *CreateWalletRequest) GetSeed() []byte {
	if x != nil {
		return x.Seed
	}
	return nil
}

type CreateWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateWalletResponse) Reset() {
	*x = CreateWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletResponse) ProtoMessage() {}

func (x *CreateWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletResponse.ProtoReflect.Descriptor instead.
func (*CreateWalletResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{82}
}

type CreateWatchingOnlyWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtendedPubKey   string `protobuf:"bytes,1,opt,name=extended_pub_key,json=extendedPubKey,proto3" json:"extended_pub_key,omitempty"`
	PublicPassphrase []byte `protobuf:"bytes,2,opt,name=public_passphrase,json=publicPassphrase,proto3" json:"public_passphrase,omitempty"`
}

func (x *CreateWatchingOnlyWalletRequest) Reset() {
	*x = CreateWatchingOnlyWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWatchingOnlyWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWatchingOnlyWalletRequest) ProtoMessage() {}

func (x *CreateWatchingOnlyWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWatchingOnlyWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWatchingOnlyWalletRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{83}
}

func (x *CreateWatchingOnlyWalletRequest) GetExtendedPubKey() string {
	if x != nil {
		return x.ExtendedPubKey
	}
	return ""
}

func (x *CreateWatchingOnlyWalletRequest) GetPublicPassphrase() []byte {
	if x != nil {
		return x.PublicPassphrase
	}
	return nil
}

type CreateWatchingOnlyWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateWatchingOnlyWalletResponse) Reset() {
	*x = CreateWatchingOnlyWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWatchingOnlyWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWatchingOnlyWalletResponse) ProtoMessage() {}

func (x *CreateWatchingOnlyWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWatchingOnlyWalletResponse.ProtoReflect.Descriptor instead.
func (*CreateWatchingOnlyWalletResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{84}
}

type OpenWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicPassphrase []byte `protobuf:"bytes,1,opt,name=public_passphrase,json=publicPassphrase,proto3" json:"public_passphrase,omitempty"`
}

func (x *OpenWalletRequest) Reset() {
	*x = OpenWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenWalletRequest) ProtoMessage() {}

func (x *OpenWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenWalletRequest.ProtoReflect.Descriptor instead.
func (*OpenWalletRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{85}
}

func (x *OpenWalletRequest) GetPublicPassphrase() []byte {
	if x != nil {
		return x.PublicPassphrase
	}
	return nil
}

type OpenWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WatchingOnly bool `protobuf:"varint,1,opt,name=watching_only,json=watchingOnly,proto3" json:"watching_only,omitempty"`
}

func (x *OpenWalletResponse) Reset() {
	*x = OpenWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenWalletResponse) ProtoMessage() {}

func (x *OpenWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenWalletResponse.ProtoReflect.Descriptor instead.
func (*OpenWalletResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{86}
}

func (x *OpenWalletResponse) GetWatchingOnly() bool {
	if x != nil {
		return x.WatchingOnly
	}
	return false
}

type CloseWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseWalletRequest) Reset() {
	*x = CloseWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseWalletRequest) ProtoMessage() {}

func (x *CloseWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseWalletRequest.ProtoReflect.Descriptor instead.
func (*CloseWalletRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{87}
}

type CloseWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseWalletResponse) Reset() {
	*x = CloseWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseWalletResponse) ProtoMessage() {}

func (x *CloseWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseWalletResponse.ProtoReflect.Descriptor instead.
func (*CloseWalletResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{88}
}

type WalletExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WalletExistsRequest) Reset() {
	*x = WalletExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletExistsRequest) ProtoMessage() {}

func (x *WalletExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletExistsRequest.ProtoReflect.Descriptor instead.
func (*WalletExistsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{89}
}

type WalletExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *WalletExistsResponse) Reset() {
	*x = WalletExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletExistsResponse) ProtoMessage() {}

func (x *WalletExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletExistsResponse.ProtoReflect.Descriptor instead.
func (*WalletExistsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{90}
}

func (x *WalletExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type StartConsensusRpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkAddress string `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
	Username       string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password       []byte `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Certificate    []byte `protobuf:"bytes,4,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *StartConsensusRpcRequest) Reset() {
	*x = StartConsensusRpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartConsensusRpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartConsensusRpcRequest) ProtoMessage() {}

func (x *StartConsensusRpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartConsensusRpcRequest.ProtoReflect.Descriptor instead.
func (*StartConsensusRpcRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{91}
}

func (x *StartConsensusRpcRequest) GetNetworkAddress() string {
	if x != nil {
		return x.NetworkAddress
	}
	return ""
}

func (x *StartConsensusRpcRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StartConsensusRpcRequest) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *StartConsensusRpcRequest) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type StartConsensusRpcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartConsensusRpcResponse) Reset() {
	*x = StartConsensusRpcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartConsensusRpcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartConsensusRpcResponse) ProtoMessage() {}

func (x *StartConsensusRpcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartConsensusRpcResponse.ProtoReflect.Descriptor instead.
func (*StartConsensusRpcResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{92}
}

type DiscoverAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscoverAccounts  bool   `protobuf:"varint,1,opt,name=discover_accounts,json=discoverAccounts,proto3" json:"discover_accounts,omitempty"`
	PrivatePassphrase []byte `protobuf:"bytes,2,opt,name=private_passphrase,json=privatePassphrase,proto3" json:"private_passphrase,omitempty"`
	StartingBlockHash []byte `protobuf:"bytes,3,opt,name=starting_block_hash,json=startingBlockHash,proto3" json:"starting_block_hash,omitempty"`
}

func (x *DiscoverAddressesRequest) Reset() {
	*x = DiscoverAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverAddressesRequest) ProtoMessage() {}

func (x *DiscoverAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverAddressesRequest.ProtoReflect.Descriptor instead.
func (*DiscoverAddressesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{93}
}

func (x *DiscoverAddressesRequest) GetDiscoverAccounts() bool {
	if x != nil {
		return x.DiscoverAccounts
	}
	return false
}

func (x *DiscoverAddressesRequest) GetPrivatePassphrase() []byte {
	if x != nil {
		return x.PrivatePassphrase
	}
	return nil
}

func (x *DiscoverAddressesRequest) GetStartingBlockHash() []byte {
	if x != nil {
		return x.StartingBlockHash
	}
	return nil
}

type DiscoverAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscoverAddressesResponse) Reset() {
	*x = DiscoverAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverAddressesResponse) ProtoMessage() {}

func (x *DiscoverAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverAddressesResponse.ProtoReflect.Descriptor instead.
func (*DiscoverAddressesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{94}
}

type FetchMissingCFiltersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FetchMissingCFiltersRequest) Reset() {
	*x = FetchMissingCFiltersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchMissingCFiltersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchMissingCFiltersRequest) ProtoMessage() {}

func (x *FetchMissingCFiltersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchMissingCFiltersRequest.ProtoReflect.Descriptor instead.
func (*FetchMissingCFiltersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{95}
}

type FetchMissingCFiltersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FetchMissingCFiltersResponse) Reset() {
	*x = FetchMissingCFiltersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchMissingCFiltersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchMissingCFiltersResponse) ProtoMessage() {}

func (x *FetchMissingCFiltersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchMissingCFiltersResponse.ProtoReflect.Descriptor instead.
func (*FetchMissingCFiltersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{96}
}

type SubscribeToBlockNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeToBlockNotificationsRequest) Reset() {
	*x = SubscribeToBlockNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToBlockNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToBlockNotificationsRequest) ProtoMessage() {}

func (x *SubscribeToBlockNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToBlockNotificationsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToBlockNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{97}
}

type SubscribeToBlockNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeToBlockNotificationsResponse) Reset() {
	*x = SubscribeToBlockNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToBlockNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToBlockNotificationsResponse) ProtoMessage() {}

func (x *SubscribeToBlockNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToBlockNotificationsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToBlockNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{98}
}

type FetchHeadersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FetchHeadersRequest) Reset() {
	*x = FetchHeadersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchHeadersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchHeadersRequest) ProtoMessage() {}

func (x *FetchHeadersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchHeadersRequest.ProtoReflect.Descriptor instead.
func (*FetchHeadersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{99}
}

type FetchHeadersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FetchedHeadersCount     uint32 `protobuf:"varint,1,opt,name=fetched_headers_count,json=fetchedHeadersCount,proto3" json:"fetched_headers_count,omitempty"`
	FirstNewBlockHash       []byte `protobuf:"bytes,2,opt,name=first_new_block_hash,json=firstNewBlockHash,proto3" json:"first_new_block_hash,omitempty"`
	FirstNewBlockHeight     int32  `protobuf:"varint,3,opt,name=first_new_block_height,json=firstNewBlockHeight,proto3" json:"first_new_block_height,omitempty"`
	MainChainTipBlockHash   []byte `protobuf:"bytes,4,opt,name=main_chain_tip_block_hash,json=mainChainTipBlockHash,proto3" json:"main_chain_tip_block_hash,omitempty"`
	MainChainTipBlockHeight int32  `protobuf:"varint,5,opt,name=main_chain_tip_block_height,json=mainChainTipBlockHeight,proto3" json:"main_chain_tip_block_height,omitempty"`
}

func (x *FetchHeadersResponse) Reset() {
	*x = FetchHeadersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchHeadersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchHeadersResponse) ProtoMessage() {}

func (x *FetchHeadersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchHeadersResponse.ProtoReflect.Descriptor instead.
func (*FetchHeadersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{100}
}

func (x *FetchHeadersResponse) GetFetchedHeadersCount() uint32 {
	if x != nil {
		return x.FetchedHeadersCount
	}
	return 0
}

func (x *FetchHeadersResponse) GetFirstNewBlockHash() []byte {
	if x != nil {
		return x.FirstNewBlockHash
	}
	return nil
}

func (x *FetchHeadersResponse) GetFirstNewBlockHeight() int32 {
	if x != nil {
		return x.FirstNewBlockHeight
	}
	return 0
}

func (x *FetchHeadersResponse) GetMainChainTipBlockHash() []byte {
	if x != nil {
		return x.MainChainTipBlockHash
	}
	return nil
}

func (x *FetchHeadersResponse) GetMainChainTipBlockHeight() int32 {
	if x != nil {
		return x.MainChainTipBlockHeight
	}
	return 0
}

type FetchHeadersNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FetchedHeadersCount int32 `protobuf:"varint,1,opt,name=fetched_headers_count,json=fetchedHeadersCount,proto3" json:"fetched_headers_count,omitempty"`
	LastHeaderTime      int64 `protobuf:"varint,2,opt,name=last_header_time,json=lastHeaderTime,proto3" json:"last_header_time,omitempty"`
}

func (x *FetchHeadersNotification) Reset() {
	*x = FetchHeadersNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchHeadersNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchHeadersNotification) ProtoMessage() {}

func (x *FetchHeadersNotification) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchHeadersNotification.ProtoReflect.Descriptor instead.
func (*FetchHeadersNotification) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{101}
}

func (x *FetchHeadersNotification) GetFetchedHeadersCount() int32 {
	if x != nil {
		return x.FetchedHeadersCount
	}
	return 0
}

func (x *FetchHeadersNotification) GetLastHeaderTime() int64 {
	if x != nil {
		return x.LastHeaderTime
	}
	return 0
}

type FetchMissingCFiltersNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FetchedCfiltersStartHeight int32 `protobuf:"varint,1,opt,name=fetched_cfilters_start_height,json=fetchedCfiltersStartHeight,proto3" json:"fetched_cfilters_start_height,omitempty"`
	FetchedCfiltersEndHeight   int32 `protobuf:"varint,2,opt,name=fetched_cfilters_end_height,json=fetchedCfiltersEndHeight,proto3" json:"fetched_cfilters_end_height,omitempty"`
}

func (x *FetchMissingCFiltersNotification) Reset() {
	*x = FetchMissingCFiltersNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchMissingCFiltersNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchMissingCFiltersNotification) ProtoMessage() {}

func (x *FetchMissingCFiltersNotification) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchMissingCFiltersNotification.ProtoReflect.Descriptor instead.
func (*FetchMissingCFiltersNotification) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{102}
}

func (x *FetchMissingCFiltersNotification) GetFetchedCfiltersStartHeight() int32 {
	if x != nil {
		return x.FetchedCfiltersStartHeight
	}
	return 0
}

func (x *FetchMissingCFiltersNotification) GetFetchedCfiltersEndHeight() int32 {
	if x != nil {
		return x.FetchedCfiltersEndHeight
	}
	return 0
}

type RescanProgressNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RescannedThrough int32 `protobuf:"varint,1,opt,name=rescanned_through,json=rescannedThrough,proto3" json:"rescanned_through,omitempty"`
}

func (x *RescanProgressNotification) Reset() {
	*x = RescanProgressNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescanProgressNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescanProgressNotification) ProtoMessage() {}

func (x *RescanProgressNotification) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescanProgressNotification.ProtoReflect.Descriptor instead.
func (*RescanProgressNotification) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{103}
}

func (x *RescanProgressNotification) GetRescannedThrough() int32 {
	if x != nil {
		return x.RescannedThrough
	}
	return 0
}

type PeerNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerCount int32  `protobuf:"varint,1,opt,name=peer_count,json=peerCount,proto3" json:"peer_count,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *PeerNotification) Reset() {
	*x = PeerNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerNotification) ProtoMessage() {}

func (x *PeerNotification) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerNotification.ProtoReflect.Descriptor instead.
func (*PeerNotification) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{104}
}

func (x *PeerNotification) GetPeerCount() int32 {
	if x != nil {
		return x.PeerCount
	}
	return 0
}

func (x *PeerNotification) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RpcSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkAddress    string `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
	Username          string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password          []byte `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Certificate       []byte `protobuf:"bytes,4,opt,name=certificate,proto3" json:"certificate,omitempty"`
	DiscoverAccounts  bool   `protobuf:"varint,5,opt,name=discover_accounts,json=discoverAccounts,proto3" json:"discover_accounts,omitempty"`
	PrivatePassphrase []byte `protobuf:"bytes,6,opt,name=private_passphrase,json=privatePassphrase,proto3" json:"private_passphrase,omitempty"`
}

func (x *RpcSyncRequest) Reset() {
	*x = RpcSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSyncRequest) ProtoMessage() {}

func (x *RpcSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSyncRequest.ProtoReflect.Descriptor instead.
func (*RpcSyncRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{105}
}

func (x *RpcSyncRequest) GetNetworkAddress() string {
	if x != nil {
		return x.NetworkAddress
	}
	return ""
}

func (x *RpcSyncRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RpcSyncRequest) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *RpcSyncRequest) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *RpcSyncRequest) GetDiscoverAccounts() bool {
	if x != nil {
		return x.DiscoverAccounts
	}
	return false
}

func (x *RpcSyncRequest) GetPrivatePassphrase() []byte {
	if x != nil {
		return x.PrivatePassphrase
	}
	return nil
}

type RpcSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Synced               bool                              `protobuf:"varint,1,opt,name=synced,proto3" json:"synced,omitempty"`
	NotificationType     SyncNotificationType              `protobuf:"varint,2,opt,name=notification_type,json=notificationType,proto3,enum=walletrpc.SyncNotificationType" json:"notification_type,omitempty"`
	FetchHeaders         *FetchHeadersNotification         `protobuf:"bytes,3,opt,name=fetch_headers,json=fetchHeaders,proto3" json:"fetch_headers,omitempty"`
	FetchMissingCfilters *FetchMissingCFiltersNotification `protobuf:"bytes,4,opt,name=fetch_missing_cfilters,json=fetchMissingCfilters,proto3" json:"fetch_missing_cfilters,omitempty"`
	RescanProgress       *RescanProgressNotification       `protobuf:"bytes,5,opt,name=rescan_progress,json=rescanProgress,proto3" json:"rescan_progress,omitempty"`
	PeerInformation      *PeerNotification                 `protobuf:"bytes,6,opt,name=peer_information,json=peerInformation,proto3" json:"peer_information,omitempty"`
}

func (x *RpcSyncResponse) Reset() {
	*x = RpcSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSyncResponse) ProtoMessage() {}

func (x *RpcSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSyncResponse.ProtoReflect.Descriptor instead.
func (*RpcSyncResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{106}
}

func (x *RpcSyncResponse) GetSynced() bool {
	if x != nil {
		return x.Synced
	}
	return false
}

func (x *RpcSyncResponse) GetNotificationType() SyncNotificationType {
	if x != nil {
		return x.NotificationType
	}
	return SyncNotificationType_SYNCED
}

func (x *RpcSyncResponse) GetFetchHeaders() *FetchHeadersNotification {
	if x != nil {
		return x.FetchHeaders
	}
	return nil
}

func (x *RpcSyncResponse) GetFetchMissingCfilters() *FetchMissingCFiltersNotification {
	if x != nil {
		return x.FetchMissingCfilters
	}
	return nil
}

func (x *RpcSyncResponse) GetRescanProgress() *RescanProgressNotification {
	if x != nil {
		return x.RescanProgress
	}
	return nil
}

func (x *RpcSyncResponse) GetPeerInformation() *PeerNotification {
	if x != nil {
		return x.PeerInformation
	}
	return nil
}

type SpvSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscoverAccounts  bool     `protobuf:"varint,1,opt,name=discover_accounts,json=discoverAccounts,proto3" json:"discover_accounts,omitempty"`
	PrivatePassphrase []byte   `protobuf:"bytes,2,opt,name=private_passphrase,json=privatePassphrase,proto3" json:"private_passphrase,omitempty"`
	SpvConnect        []string `protobuf:"bytes,3,rep,name=spv_connect,json=spvConnect,proto3" json:"spv_connect,omitempty"`
}

func (x *SpvSyncRequest) Reset() {
	*x = SpvSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpvSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpvSyncRequest) ProtoMessage() {}

func (x *SpvSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpvSyncRequest.ProtoReflect.Descriptor instead.
func (*SpvSyncRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{107}
}

func (x *SpvSyncRequest) GetDiscoverAccounts() bool {
	if x != nil {
		return x.DiscoverAccounts
	}
	return false
}

func (x *SpvSyncRequest) GetPrivatePassphrase() []byte {
	if x != nil {
		return x.PrivatePassphrase
	}
	return nil
}

func (x *SpvSyncRequest) GetSpvConnect() []string {
	if x != nil {
		return x.SpvConnect
	}
	return nil
}

type SpvSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Synced               bool                              `protobuf:"varint,1,opt,name=synced,proto3" json:"synced,omitempty"`
	NotificationType     SyncNotificationType              `protobuf:"varint,2,opt,name=notification_type,json=notificationType,proto3,enum=walletrpc.SyncNotificationType" json:"notification_type,omitempty"`
	FetchHeaders         *FetchHeadersNotification         `protobuf:"bytes,3,opt,name=fetch_headers,json=fetchHeaders,proto3" json:"fetch_headers,omitempty"`
	FetchMissingCfilters *FetchMissingCFiltersNotification `protobuf:"bytes,4,opt,name=fetch_missing_cfilters,json=fetchMissingCfilters,proto3" json:"fetch_missing_cfilters,omitempty"`
	RescanProgress       *RescanProgressNotification       `protobuf:"bytes,5,opt,name=rescan_progress,json=rescanProgress,proto3" json:"rescan_progress,omitempty"`
	PeerInformation      *PeerNotification                 `protobuf:"bytes,6,opt,name=peer_information,json=peerInformation,proto3" json:"peer_information,omitempty"`
}

func (x *SpvSyncResponse) Reset() {
	*x = SpvSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpvSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpvSyncResponse) ProtoMessage() {}

func (x *SpvSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpvSyncResponse.ProtoReflect.Descriptor instead.
func (*SpvSyncResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{108}
}

func (x *SpvSyncResponse) GetSynced() bool {
	if x != nil {
		return x.Synced
	}
	return false
}

func (x *SpvSyncResponse) GetNotificationType() SyncNotificationType {
	if x != nil {
		return x.NotificationType
	}
	return SyncNotificationType_SYNCED
}

func (x *SpvSyncResponse) GetFetchHeaders() *FetchHeadersNotification {
	if x != nil {
		return x.FetchHeaders
	}
	return nil
}

func (x *SpvSyncResponse) GetFetchMissingCfilters() *FetchMissingCFiltersNotification {
	if x != nil {
		return x.FetchMissingCfilters
	}
	return nil
}

func (x *SpvSyncResponse) GetRescanProgress() *RescanProgressNotification {
	if x != nil {
		return x.RescanProgress
	}
	return nil
}

func (x *SpvSyncResponse) GetPeerInformation() *PeerNotification {
	if x != nil {
		return x.PeerInformation
	}
	return nil
}

type RescanPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RescanPointRequest) Reset() {
	*x = RescanPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescanPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescanPointRequest) ProtoMessage() {}

func (x *RescanPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescanPointRequest.ProtoReflect.Descriptor instead.
func (*RescanPointRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{109}
}

type RescanPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RescanPointHash []byte `protobuf:"bytes,1,opt,name=rescan_point_hash,json=rescanPointHash,proto3" json:"rescan_point_hash,omitempty"`
}

func (x *RescanPointResponse) Reset() {
	*x = RescanPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescanPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescanPointResponse) ProtoMessage() {}

func (x *RescanPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescanPointResponse.ProtoReflect.Descriptor instead.
func (*RescanPointResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{110}
}

func (x *RescanPointResponse) GetRescanPointHash() []byte {
	if x != nil {
		return x.RescanPointHash
	}
	return nil
}

type GenerateRandomSeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeedLength uint32 `protobuf:"varint,1,opt,name=seed_length,json=seedLength,proto3" json:"seed_length,omitempty"`
}

func (x *GenerateRandomSeedRequest) Reset() {
	*x = GenerateRandomSeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateRandomSeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRandomSeedRequest) ProtoMessage() {}

func (x *GenerateRandomSeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRandomSeedRequest.ProtoReflect.Descriptor instead.
func (*GenerateRandomSeedRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{111}
}

func (x *GenerateRandomSeedRequest) GetSeedLength() uint32 {
	if x != nil {
		return x.SeedLength
	}
	return 0
}

type GenerateRandomSeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeedBytes    []byte `protobuf:"bytes,1,opt,name=seed_bytes,json=seedBytes,proto3" json:"seed_bytes,omitempty"`
	SeedHex      string `protobuf:"bytes,2,opt,name=seed_hex,json=seedHex,proto3" json:"seed_hex,omitempty"`
	SeedMnemonic string `protobuf:"bytes,3,opt,name=seed_mnemonic,json=seedMnemonic,proto3" json:"seed_mnemonic,omitempty"`
}

func (x *GenerateRandomSeedResponse) Reset() {
	*x = GenerateRandomSeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateRandomSeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRandomSeedResponse) ProtoMessage() {}

func (x *GenerateRandomSeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRandomSeedResponse.ProtoReflect.Descriptor instead.
func (*GenerateRandomSeedResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{112}
}

func (x *GenerateRandomSeedResponse) GetSeedBytes() []byte {
	if x != nil {
		return x.SeedBytes
	}
	return nil
}

func (x *GenerateRandomSeedResponse) GetSeedHex() string {
	if x != nil {
		return x.SeedHex
	}
	return ""
}

func (x *GenerateRandomSeedResponse) GetSeedMnemonic() string {
	if x != nil {
		return x.SeedMnemonic
	}
	return ""
}

type DecodeSeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInput string `protobuf:"bytes,1,opt,name=user_input,json=userInput,proto3" json:"user_input,omitempty"`
}

func (x *DecodeSeedRequest) Reset() {
	*x = DecodeSeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeSeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeSeedRequest) ProtoMessage() {}

func (x *DecodeSeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeSeedRequest.ProtoReflect.Descriptor instead.
func (*DecodeSeedRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{113}
}

func (x *DecodeSeedRequest) GetUserInput() string {
	if x != nil {
		return x.UserInput
	}
	return ""
}

type DecodeSeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecodedSeed []byte `protobuf:"bytes,1,opt,name=decoded_seed,json=decodedSeed,proto3" json:"decoded_seed,omitempty"`
}

func (x *DecodeSeedResponse) Reset() {
	*x = DecodeSeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeSeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeSeedResponse) ProtoMessage() {}

func (x *DecodeSeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeSeedResponse.ProtoReflect.Descriptor instead.
func (*DecodeSeedResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{114}
}

func (x *DecodeSeedResponse) GetDecodedSeed() []byte {
	if x != nil {
		return x.DecodedSeed
	}
	return nil
}

type RunTicketBuyerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase         []byte  `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Account            uint32  `protobuf:"varint,2,opt,name=account,proto3" json:"account,omitempty"`
	VotingAccount      uint32  `protobuf:"varint,3,opt,name=voting_account,json=votingAccount,proto3" json:"voting_account,omitempty"`
	BalanceToMaintain  int64   `protobuf:"varint,4,opt,name=balance_to_maintain,json=balanceToMaintain,proto3" json:"balance_to_maintain,omitempty"`
	VotingAddress      string  `protobuf:"bytes,5,opt,name=voting_address,json=votingAddress,proto3" json:"voting_address,omitempty"`
	PoolAddress        string  `protobuf:"bytes,6,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`
	PoolFees           float64 `protobuf:"fixed64,7,opt,name=pool_fees,json=poolFees,proto3" json:"pool_fees,omitempty"`
	VspHost            string  `protobuf:"bytes,8,opt,name=vsp_host,json=vspHost,proto3" json:"vsp_host,omitempty"`
	VspPubkey          string  `protobuf:"bytes,9,opt,name=vsp_pubkey,json=vspPubkey,proto3" json:"vsp_pubkey,omitempty"`
	Limit              int32   `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	CsppServer         string  `protobuf:"bytes,11,opt,name=cspp_server,json=csppServer,proto3" json:"cspp_server,omitempty"`
	MixedAccount       uint32  `protobuf:"varint,12,opt,name=mixed_account,json=mixedAccount,proto3" json:"mixed_account,omitempty"`
	MixedAccountBranch uint32  `protobuf:"varint,13,opt,name=mixed_account_branch,json=mixedAccountBranch,proto3" json:"mixed_account_branch,omitempty"`
	MixedSplitAccount  uint32  `protobuf:"varint,14,opt,name=mixed_split_account,json=mixedSplitAccount,proto3" json:"mixed_split_account,omitempty"`
	ChangeAccount      uint32  `protobuf:"varint,15,opt,name=change_account,json=changeAccount,proto3" json:"change_account,omitempty"`
}

func (x *RunTicketBuyerRequest) Reset() {
	*x = RunTicketBuyerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTicketBuyerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTicketBuyerRequest) ProtoMessage() {}

func (x *RunTicketBuyerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTicketBuyerRequest.ProtoReflect.Descriptor instead.
func (*RunTicketBuyerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{115}
}

func (x *RunTicketBuyerRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *RunTicketBuyerRequest) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *RunTicketBuyerRequest) GetVotingAccount() uint32 {
	if x != nil {
		return x.VotingAccount
	}
	return 0
}

func (x *RunTicketBuyerRequest) GetBalanceToMaintain() int64 {
	if x != nil {
		return x.BalanceToMaintain
	}
	return 0
}

func (x *RunTicketBuyerRequest) GetVotingAddress() string {
	if x != nil {
		return x.VotingAddress
	}
	return ""
}

func (x *RunTicketBuyerRequest) GetPoolAddress() string {
	if x != nil {
		return x.PoolAddress
	}
	return ""
}

func (x *RunTicketBuyerRequest) GetPoolFees() float64 {
	if x != nil {
		return x.PoolFees
	}
	return 0
}

func (x *RunTicketBuyerRequest) GetVspHost() string {
	if x != nil {
		return x.VspHost
	}
	return ""
}

func (x *RunTicketBuyerRequest) GetVspPubkey() string {
	if x != nil {
		return x.VspPubkey
	}
	return ""
}

func (x *RunTicketBuyerRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RunTicketBuyerRequest) GetCsppServer() string {
	if x != nil {
		return x.CsppServer
	}
	return ""
}

func (x *RunTicketBuyerRequest) GetMixedAccount() uint32 {
	if x != nil {
		return x.MixedAccount
	}
	return 0
}

func (x *RunTicketBuyerRequest) GetMixedAccountBranch() uint32 {
	if x != nil {
		return x.MixedAccountBranch
	}
	return 0
}

func (x *RunTicketBuyerRequest) GetMixedSplitAccount() uint32 {
	if x != nil {
		return x.MixedSplitAccount
	}
	return 0
}

func (x *RunTicketBuyerRequest) GetChangeAccount() uint32 {
	if x != nil {
		return x.ChangeAccount
	}
	return 0
}

type RunTicketBuyerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunTicketBuyerResponse) Reset() {
	*x = RunTicketBuyerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTicketBuyerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTicketBuyerResponse) ProtoMessage() {}

func (x *RunTicketBuyerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTicketBuyerResponse.ProtoReflect.Descriptor instead.
func (*RunTicketBuyerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{116}
}

type RunAccountMixerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase         []byte `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	MixedAccount       uint32 `protobuf:"varint,2,opt,name=mixed_account,json=mixedAccount,proto3" json:"mixed_account,omitempty"`
	MixedAccountBranch uint32 `protobuf:"varint,3,opt,name=mixed_account_branch,json=mixedAccountBranch,proto3" json:"mixed_account_branch,omitempty"`
	ChangeAccount      uint32 `protobuf:"varint,4,opt,name=change_account,json=changeAccount,proto3" json:"change_account,omitempty"`
	CsppServer         string `protobuf:"bytes,5,opt,name=cspp_server,json=csppServer,proto3" json:"cspp_server,omitempty"`
}

func (x *RunAccountMixerRequest) Reset() {
	*x = RunAccountMixerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunAccountMixerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAccountMixerRequest) ProtoMessage() {}

func (x *RunAccountMixerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAccountMixerRequest.ProtoReflect.Descriptor instead.
func (*RunAccountMixerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{117}
}

func (x *RunAccountMixerRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *RunAccountMixerRequest) GetMixedAccount() uint32 {
	if x != nil {
		return x.MixedAccount
	}
	return 0
}

func (x *RunAccountMixerRequest) GetMixedAccountBranch() uint32 {
	if x != nil {
		return x.MixedAccountBranch
	}
	return 0
}

func (x *RunAccountMixerRequest) GetChangeAccount() uint32 {
	if x != nil {
		return x.ChangeAccount
	}
	return 0
}

func (x *RunAccountMixerRequest) GetCsppServer() string {
	if x != nil {
		return x.CsppServer
	}
	return ""
}

type RunAccountMixerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunAccountMixerResponse) Reset() {
	*x = RunAccountMixerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunAccountMixerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAccountMixerResponse) ProtoMessage() {}

func (x *RunAccountMixerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAccountMixerResponse.ProtoReflect.Descriptor instead.
func (*RunAccountMixerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{118}
}

type StartAutoBuyerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase        []byte  `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Account           uint32  `protobuf:"varint,2,opt,name=account,proto3" json:"account,omitempty"`
	BalanceToMaintain int64   `protobuf:"varint,3,opt,name=balance_to_maintain,json=balanceToMaintain,proto3" json:"balance_to_maintain,omitempty"`
	MaxFeePerKb       int64   `protobuf:"varint,4,opt,name=max_fee_per_kb,json=maxFeePerKb,proto3" json:"max_fee_per_kb,omitempty"`
	MaxPriceRelative  float64 `protobuf:"fixed64,5,opt,name=max_price_relative,json=maxPriceRelative,proto3" json:"max_price_relative,omitempty"`
	MaxPriceAbsolute  int64   `protobuf:"varint,6,opt,name=max_price_absolute,json=maxPriceAbsolute,proto3" json:"max_price_absolute,omitempty"`
	VotingAddress     string  `protobuf:"bytes,7,opt,name=voting_address,json=votingAddress,proto3" json:"voting_address,omitempty"`
	PoolAddress       string  `protobuf:"bytes,8,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`
	PoolFees          float64 `protobuf:"fixed64,9,opt,name=pool_fees,json=poolFees,proto3" json:"pool_fees,omitempty"`
	MaxPerBlock       int64   `protobuf:"varint,10,opt,name=max_per_block,json=maxPerBlock,proto3" json:"max_per_block,omitempty"`
}

func (x *StartAutoBuyerRequest) Reset() {
	*x = StartAutoBuyerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartAutoBuyerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAutoBuyerRequest) ProtoMessage() {}

func (x *StartAutoBuyerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAutoBuyerRequest.ProtoReflect.Descriptor instead.
func (*StartAutoBuyerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{119}
}

func (x *StartAutoBuyerRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *StartAutoBuyerRequest) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *StartAutoBuyerRequest) GetBalanceToMaintain() int64 {
	if x != nil {
		return x.BalanceToMaintain
	}
	return 0
}

func (x *StartAutoBuyerRequest) GetMaxFeePerKb() int64 {
	if x != nil {
		return x.MaxFeePerKb
	}
	return 0
}

func (x *StartAutoBuyerRequest) GetMaxPriceRelative() float64 {
	if x != nil {
		return x.MaxPriceRelative
	}
	return 0
}

func (x *StartAutoBuyerRequest) GetMaxPriceAbsolute() int64 {
	if x != nil {
		return x.MaxPriceAbsolute
	}
	return 0
}

func (x *StartAutoBuyerRequest) GetVotingAddress() string {
	if x != nil {
		return x.VotingAddress
	}
	return ""
}

func (x *StartAutoBuyerRequest) GetPoolAddress() string {
	if x != nil {
		return x.PoolAddress
	}
	return ""
}

func (x *StartAutoBuyerRequest) GetPoolFees() float64 {
	if x != nil {
		return x.PoolFees
	}
	return 0
}

func (x *StartAutoBuyerRequest) GetMaxPerBlock() int64 {
	if x != nil {
		return x.MaxPerBlock
	}
	return 0
}

type StartAutoBuyerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartAutoBuyerResponse) Reset() {
	*x = StartAutoBuyerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartAutoBuyerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAutoBuyerResponse) ProtoMessage() {}

func (x *StartAutoBuyerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAutoBuyerResponse.ProtoReflect.Descriptor instead.
func (*StartAutoBuyerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{120}
}

type StopAutoBuyerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopAutoBuyerRequest) Reset() {
	*x = StopAutoBuyerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAutoBuyerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAutoBuyerRequest) ProtoMessage() {}

func (x *StopAutoBuyerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAutoBuyerRequest.ProtoReflect.Descriptor instead.
func (*StopAutoBuyerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{121}
}

type StopAutoBuyerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopAutoBuyerResponse) Reset() {
	*x = StopAutoBuyerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAutoBuyerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAutoBuyerResponse) ProtoMessage() {}

func (x *StopAutoBuyerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAutoBuyerResponse.ProtoReflect.Descriptor instead.
func (*StopAutoBuyerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{122}
}

type TicketBuyerConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TicketBuyerConfigRequest) Reset() {
	*x = TicketBuyerConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketBuyerConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketBuyerConfigRequest) ProtoMessage() {}

func (x *TicketBuyerConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketBuyerConfigRequest.ProtoReflect.Descriptor instead.
func (*TicketBuyerConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{123}
}

type TicketBuyerConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account               uint32  `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	AvgPriceMode          string  `protobuf:"bytes,2,opt,name=avg_price_mode,json=avgPriceMode,proto3" json:"avg_price_mode,omitempty"`
	AvgPriceVWAPDelta     int64   `protobuf:"varint,3,opt,name=avg_priceVWAP_delta,json=avgPriceVWAPDelta,proto3" json:"avg_priceVWAP_delta,omitempty"`
	BalanceToMaintain     int64   `protobuf:"varint,4,opt,name=balance_to_maintain,json=balanceToMaintain,proto3" json:"balance_to_maintain,omitempty"`
	BlocksToAvg           int64   `protobuf:"varint,5,opt,name=blocks_to_avg,json=blocksToAvg,proto3" json:"blocks_to_avg,omitempty"`
	DontWaitForTickets    bool    `protobuf:"varint,6,opt,name=dont_wait_for_tickets,json=dontWaitForTickets,proto3" json:"dont_wait_for_tickets,omitempty"`
	ExpiryDelta           int64   `protobuf:"varint,7,opt,name=expiry_delta,json=expiryDelta,proto3" json:"expiry_delta,omitempty"`
	FeeSource             string  `protobuf:"bytes,8,opt,name=fee_source,json=feeSource,proto3" json:"fee_source,omitempty"`
	FeeTargetScaling      float64 `protobuf:"fixed64,9,opt,name=fee_target_scaling,json=feeTargetScaling,proto3" json:"fee_target_scaling,omitempty"`
	MinFee                int64   `protobuf:"varint,10,opt,name=min_fee,json=minFee,proto3" json:"min_fee,omitempty"`
	MaxFee                int64   `protobuf:"varint,12,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	MaxPerBlock           int64   `protobuf:"varint,13,opt,name=max_per_block,json=maxPerBlock,proto3" json:"max_per_block,omitempty"`
	MaxPriceAbsolute      int64   `protobuf:"varint,14,opt,name=max_price_absolute,json=maxPriceAbsolute,proto3" json:"max_price_absolute,omitempty"`
	MaxPriceRelative      float64 `protobuf:"fixed64,15,opt,name=max_price_relative,json=maxPriceRelative,proto3" json:"max_price_relative,omitempty"`
	MaxInMempool          int64   `protobuf:"varint,17,opt,name=max_in_mempool,json=maxInMempool,proto3" json:"max_in_mempool,omitempty"`
	PoolAddress           string  `protobuf:"bytes,18,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`
	PoolFees              float64 `protobuf:"fixed64,19,opt,name=pool_fees,json=poolFees,proto3" json:"pool_fees,omitempty"`
	SpreadTicketPurchases bool    `protobuf:"varint,20,opt,name=spread_ticket_purchases,json=spreadTicketPurchases,proto3" json:"spread_ticket_purchases,omitempty"`
	VotingAddress         string  `protobuf:"bytes,21,opt,name=voting_address,json=votingAddress,proto3" json:"voting_address,omitempty"`
	TxFee                 int64   `protobuf:"varint,22,opt,name=tx_fee,json=txFee,proto3" json:"tx_fee,omitempty"`
}

func (x *TicketBuyerConfigResponse) Reset() {
	*x = TicketBuyerConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketBuyerConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketBuyerConfigResponse) ProtoMessage() {}

func (x *TicketBuyerConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketBuyerConfigResponse.ProtoReflect.Descriptor instead.
func (*TicketBuyerConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{124}
}

func (x *TicketBuyerConfigResponse) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetAvgPriceMode() string {
	if x != nil {
		return x.AvgPriceMode
	}
	return ""
}

func (x *TicketBuyerConfigResponse) GetAvgPriceVWAPDelta() int64 {
	if x != nil {
		return x.AvgPriceVWAPDelta
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetBalanceToMaintain() int64 {
	if x != nil {
		return x.BalanceToMaintain
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetBlocksToAvg() int64 {
	if x != nil {
		return x.BlocksToAvg
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetDontWaitForTickets() bool {
	if x != nil {
		return x.DontWaitForTickets
	}
	return false
}

func (x *TicketBuyerConfigResponse) GetExpiryDelta() int64 {
	if x != nil {
		return x.ExpiryDelta
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetFeeSource() string {
	if x != nil {
		return x.FeeSource
	}
	return ""
}

func (x *TicketBuyerConfigResponse) GetFeeTargetScaling() float64 {
	if x != nil {
		return x.FeeTargetScaling
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetMinFee() int64 {
	if x != nil {
		return x.MinFee
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetMaxFee() int64 {
	if x != nil {
		return x.MaxFee
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetMaxPerBlock() int64 {
	if x != nil {
		return x.MaxPerBlock
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetMaxPriceAbsolute() int64 {
	if x != nil {
		return x.MaxPriceAbsolute
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetMaxPriceRelative() float64 {
	if x != nil {
		return x.MaxPriceRelative
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetMaxInMempool() int64 {
	if x != nil {
		return x.MaxInMempool
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetPoolAddress() string {
	if x != nil {
		return x.PoolAddress
	}
	return ""
}

func (x *TicketBuyerConfigResponse) GetPoolFees() float64 {
	if x != nil {
		return x.PoolFees
	}
	return 0
}

func (x *TicketBuyerConfigResponse) GetSpreadTicketPurchases() bool {
	if x != nil {
		return x.SpreadTicketPurchases
	}
	return false
}

func (x *TicketBuyerConfigResponse) GetVotingAddress() string {
	if x != nil {
		return x.VotingAddress
	}
	return ""
}

func (x *TicketBuyerConfigResponse) GetTxFee() int64 {
	if x != nil {
		return x.TxFee
	}
	return 0
}

type SetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account uint32 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *SetAccountRequest) Reset() {
	*x = SetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountRequest) ProtoMessage() {}

func (x *SetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountRequest.ProtoReflect.Descriptor instead.
func (*SetAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{125}
}

func (x *SetAccountRequest) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

type SetAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAccountResponse) Reset() {
	*x = SetAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountResponse) ProtoMessage() {}

func (x *SetAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountResponse.ProtoReflect.Descriptor instead.
func (*SetAccountResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{126}
}

type SetBalanceToMaintainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BalanceToMaintain int64 `protobuf:"varint,1,opt,name=balance_to_maintain,json=balanceToMaintain,proto3" json:"balance_to_maintain,omitempty"`
}

func (x *SetBalanceToMaintainRequest) Reset() {
	*x = SetBalanceToMaintainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBalanceToMaintainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBalanceToMaintainRequest) ProtoMessage() {}

func (x *SetBalanceToMaintainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBalanceToMaintainRequest.ProtoReflect.Descriptor instead.
func (*SetBalanceToMaintainRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{127}
}

func (x *SetBalanceToMaintainRequest) GetBalanceToMaintain() int64 {
	if x != nil {
		return x.BalanceToMaintain
	}
	return 0
}

type SetBalanceToMaintainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetBalanceToMaintainResponse) Reset() {
	*x = SetBalanceToMaintainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBalanceToMaintainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBalanceToMaintainResponse) ProtoMessage() {}

func (x *SetBalanceToMaintainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBalanceToMaintainResponse.ProtoReflect.Descriptor instead.
func (*SetBalanceToMaintainResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{128}
}

type SetMaxFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxFeePerKb int64 `protobuf:"varint,1,opt,name=max_fee_per_kb,json=maxFeePerKb,proto3" json:"max_fee_per_kb,omitempty"`
}

func (x *SetMaxFeeRequest) Reset() {
	*x = SetMaxFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaxFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxFeeRequest) ProtoMessage() {}

func (x *SetMaxFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxFeeRequest.ProtoReflect.Descriptor instead.
func (*SetMaxFeeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{129}
}

func (x *SetMaxFeeRequest) GetMaxFeePerKb() int64 {
	if x != nil {
		return x.MaxFeePerKb
	}
	return 0
}

type SetMaxFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMaxFeeResponse) Reset() {
	*x = SetMaxFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaxFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxFeeResponse) ProtoMessage() {}

func (x *SetMaxFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxFeeResponse.ProtoReflect.Descriptor instead.
func (*SetMaxFeeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{130}
}

type SetMaxPriceRelativeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPriceRelative float64 `protobuf:"fixed64,1,opt,name=max_price_relative,json=maxPriceRelative,proto3" json:"max_price_relative,omitempty"`
}

func (x *SetMaxPriceRelativeRequest) Reset() {
	*x = SetMaxPriceRelativeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaxPriceRelativeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxPriceRelativeRequest) ProtoMessage() {}

func (x *SetMaxPriceRelativeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxPriceRelativeRequest.ProtoReflect.Descriptor instead.
func (*SetMaxPriceRelativeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{131}
}

func (x *SetMaxPriceRelativeRequest) GetMaxPriceRelative() float64 {
	if x != nil {
		return x.MaxPriceRelative
	}
	return 0
}

type SetMaxPriceRelativeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMaxPriceRelativeResponse) Reset() {
	*x = SetMaxPriceRelativeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaxPriceRelativeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxPriceRelativeResponse) ProtoMessage() {}

func (x *SetMaxPriceRelativeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxPriceRelativeResponse.ProtoReflect.Descriptor instead.
func (*SetMaxPriceRelativeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{132}
}

type SetMaxPriceAbsoluteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPriceAbsolute int64 `protobuf:"varint,1,opt,name=max_price_absolute,json=maxPriceAbsolute,proto3" json:"max_price_absolute,omitempty"`
}

func (x *SetMaxPriceAbsoluteRequest) Reset() {
	*x = SetMaxPriceAbsoluteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaxPriceAbsoluteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxPriceAbsoluteRequest) ProtoMessage() {}

func (x *SetMaxPriceAbsoluteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxPriceAbsoluteRequest.ProtoReflect.Descriptor instead.
func (*SetMaxPriceAbsoluteRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{133}
}

func (x *SetMaxPriceAbsoluteRequest) GetMaxPriceAbsolute() int64 {
	if x != nil {
		return x.MaxPriceAbsolute
	}
	return 0
}

type SetMaxPriceAbsoluteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMaxPriceAbsoluteResponse) Reset() {
	*x = SetMaxPriceAbsoluteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaxPriceAbsoluteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxPriceAbsoluteResponse) ProtoMessage() {}

func (x *SetMaxPriceAbsoluteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxPriceAbsoluteResponse.ProtoReflect.Descriptor instead.
func (*SetMaxPriceAbsoluteResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{134}
}

type SetVotingAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VotingAddress string `protobuf:"bytes,1,opt,name=voting_address,json=votingAddress,proto3" json:"voting_address,omitempty"`
}

func (x *SetVotingAddressRequest) Reset() {
	*x = SetVotingAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVotingAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVotingAddressRequest) ProtoMessage() {}

func (x *SetVotingAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVotingAddressRequest.ProtoReflect.Descriptor instead.
func (*SetVotingAddressRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{135}
}

func (x *SetVotingAddressRequest) GetVotingAddress() string {
	if x != nil {
		return x.VotingAddress
	}
	return ""
}

type SetVotingAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetVotingAddressResponse) Reset() {
	*x = SetVotingAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVotingAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVotingAddressResponse) ProtoMessage() {}

func (x *SetVotingAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVotingAddressResponse.ProtoReflect.Descriptor instead.
func (*SetVotingAddressResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{136}
}

type SetPoolAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolAddress string `protobuf:"bytes,1,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`
}

func (x *SetPoolAddressRequest) Reset() {
	*x = SetPoolAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPoolAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPoolAddressRequest) ProtoMessage() {}

func (x *SetPoolAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPoolAddressRequest.ProtoReflect.Descriptor instead.
func (*SetPoolAddressRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{137}
}

func (x *SetPoolAddressRequest) GetPoolAddress() string {
	if x != nil {
		return x.PoolAddress
	}
	return ""
}

type SetPoolAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPoolAddressResponse) Reset() {
	*x = SetPoolAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPoolAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPoolAddressResponse) ProtoMessage() {}

func (x *SetPoolAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPoolAddressResponse.ProtoReflect.Descriptor instead.
func (*SetPoolAddressResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{138}
}

type SetPoolFeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolFees float64 `protobuf:"fixed64,1,opt,name=pool_fees,json=poolFees,proto3" json:"pool_fees,omitempty"`
}

func (x *SetPoolFeesRequest) Reset() {
	*x = SetPoolFeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPoolFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPoolFeesRequest) ProtoMessage() {}

func (x *SetPoolFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPoolFeesRequest.ProtoReflect.Descriptor instead.
func (*SetPoolFeesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{139}
}

func (x *SetPoolFeesRequest) GetPoolFees() float64 {
	if x != nil {
		return x.PoolFees
	}
	return 0
}

type SetPoolFeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPoolFeesResponse) Reset() {
	*x = SetPoolFeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPoolFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPoolFeesResponse) ProtoMessage() {}

func (x *SetPoolFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPoolFeesResponse.ProtoReflect.Descriptor instead.
func (*SetPoolFeesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{140}
}

type SetMaxPerBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPerBlock int64 `protobuf:"varint,1,opt,name=max_per_block,json=maxPerBlock,proto3" json:"max_per_block,omitempty"`
}

func (x *SetMaxPerBlockRequest) Reset() {
	*x = SetMaxPerBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaxPerBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxPerBlockRequest) ProtoMessage() {}

func (x *SetMaxPerBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxPerBlockRequest.ProtoReflect.Descriptor instead.
func (*SetMaxPerBlockRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{141}
}

func (x *SetMaxPerBlockRequest) GetMaxPerBlock() int64 {
	if x != nil {
		return x.MaxPerBlock
	}
	return 0
}

type SetMaxPerBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMaxPerBlockResponse) Reset() {
	*x = SetMaxPerBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaxPerBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxPerBlockResponse) ProtoMessage() {}

func (x *SetMaxPerBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxPerBlockResponse.ProtoReflect.Descriptor instead.
func (*SetMaxPerBlockResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{142}
}

type AgendasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgendasRequest) Reset() {
	*x = AgendasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgendasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgendasRequest) ProtoMessage() {}

func (x *AgendasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgendasRequest.ProtoReflect.Descriptor instead.
func (*AgendasRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{143}
}

type AgendasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint32                    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Agendas []*AgendasResponse_Agenda `protobuf:"bytes,2,rep,name=agendas,proto3" json:"agendas,omitempty"`
}

func (x *AgendasResponse) Reset() {
	*x = AgendasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgendasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgendasResponse) ProtoMessage() {}

func (x *AgendasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgendasResponse.ProtoReflect.Descriptor instead.
func (*AgendasResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{144}
}

func (x *AgendasResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AgendasResponse) GetAgendas() []*AgendasResponse_Agenda {
	if x != nil {
		return x.Agendas
	}
	return nil
}

type VoteChoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketHash []byte `protobuf:"bytes,1,opt,name=ticket_hash,json=ticketHash,proto3" json:"ticket_hash,omitempty"`
}

func (x *VoteChoicesRequest) Reset() {
	*x = VoteChoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteChoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteChoicesRequest) ProtoMessage() {}

func (x *VoteChoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteChoicesRequest.ProtoReflect.Descriptor instead.
func (*VoteChoicesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{145}
}

func (x *VoteChoicesRequest) GetTicketHash() []byte {
	if x != nil {
		return x.TicketHash
	}
	return nil
}

type VoteChoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  uint32                        `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Choices  []*VoteChoicesResponse_Choice `protobuf:"bytes,2,rep,name=choices,proto3" json:"choices,omitempty"`
	Votebits uint32                        `protobuf:"varint,3,opt,name=votebits,proto3" json:"votebits,omitempty"`
}

func (x *VoteChoicesResponse) Reset() {
	*x = VoteChoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteChoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteChoicesResponse) ProtoMessage() {}

func (x *VoteChoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteChoicesResponse.ProtoReflect.Descriptor instead.
func (*VoteChoicesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{146}
}

func (x *VoteChoicesResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *VoteChoicesResponse) GetChoices() []*VoteChoicesResponse_Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *VoteChoicesResponse) GetVotebits() uint32 {
	if x != nil {
		return x.Votebits
	}
	return 0
}

type SetVoteChoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choices    []*SetVoteChoicesRequest_Choice `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
	TicketHash []byte                          `protobuf:"bytes,2,opt,name=ticket_hash,json=ticketHash,proto3" json:"ticket_hash,omitempty"`
}

func (x *SetVoteChoicesRequest) Reset() {
	*x = SetVoteChoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVoteChoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVoteChoicesRequest) ProtoMessage() {}

func (x *SetVoteChoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVoteChoicesRequest.ProtoReflect.Descriptor instead.
func (*SetVoteChoicesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{147}
}

func (x *SetVoteChoicesRequest) GetChoices() []*SetVoteChoicesRequest_Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *SetVoteChoicesRequest) GetTicketHash() []byte {
	if x != nil {
		return x.TicketHash
	}
	return nil
}

type SetVoteChoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Votebits uint32 `protobuf:"varint,1,opt,name=votebits,proto3" json:"votebits,omitempty"`
}

func (x *SetVoteChoicesResponse) Reset() {
	*x = SetVoteChoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVoteChoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVoteChoicesResponse) ProtoMessage() {}

func (x *SetVoteChoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVoteChoicesResponse.ProtoReflect.Descriptor instead.
func (*SetVoteChoicesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{148}
}

func (x *SetVoteChoicesResponse) GetVotebits() uint32 {
	if x != nil {
		return x.Votebits
	}
	return 0
}

type VerifyMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *VerifyMessageRequest) Reset() {
	*x = VerifyMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageRequest) ProtoMessage() {}

func (x *VerifyMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageRequest.ProtoReflect.Descriptor instead.
func (*VerifyMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{149}
}

func (x *VerifyMessageRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *VerifyMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerifyMessageRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type VerifyMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *VerifyMessageResponse) Reset() {
	*x = VerifyMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageResponse) ProtoMessage() {}

func (x *VerifyMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageResponse.ProtoReflect.Descriptor instead.
func (*VerifyMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{150}
}

func (x *VerifyMessageResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type DecodedTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte                             `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	Version         int32                              `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	LockTime        uint32                             `protobuf:"varint,3,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	Expiry          uint32                             `protobuf:"varint,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	TransactionType TransactionDetails_TransactionType `protobuf:"varint,5,opt,name=transaction_type,json=transactionType,proto3,enum=walletrpc.TransactionDetails_TransactionType" json:"transaction_type,omitempty"`
	Inputs          []*DecodedTransaction_Input        `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs         []*DecodedTransaction_Output       `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *DecodedTransaction) Reset() {
	*x = DecodedTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedTransaction) ProtoMessage() {}

func (x *DecodedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedTransaction.ProtoReflect.Descriptor instead.
func (*DecodedTransaction) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{151}
}

func (x *DecodedTransaction) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *DecodedTransaction) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DecodedTransaction) GetLockTime() uint32 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *DecodedTransaction) GetExpiry() uint32 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *DecodedTransaction) GetTransactionType() TransactionDetails_TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionDetails_REGULAR
}

func (x *DecodedTransaction) GetInputs() []*DecodedTransaction_Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *DecodedTransaction) GetOutputs() []*DecodedTransaction_Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type DecodeRawTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializedTransaction []byte `protobuf:"bytes,1,opt,name=serialized_transaction,json=serializedTransaction,proto3" json:"serialized_transaction,omitempty"`
}

func (x *DecodeRawTransactionRequest) Reset() {
	*x = DecodeRawTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeRawTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeRawTransactionRequest) ProtoMessage() {}

func (x *DecodeRawTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeRawTransactionRequest.ProtoReflect.Descriptor instead.
func (*DecodeRawTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{152}
}

func (x *DecodeRawTransactionRequest) GetSerializedTransaction() []byte {
	if x != nil {
		return x.SerializedTransaction
	}
	return nil
}

type DecodeRawTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *DecodedTransaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *DecodeRawTransactionResponse) Reset() {
	*x = DecodeRawTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeRawTransactionResponse) ProtoMessage() {}

func (x *DecodeRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*DecodeRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{153}
}

func (x *DecodeRawTransactionResponse) GetTransaction() *DecodedTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type ValidateAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ValidateAddressRequest) Reset() {
	*x = ValidateAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAddressRequest) ProtoMessage() {}

func (x *ValidateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAddressRequest.ProtoReflect.Descriptor instead.
func (*ValidateAddressRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{154}
}

func (x *ValidateAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ValidateAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid         bool                               `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	IsMine          bool                               `protobuf:"varint,2,opt,name=is_mine,json=isMine,proto3" json:"is_mine,omitempty"`
	AccountNumber   uint32                             `protobuf:"varint,3,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	PubKeyAddr      string                             `protobuf:"bytes,4,opt,name=pub_key_addr,json=pubKeyAddr,proto3" json:"pub_key_addr,omitempty"`
	PubKey          []byte                             `protobuf:"bytes,5,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	IsScript        bool                               `protobuf:"varint,6,opt,name=is_script,json=isScript,proto3" json:"is_script,omitempty"`
	PkScriptAddrs   []string                           `protobuf:"bytes,7,rep,name=pk_script_addrs,json=pkScriptAddrs,proto3" json:"pk_script_addrs,omitempty"`
	ScriptType      ValidateAddressResponse_ScriptType `protobuf:"varint,8,opt,name=script_type,json=scriptType,proto3,enum=walletrpc.ValidateAddressResponse_ScriptType" json:"script_type,omitempty"`
	PayToAddrScript []byte                             `protobuf:"bytes,9,opt,name=pay_to_addr_script,json=payToAddrScript,proto3" json:"pay_to_addr_script,omitempty"`
	SigsRequired    uint32                             `protobuf:"varint,10,opt,name=sigs_required,json=sigsRequired,proto3" json:"sigs_required,omitempty"`
	IsInternal      bool                               `protobuf:"varint,11,opt,name=is_internal,json=isInternal,proto3" json:"is_internal,omitempty"`
	Index           uint32                             `protobuf:"varint,12,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ValidateAddressResponse) Reset() {
	*x = ValidateAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAddressResponse) ProtoMessage() {}

func (x *ValidateAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAddressResponse.ProtoReflect.Descriptor instead.
func (*ValidateAddressResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{155}
}

func (x *ValidateAddressResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidateAddressResponse) GetIsMine() bool {
	if x != nil {
		return x.IsMine
	}
	return false
}

func (x *ValidateAddressResponse) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *ValidateAddressResponse) GetPubKeyAddr() string {
	if x != nil {
		return x.PubKeyAddr
	}
	return ""
}

func (x *ValidateAddressResponse) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *ValidateAddressResponse) GetIsScript() bool {
	if x != nil {
		return x.IsScript
	}
	return false
}

func (x *ValidateAddressResponse) GetPkScriptAddrs() []string {
	if x != nil {
		return x.PkScriptAddrs
	}
	return nil
}

func (x *ValidateAddressResponse) GetScriptType() ValidateAddressResponse_ScriptType {
	if x != nil {
		return x.ScriptType
	}
	return ValidateAddressResponse_NonStandardTy
}

func (x *ValidateAddressResponse) GetPayToAddrScript() []byte {
	if x != nil {
		return x.PayToAddrScript
	}
	return nil
}

func (x *ValidateAddressResponse) GetSigsRequired() uint32 {
	if x != nil {
		return x.SigsRequired
	}
	return 0
}

func (x *ValidateAddressResponse) GetIsInternal() bool {
	if x != nil {
		return x.IsInternal
	}
	return false
}

func (x *ValidateAddressResponse) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type CommittedTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets [][]byte `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *CommittedTicketsRequest) Reset() {
	*x = CommittedTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommittedTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommittedTicketsRequest) ProtoMessage() {}

func (x *CommittedTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommittedTicketsRequest.ProtoReflect.Descriptor instead.
func (*CommittedTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{156}
}

func (x *CommittedTicketsRequest) GetTickets() [][]byte {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type GetAccountExtendedPubKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
}

func (x *GetAccountExtendedPubKeyRequest) Reset() {
	*x = GetAccountExtendedPubKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountExtendedPubKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountExtendedPubKeyRequest) ProtoMessage() {}

func (x *GetAccountExtendedPubKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountExtendedPubKeyRequest.ProtoReflect.Descriptor instead.
func (*GetAccountExtendedPubKeyRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{157}
}

func (x *GetAccountExtendedPubKeyRequest) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

type GetAccountExtendedPubKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccExtendedPubKey string `protobuf:"bytes,1,opt,name=acc_extended_pub_key,json=accExtendedPubKey,proto3" json:"acc_extended_pub_key,omitempty"`
}

func (x *GetAccountExtendedPubKeyResponse) Reset() {
	*x = GetAccountExtendedPubKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountExtendedPubKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountExtendedPubKeyResponse) ProtoMessage() {}

func (x *GetAccountExtendedPubKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountExtendedPubKeyResponse.ProtoReflect.Descriptor instead.
func (*GetAccountExtendedPubKeyResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{158}
}

func (x *GetAccountExtendedPubKeyResponse) GetAccExtendedPubKey() string {
	if x != nil {
		return x.AccExtendedPubKey
	}
	return ""
}

type GetAccountExtendedPrivKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Passphrase    []byte `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *GetAccountExtendedPrivKeyRequest) Reset() {
	*x = GetAccountExtendedPrivKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountExtendedPrivKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountExtendedPrivKeyRequest) ProtoMessage() {}

func (x *GetAccountExtendedPrivKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountExtendedPrivKeyRequest.ProtoReflect.Descriptor instead.
func (*GetAccountExtendedPrivKeyRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{159}
}

func (x *GetAccountExtendedPrivKeyRequest) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *GetAccountExtendedPrivKeyRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

type GetAccountExtendedPrivKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccExtendedPrivKey string `protobuf:"bytes,1,opt,name=acc_extended_priv_key,json=accExtendedPrivKey,proto3" json:"acc_extended_priv_key,omitempty"`
}

func (x *GetAccountExtendedPrivKeyResponse) Reset() {
	*x = GetAccountExtendedPrivKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountExtendedPrivKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountExtendedPrivKeyResponse) ProtoMessage() {}

func (x *GetAccountExtendedPrivKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountExtendedPrivKeyResponse.ProtoReflect.Descriptor instead.
func (*GetAccountExtendedPrivKeyResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{160}
}

func (x *GetAccountExtendedPrivKeyResponse) GetAccExtendedPrivKey() string {
	if x != nil {
		return x.AccExtendedPrivKey
	}
	return ""
}

type CommittedTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketAddresses []*CommittedTicketsResponse_TicketAddress `protobuf:"bytes,1,rep,name=ticketAddresses,proto3" json:"ticketAddresses,omitempty"`
}

func (x *CommittedTicketsResponse) Reset() {
	*x = CommittedTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommittedTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommittedTicketsResponse) ProtoMessage() {}

func (x *CommittedTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommittedTicketsResponse.ProtoReflect.Descriptor instead.
func (*CommittedTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{161}
}

func (x *CommittedTicketsResponse) GetTicketAddresses() []*CommittedTicketsResponse_TicketAddress {
	if x != nil {
		return x.TicketAddresses
	}
	return nil
}

type BestBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BestBlockRequest) Reset() {
	*x = BestBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BestBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BestBlockRequest) ProtoMessage() {}

func (x *BestBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BestBlockRequest.ProtoReflect.Descriptor instead.
func (*BestBlockRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{162}
}

type BestBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint32 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Hash   []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *BestBlockResponse) Reset() {
	*x = BestBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BestBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BestBlockResponse) ProtoMessage() {}

func (x *BestBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BestBlockResponse.ProtoReflect.Descriptor instead.
func (*BestBlockResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{163}
}

func (x *BestBlockResponse) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BestBlockResponse) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type SweepAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAccount         string  `protobuf:"bytes,1,opt,name=source_account,json=sourceAccount,proto3" json:"source_account,omitempty"`
	DestinationAddress    string  `protobuf:"bytes,2,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	RequiredConfirmations uint32  `protobuf:"varint,3,opt,name=required_confirmations,json=requiredConfirmations,proto3" json:"required_confirmations,omitempty"`
	FeePerKb              float64 `protobuf:"fixed64,4,opt,name=fee_per_kb,json=feePerKb,proto3" json:"fee_per_kb,omitempty"`
}

func (x *SweepAccountRequest) Reset() {
	*x = SweepAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SweepAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SweepAccountRequest) ProtoMessage() {}

func (x *SweepAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SweepAccountRequest.ProtoReflect.Descriptor instead.
func (*SweepAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{164}
}

func (x *SweepAccountRequest) GetSourceAccount() string {
	if x != nil {
		return x.SourceAccount
	}
	return ""
}

func (x *SweepAccountRequest) GetDestinationAddress() string {
	if x != nil {
		return x.DestinationAddress
	}
	return ""
}

func (x *SweepAccountRequest) GetRequiredConfirmations() uint32 {
	if x != nil {
		return x.RequiredConfirmations
	}
	return 0
}

func (x *SweepAccountRequest) GetFeePerKb() float64 {
	if x != nil {
		return x.FeePerKb
	}
	return 0
}

type SweepAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnsignedTransaction       []byte `protobuf:"bytes,1,opt,name=unsigned_transaction,json=unsignedTransaction,proto3" json:"unsigned_transaction,omitempty"`
	TotalPreviousOutputAmount int64  `protobuf:"varint,2,opt,name=total_previous_output_amount,json=totalPreviousOutputAmount,proto3" json:"total_previous_output_amount,omitempty"`
	TotalOutputAmount         int64  `protobuf:"varint,3,opt,name=total_output_amount,json=totalOutputAmount,proto3" json:"total_output_amount,omitempty"`
	EstimatedSignedSize       uint32 `protobuf:"varint,4,opt,name=estimated_signed_size,json=estimatedSignedSize,proto3" json:"estimated_signed_size,omitempty"`
}

func (x *SweepAccountResponse) Reset() {
	*x = SweepAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SweepAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SweepAccountResponse) ProtoMessage() {}

func (x *SweepAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SweepAccountResponse.ProtoReflect.Descriptor instead.
func (*SweepAccountResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{165}
}

func (x *SweepAccountResponse) GetUnsignedTransaction() []byte {
	if x != nil {
		return x.UnsignedTransaction
	}
	return nil
}

func (x *SweepAccountResponse) GetTotalPreviousOutputAmount() int64 {
	if x != nil {
		return x.TotalPreviousOutputAmount
	}
	return 0
}

func (x *SweepAccountResponse) GetTotalOutputAmount() int64 {
	if x != nil {
		return x.TotalOutputAmount
	}
	return 0
}

func (x *SweepAccountResponse) GetEstimatedSignedSize() uint32 {
	if x != nil {
		return x.EstimatedSignedSize
	}
	return 0
}

type AbandonTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
}

func (x *AbandonTransactionRequest) Reset() {
	*x = AbandonTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonTransactionRequest) ProtoMessage() {}

func (x *AbandonTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonTransactionRequest.ProtoReflect.Descriptor instead.
func (*AbandonTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{166}
}

func (x *AbandonTransactionRequest) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

type AbandonTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AbandonTransactionResponse) Reset() {
	*x = AbandonTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonTransactionResponse) ProtoMessage() {}

func (x *AbandonTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonTransactionResponse.ProtoReflect.Descriptor instead.
func (*AbandonTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{167}
}

type SignHashesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase []byte   `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Address    string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Hashes     [][]byte `protobuf:"bytes,3,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (x *SignHashesRequest) Reset() {
	*x = SignHashesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignHashesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignHashesRequest) ProtoMessage() {}

func (x *SignHashesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignHashesRequest.ProtoReflect.Descriptor instead.
func (*SignHashesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{168}
}

func (x *SignHashesRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *SignHashesRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SignHashesRequest) GetHashes() [][]byte {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type SignHashesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey  []byte   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signatures [][]byte `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *SignHashesResponse) Reset() {
	*x = SignHashesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignHashesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignHashesResponse) ProtoMessage() {}

func (x *SignHashesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignHashesResponse.ProtoReflect.Descriptor instead.
func (*SignHashesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{169}
}

func (x *SignHashesResponse) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *SignHashesResponse) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type SpenderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	Index           uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *SpenderRequest) Reset() {
	*x = SpenderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpenderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpenderRequest) ProtoMessage() {}

func (x *SpenderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpenderRequest.ProtoReflect.Descriptor instead.
func (*SpenderRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{170}
}

func (x *SpenderRequest) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *SpenderRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type SpenderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpenderTransaction []byte `protobuf:"bytes,1,opt,name=spender_transaction,json=spenderTransaction,proto3" json:"spender_transaction,omitempty"`
	InputIndex         uint32 `protobuf:"varint,2,opt,name=input_index,json=inputIndex,proto3" json:"input_index,omitempty"`
}

func (x *SpenderResponse) Reset() {
	*x = SpenderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpenderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpenderResponse) ProtoMessage() {}

func (x *SpenderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpenderResponse.ProtoReflect.Descriptor instead.
func (*SpenderResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{171}
}

func (x *SpenderResponse) GetSpenderTransaction() []byte {
	if x != nil {
		return x.SpenderTransaction
	}
	return nil
}

func (x *SpenderResponse) GetInputIndex() uint32 {
	if x != nil {
		return x.InputIndex
	}
	return 0
}

type GetCFiltersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartingBlockHash   []byte `protobuf:"bytes,1,opt,name=starting_block_hash,json=startingBlockHash,proto3" json:"starting_block_hash,omitempty"`
	StartingBlockHeight int32  `protobuf:"zigzag32,2,opt,name=starting_block_height,json=startingBlockHeight,proto3" json:"starting_block_height,omitempty"`
	EndingBlockHash     []byte `protobuf:"bytes,3,opt,name=ending_block_hash,json=endingBlockHash,proto3" json:"ending_block_hash,omitempty"`
	EndingBlockHeight   int32  `protobuf:"zigzag32,4,opt,name=ending_block_height,json=endingBlockHeight,proto3" json:"ending_block_height,omitempty"`
}

func (x *GetCFiltersRequest) Reset() {
	*x = GetCFiltersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCFiltersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCFiltersRequest) ProtoMessage() {}

func (x *GetCFiltersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCFiltersRequest.ProtoReflect.Descriptor instead.
func (*GetCFiltersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{172}
}

func (x *GetCFiltersRequest) GetStartingBlockHash() []byte {
	if x != nil {
		return x.StartingBlockHash
	}
	return nil
}

func (x *GetCFiltersRequest) GetStartingBlockHeight() int32 {
	if x != nil {
		return x.StartingBlockHeight
	}
	return 0
}

func (x *GetCFiltersRequest) GetEndingBlockHash() []byte {
	if x != nil {
		return x.EndingBlockHash
	}
	return nil
}

func (x *GetCFiltersRequest) GetEndingBlockHeight() int32 {
	if x != nil {
		return x.EndingBlockHeight
	}
	return 0
}

type GetCFiltersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Filter    []byte `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	BlockHash []byte `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
}

func (x *GetCFiltersResponse) Reset() {
	*x = GetCFiltersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCFiltersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCFiltersResponse) ProtoMessage() {}

func (x *GetCFiltersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCFiltersResponse.ProtoReflect.Descriptor instead.
func (*GetCFiltersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{173}
}

func (x *GetCFiltersResponse) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetCFiltersResponse) GetFilter() []byte {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetCFiltersResponse) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type GetRawBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash   []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockHeight int32  `protobuf:"zigzag32,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetRawBlockRequest) Reset() {
	*x = GetRawBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRawBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawBlockRequest) ProtoMessage() {}

func (x *GetRawBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawBlockRequest.ProtoReflect.Descriptor instead.
func (*GetRawBlockRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{174}
}

func (x *GetRawBlockRequest) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *GetRawBlockRequest) GetBlockHeight() int32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetRawBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *GetRawBlockResponse) Reset() {
	*x = GetRawBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRawBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawBlockResponse) ProtoMessage() {}

func (x *GetRawBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawBlockResponse.ProtoReflect.Descriptor instead.
func (*GetRawBlockResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{175}
}

func (x *GetRawBlockResponse) GetBlock() []byte {
	if x != nil {
		return x.Block
	}
	return nil
}

type GetCoinjoinOutputspByAcctRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCoinjoinOutputspByAcctRequest) Reset() {
	*x = GetCoinjoinOutputspByAcctRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinjoinOutputspByAcctRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinjoinOutputspByAcctRequest) ProtoMessage() {}

func (x *GetCoinjoinOutputspByAcctRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinjoinOutputspByAcctRequest.ProtoReflect.Descriptor instead.
func (*GetCoinjoinOutputspByAcctRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{176}
}

type CoinjoinTxsSumByAcct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber  uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	CoinjoinTxsSum int32  `protobuf:"varint,2,opt,name=coinjoin_txs_sum,json=coinjoinTxsSum,proto3" json:"coinjoin_txs_sum,omitempty"`
}

func (x *CoinjoinTxsSumByAcct) Reset() {
	*x = CoinjoinTxsSumByAcct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinjoinTxsSumByAcct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinjoinTxsSumByAcct) ProtoMessage() {}

func (x *CoinjoinTxsSumByAcct) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinjoinTxsSumByAcct.ProtoReflect.Descriptor instead.
func (*CoinjoinTxsSumByAcct) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{177}
}

func (x *CoinjoinTxsSumByAcct) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *CoinjoinTxsSumByAcct) GetCoinjoinTxsSum() int32 {
	if x != nil {
		return x.CoinjoinTxsSum
	}
	return 0
}

type GetCoinjoinOutputspByAcctResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CoinjoinTxsSumByAcct `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCoinjoinOutputspByAcctResponse) Reset() {
	*x = GetCoinjoinOutputspByAcctResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinjoinOutputspByAcctResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinjoinOutputspByAcctResponse) ProtoMessage() {}

func (x *GetCoinjoinOutputspByAcctResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinjoinOutputspByAcctResponse.ProtoReflect.Descriptor instead.
func (*GetCoinjoinOutputspByAcctResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{178}
}

func (x *GetCoinjoinOutputspByAcctResponse) GetData() []*CoinjoinTxsSumByAcct {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetAccountPassphraseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountPassphrase    []byte `protobuf:"bytes,1,opt,name=account_passphrase,json=accountPassphrase,proto3" json:"account_passphrase,omitempty"`
	NewAccountPassphrase []byte `protobuf:"bytes,2,opt,name=new_account_passphrase,json=newAccountPassphrase,proto3" json:"new_account_passphrase,omitempty"`
	AccountNumber        uint32 `protobuf:"varint,3,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	// used only in case account pass not yet set.
	WalletPassphrase []byte `protobuf:"bytes,4,opt,name=wallet_passphrase,json=walletPassphrase,proto3" json:"wallet_passphrase,omitempty"`
}

func (x *SetAccountPassphraseRequest) Reset() {
	*x = SetAccountPassphraseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountPassphraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountPassphraseRequest) ProtoMessage() {}

func (x *SetAccountPassphraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountPassphraseRequest.ProtoReflect.Descriptor instead.
func (*SetAccountPassphraseRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{179}
}

func (x *SetAccountPassphraseRequest) GetAccountPassphrase() []byte {
	if x != nil {
		return x.AccountPassphrase
	}
	return nil
}

func (x *SetAccountPassphraseRequest) GetNewAccountPassphrase() []byte {
	if x != nil {
		return x.NewAccountPassphrase
	}
	return nil
}

func (x *SetAccountPassphraseRequest) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *SetAccountPassphraseRequest) GetWalletPassphrase() []byte {
	if x != nil {
		return x.WalletPassphrase
	}
	return nil
}

type UnlockAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase    []byte `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	AccountNumber uint32 `protobuf:"varint,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
}

func (x *UnlockAccountRequest) Reset() {
	*x = UnlockAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockAccountRequest) ProtoMessage() {}

func (x *UnlockAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockAccountRequest.ProtoReflect.Descriptor instead.
func (*UnlockAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{180}
}

func (x *UnlockAccountRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *UnlockAccountRequest) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

type LockAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
}

func (x *LockAccountRequest) Reset() {
	*x = LockAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockAccountRequest) ProtoMessage() {}

func (x *LockAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockAccountRequest.ProtoReflect.Descriptor instead.
func (*LockAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{181}
}

func (x *LockAccountRequest) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

type SetAccountPassphraseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAccountPassphraseResponse) Reset() {
	*x = SetAccountPassphraseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountPassphraseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountPassphraseResponse) ProtoMessage() {}

func (x *SetAccountPassphraseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountPassphraseResponse.ProtoReflect.Descriptor instead.
func (*SetAccountPassphraseResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{182}
}

type UnlockAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlockAccountResponse) Reset() {
	*x = UnlockAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockAccountResponse) ProtoMessage() {}

func (x *UnlockAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockAccountResponse.ProtoReflect.Descriptor instead.
func (*UnlockAccountResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{183}
}

type LockAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockAccountResponse) Reset() {
	*x = LockAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockAccountResponse) ProtoMessage() {}

func (x *LockAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockAccountResponse.ProtoReflect.Descriptor instead.
func (*LockAccountResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{184}
}

type AccountUnlockedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
}

func (x *AccountUnlockedRequest) Reset() {
	*x = AccountUnlockedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUnlockedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUnlockedRequest) ProtoMessage() {}

func (x *AccountUnlockedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUnlockedRequest.ProtoReflect.Descriptor instead.
func (*AccountUnlockedRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{185}
}

func (x *AccountUnlockedRequest) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

type AccountUnlockedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unlocked bool `protobuf:"varint,1,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
}

func (x *AccountUnlockedResponse) Reset() {
	*x = AccountUnlockedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUnlockedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUnlockedResponse) ProtoMessage() {}

func (x *AccountUnlockedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUnlockedResponse.ProtoReflect.Descriptor instead.
func (*AccountUnlockedResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{186}
}

func (x *AccountUnlockedResponse) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

type UnlockWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase []byte `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *UnlockWalletRequest) Reset() {
	*x = UnlockWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockWalletRequest) ProtoMessage() {}

func (x *UnlockWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockWalletRequest.ProtoReflect.Descriptor instead.
func (*UnlockWalletRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{187}
}

func (x *UnlockWalletRequest) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

type UnlockWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlockWalletResponse) Reset() {
	*x = UnlockWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockWalletResponse) ProtoMessage() {}

func (x *UnlockWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockWalletResponse.ProtoReflect.Descriptor instead.
func (*UnlockWalletResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{188}
}

type LockWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockWalletRequest) Reset() {
	*x = LockWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockWalletRequest) ProtoMessage() {}

func (x *LockWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockWalletRequest.ProtoReflect.Descriptor instead.
func (*LockWalletRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{189}
}

type LockWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockWalletResponse) Reset() {
	*x = LockWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockWalletResponse) ProtoMessage() {}

func (x *LockWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockWalletResponse.ProtoReflect.Descriptor instead.
func (*LockWalletResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{190}
}

type GetPeerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPeerInfoRequest) Reset() {
	*x = GetPeerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerInfoRequest) ProtoMessage() {}

func (x *GetPeerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPeerInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{191}
}

type GetPeerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerInfo []*GetPeerInfoResponse_PeerInfo `protobuf:"bytes,1,rep,name=peer_info,json=peerInfo,proto3" json:"peer_info,omitempty"`
}

func (x *GetPeerInfoResponse) Reset() {
	*x = GetPeerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerInfoResponse) ProtoMessage() {}

func (x *GetPeerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetPeerInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{192}
}

func (x *GetPeerInfoResponse) GetPeerInfo() []*GetPeerInfoResponse_PeerInfo {
	if x != nil {
		return x.PeerInfo
	}
	return nil
}

type SyncVSPTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VspHost       string `protobuf:"bytes,1,opt,name=vsp_host,json=vspHost,proto3" json:"vsp_host,omitempty"`
	VspPubkey     string `protobuf:"bytes,2,opt,name=vsp_pubkey,json=vspPubkey,proto3" json:"vsp_pubkey,omitempty"`
	Account       uint32 `protobuf:"varint,3,opt,name=account,proto3" json:"account,omitempty"`
	ChangeAccount uint32 `protobuf:"varint,4,opt,name=change_account,json=changeAccount,proto3" json:"change_account,omitempty"`
}

func (x *SyncVSPTicketsRequest) Reset() {
	*x = SyncVSPTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncVSPTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncVSPTicketsRequest) ProtoMessage() {}

func (x *SyncVSPTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncVSPTicketsRequest.ProtoReflect.Descriptor instead.
func (*SyncVSPTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{193}
}

func (x *SyncVSPTicketsRequest) GetVspHost() string {
	if x != nil {
		return x.VspHost
	}
	return ""
}

func (x *SyncVSPTicketsRequest) GetVspPubkey() string {
	if x != nil {
		return x.VspPubkey
	}
	return ""
}

func (x *SyncVSPTicketsRequest) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *SyncVSPTicketsRequest) GetChangeAccount() uint32 {
	if x != nil {
		return x.ChangeAccount
	}
	return 0
}

type SyncVSPTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncVSPTicketsResponse) Reset() {
	*x = SyncVSPTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncVSPTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncVSPTicketsResponse) ProtoMessage() {}

func (x *SyncVSPTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncVSPTicketsResponse.ProtoReflect.Descriptor instead.
func (*SyncVSPTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{194}
}

type GetVSPTicketsByFeeStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeeStatus GetVSPTicketsByFeeStatusRequest_FeeStatus `protobuf:"varint,3,opt,name=fee_status,json=feeStatus,proto3,enum=walletrpc.GetVSPTicketsByFeeStatusRequest_FeeStatus" json:"fee_status,omitempty"`
}

func (x *GetVSPTicketsByFeeStatusRequest) Reset() {
	*x = GetVSPTicketsByFeeStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVSPTicketsByFeeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVSPTicketsByFeeStatusRequest) ProtoMessage() {}

func (x *GetVSPTicketsByFeeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVSPTicketsByFeeStatusRequest.ProtoReflect.Descriptor instead.
func (*GetVSPTicketsByFeeStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{195}
}

func (x *GetVSPTicketsByFeeStatusRequest) GetFeeStatus() GetVSPTicketsByFeeStatusRequest_FeeStatus {
	if x != nil {
		return x.FeeStatus
	}
	return GetVSPTicketsByFeeStatusRequest_VSP_FEE_PROCESS_STARTED
}

type GetVSPTicketsByFeeStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketsHashes [][]byte `protobuf:"bytes,1,rep,name=tickets_hashes,json=ticketsHashes,proto3" json:"tickets_hashes,omitempty"`
}

func (x *GetVSPTicketsByFeeStatusResponse) Reset() {
	*x = GetVSPTicketsByFeeStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVSPTicketsByFeeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVSPTicketsByFeeStatusResponse) ProtoMessage() {}

func (x *GetVSPTicketsByFeeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVSPTicketsByFeeStatusResponse.ProtoReflect.Descriptor instead.
func (*GetVSPTicketsByFeeStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{196}
}

func (x *GetVSPTicketsByFeeStatusResponse) GetTicketsHashes() [][]byte {
	if x != nil {
		return x.TicketsHashes
	}
	return nil
}

type ProcessManagedTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VspHost       string `protobuf:"bytes,1,opt,name=vsp_host,json=vspHost,proto3" json:"vsp_host,omitempty"`
	VspPubkey     string `protobuf:"bytes,2,opt,name=vsp_pubkey,json=vspPubkey,proto3" json:"vsp_pubkey,omitempty"`
	FeeAccount    uint32 `protobuf:"varint,3,opt,name=fee_account,json=feeAccount,proto3" json:"fee_account,omitempty"`
	ChangeAccount uint32 `protobuf:"varint,4,opt,name=change_account,json=changeAccount,proto3" json:"change_account,omitempty"`
}

func (x *ProcessManagedTicketsRequest) Reset() {
	*x = ProcessManagedTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessManagedTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessManagedTicketsRequest) ProtoMessage() {}

func (x *ProcessManagedTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessManagedTicketsRequest.ProtoReflect.Descriptor instead.
func (*ProcessManagedTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{197}
}

func (x *ProcessManagedTicketsRequest) GetVspHost() string {
	if x != nil {
		return x.VspHost
	}
	return ""
}

func (x *ProcessManagedTicketsRequest) GetVspPubkey() string {
	if x != nil {
		return x.VspPubkey
	}
	return ""
}

func (x *ProcessManagedTicketsRequest) GetFeeAccount() uint32 {
	if x != nil {
		return x.FeeAccount
	}
	return 0
}

func (x *ProcessManagedTicketsRequest) GetChangeAccount() uint32 {
	if x != nil {
		return x.ChangeAccount
	}
	return 0
}

type ProcessManagedTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcessManagedTicketsResponse) Reset() {
	*x = ProcessManagedTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessManagedTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessManagedTicketsResponse) ProtoMessage() {}

func (x *ProcessManagedTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessManagedTicketsResponse.ProtoReflect.Descriptor instead.
func (*ProcessManagedTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{198}
}

type ProcessUnmanagedTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VspHost       string `protobuf:"bytes,1,opt,name=vsp_host,json=vspHost,proto3" json:"vsp_host,omitempty"`
	VspPubkey     string `protobuf:"bytes,2,opt,name=vsp_pubkey,json=vspPubkey,proto3" json:"vsp_pubkey,omitempty"`
	FeeAccount    uint32 `protobuf:"varint,3,opt,name=fee_account,json=feeAccount,proto3" json:"fee_account,omitempty"`
	ChangeAccount uint32 `protobuf:"varint,4,opt,name=change_account,json=changeAccount,proto3" json:"change_account,omitempty"`
}

func (x *ProcessUnmanagedTicketsRequest) Reset() {
	*x = ProcessUnmanagedTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessUnmanagedTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessUnmanagedTicketsRequest) ProtoMessage() {}

func (x *ProcessUnmanagedTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessUnmanagedTicketsRequest.ProtoReflect.Descriptor instead.
func (*ProcessUnmanagedTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{199}
}

func (x *ProcessUnmanagedTicketsRequest) GetVspHost() string {
	if x != nil {
		return x.VspHost
	}
	return ""
}

func (x *ProcessUnmanagedTicketsRequest) GetVspPubkey() string {
	if x != nil {
		return x.VspPubkey
	}
	return ""
}

func (x *ProcessUnmanagedTicketsRequest) GetFeeAccount() uint32 {
	if x != nil {
		return x.FeeAccount
	}
	return 0
}

func (x *ProcessUnmanagedTicketsRequest) GetChangeAccount() uint32 {
	if x != nil {
		return x.ChangeAccount
	}
	return 0
}

type ProcessUnmanagedTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcessUnmanagedTicketsResponse) Reset() {
	*x = ProcessUnmanagedTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessUnmanagedTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessUnmanagedTicketsResponse) ProtoMessage() {}

func (x *ProcessUnmanagedTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessUnmanagedTicketsResponse.ProtoReflect.Descriptor instead.
func (*ProcessUnmanagedTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{200}
}

type SetVspdVoteChoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VspHost       string `protobuf:"bytes,1,opt,name=vsp_host,json=vspHost,proto3" json:"vsp_host,omitempty"`
	VspPubkey     string `protobuf:"bytes,2,opt,name=vsp_pubkey,json=vspPubkey,proto3" json:"vsp_pubkey,omitempty"`
	FeeAccount    uint32 `protobuf:"varint,3,opt,name=fee_account,json=feeAccount,proto3" json:"fee_account,omitempty"`
	ChangeAccount uint32 `protobuf:"varint,4,opt,name=change_account,json=changeAccount,proto3" json:"change_account,omitempty"`
}

func (x *SetVspdVoteChoicesRequest) Reset() {
	*x = SetVspdVoteChoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVspdVoteChoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVspdVoteChoicesRequest) ProtoMessage() {}

func (x *SetVspdVoteChoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVspdVoteChoicesRequest.ProtoReflect.Descriptor instead.
func (*SetVspdVoteChoicesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{201}
}

func (x *SetVspdVoteChoicesRequest) GetVspHost() string {
	if x != nil {
		return x.VspHost
	}
	return ""
}

func (x *SetVspdVoteChoicesRequest) GetVspPubkey() string {
	if x != nil {
		return x.VspPubkey
	}
	return ""
}

func (x *SetVspdVoteChoicesRequest) GetFeeAccount() uint32 {
	if x != nil {
		return x.FeeAccount
	}
	return 0
}

func (x *SetVspdVoteChoicesRequest) GetChangeAccount() uint32 {
	if x != nil {
		return x.ChangeAccount
	}
	return 0
}

type SetVspdVoteChoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetVspdVoteChoicesResponse) Reset() {
	*x = SetVspdVoteChoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVspdVoteChoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVspdVoteChoicesResponse) ProtoMessage() {}

func (x *SetVspdVoteChoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVspdVoteChoicesResponse.ProtoReflect.Descriptor instead.
func (*SetVspdVoteChoicesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{202}
}

type GetTrackedVSPTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTrackedVSPTicketsRequest) Reset() {
	*x = GetTrackedVSPTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackedVSPTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackedVSPTicketsRequest) ProtoMessage() {}

func (x *GetTrackedVSPTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackedVSPTicketsRequest.ProtoReflect.Descriptor instead.
func (*GetTrackedVSPTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{203}
}

type GetTrackedVSPTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vsps []*GetTrackedVSPTicketsResponse_VSP `protobuf:"bytes,1,rep,name=vsps,proto3" json:"vsps,omitempty"`
}

func (x *GetTrackedVSPTicketsResponse) Reset() {
	*x = GetTrackedVSPTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackedVSPTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackedVSPTicketsResponse) ProtoMessage() {}

func (x *GetTrackedVSPTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackedVSPTicketsResponse.ProtoReflect.Descriptor instead.
func (*GetTrackedVSPTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{204}
}

func (x *GetTrackedVSPTicketsResponse) GetVsps() []*GetTrackedVSPTicketsResponse_VSP {
	if x != nil {
		return x.Vsps
	}
	return nil
}

type DiscoverUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscoverAccounts  bool   `protobuf:"varint,1,opt,name=discover_accounts,json=discoverAccounts,proto3" json:"discover_accounts,omitempty"`
	GapLimit          uint32 `protobuf:"varint,2,opt,name=gap_limit,json=gapLimit,proto3" json:"gap_limit,omitempty"`
	StartingBlockHash []byte `protobuf:"bytes,3,opt,name=starting_block_hash,json=startingBlockHash,proto3" json:"starting_block_hash,omitempty"`
}

func (x *DiscoverUsageRequest) Reset() {
	*x = DiscoverUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverUsageRequest) ProtoMessage() {}

func (x *DiscoverUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverUsageRequest.ProtoReflect.Descriptor instead.
func (*DiscoverUsageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{205}
}

func (x *DiscoverUsageRequest) GetDiscoverAccounts() bool {
	if x != nil {
		return x.DiscoverAccounts
	}
	return false
}

func (x *DiscoverUsageRequest) GetGapLimit() uint32 {
	if x != nil {
		return x.GapLimit
	}
	return 0
}

func (x *DiscoverUsageRequest) GetStartingBlockHash() []byte {
	if x != nil {
		return x.StartingBlockHash
	}
	return nil
}

type DiscoverUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscoverUsageResponse) Reset() {
	*x = DiscoverUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverUsageResponse) ProtoMessage() {}

func (x *DiscoverUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverUsageResponse.ProtoReflect.Descriptor instead.
func (*DiscoverUsageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{206}
}

type TransactionDetails_Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index           uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	PreviousAccount uint32 `protobuf:"varint,2,opt,name=previous_account,json=previousAccount,proto3" json:"previous_account,omitempty"`
	PreviousAmount  int64  `protobuf:"varint,3,opt,name=previous_amount,json=previousAmount,proto3" json:"previous_amount,omitempty"`
}

func (x *TransactionDetails_Input) Reset() {
	*x = TransactionDetails_Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetails_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetails_Input) ProtoMessage() {}

func (x *TransactionDetails_Input) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetails_Input.ProtoReflect.Descriptor instead.
func (*TransactionDetails_Input) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TransactionDetails_Input) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TransactionDetails_Input) GetPreviousAccount() uint32 {
	if x != nil {
		return x.PreviousAccount
	}
	return 0
}

func (x *TransactionDetails_Input) GetPreviousAmount() int64 {
	if x != nil {
		return x.PreviousAmount
	}
	return 0
}

type TransactionDetails_Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index        uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Account      uint32 `protobuf:"varint,2,opt,name=account,proto3" json:"account,omitempty"`
	Internal     bool   `protobuf:"varint,3,opt,name=internal,proto3" json:"internal,omitempty"`
	Amount       int64  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Address      string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	OutputScript []byte `protobuf:"bytes,6,opt,name=output_script,json=outputScript,proto3" json:"output_script,omitempty"`
}

func (x *TransactionDetails_Output) Reset() {
	*x = TransactionDetails_Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetails_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetails_Output) ProtoMessage() {}

func (x *TransactionDetails_Output) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetails_Output.ProtoReflect.Descriptor instead.
func (*TransactionDetails_Output) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2, 1}
}

func (x *TransactionDetails_Output) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TransactionDetails_Output) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *TransactionDetails_Output) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *TransactionDetails_Output) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionDetails_Output) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TransactionDetails_Output) GetOutputScript() []byte {
	if x != nil {
		return x.OutputScript
	}
	return nil
}

type AccountsResponse_Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber    uint32 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	AccountName      string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	TotalBalance     int64  `protobuf:"varint,3,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	ExternalKeyCount uint32 `protobuf:"varint,4,opt,name=external_key_count,json=externalKeyCount,proto3" json:"external_key_count,omitempty"`
	InternalKeyCount uint32 `protobuf:"varint,5,opt,name=internal_key_count,json=internalKeyCount,proto3" json:"internal_key_count,omitempty"`
	ImportedKeyCount uint32 `protobuf:"varint,6,opt,name=imported_key_count,json=importedKeyCount,proto3" json:"imported_key_count,omitempty"`
	AccountEncrypted bool   `protobuf:"varint,7,opt,name=account_encrypted,json=accountEncrypted,proto3" json:"account_encrypted,omitempty"`
	AccountUnlocked  bool   `protobuf:"varint,8,opt,name=account_unlocked,json=accountUnlocked,proto3" json:"account_unlocked,omitempty"`
}

func (x *AccountsResponse_Account) Reset() {
	*x = AccountsResponse_Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountsResponse_Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsResponse_Account) ProtoMessage() {}

func (x *AccountsResponse_Account) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsResponse_Account.ProtoReflect.Descriptor instead.
func (*AccountsResponse_Account) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15, 0}
}

func (x *AccountsResponse_Account) GetAccountNumber() uint32 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *AccountsResponse_Account) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AccountsResponse_Account) GetTotalBalance() int64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

func (x *AccountsResponse_Account) GetExternalKeyCount() uint32 {
	if x != nil {
		return x.ExternalKeyCount
	}
	return 0
}

func (x *AccountsResponse_Account) GetInternalKeyCount() uint32 {
	if x != nil {
		return x.InternalKeyCount
	}
	return 0
}

func (x *AccountsResponse_Account) GetImportedKeyCount() uint32 {
	if x != nil {
		return x.ImportedKeyCount
	}
	return 0
}

func (x *AccountsResponse_Account) GetAccountEncrypted() bool {
	if x != nil {
		return x.AccountEncrypted
	}
	return false
}

func (x *AccountsResponse_Account) GetAccountUnlocked() bool {
	if x != nil {
		return x.AccountUnlocked
	}
	return false
}

type GetTicketsResponse_TicketDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket       *TransactionDetails                           `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Spender      *TransactionDetails                           `protobuf:"bytes,2,opt,name=spender,proto3" json:"spender,omitempty"`
	TicketStatus GetTicketsResponse_TicketDetails_TicketStatus `protobuf:"varint,3,opt,name=ticket_status,json=ticketStatus,proto3,enum=walletrpc.GetTicketsResponse_TicketDetails_TicketStatus" json:"ticket_status,omitempty"`
}

func (x *GetTicketsResponse_TicketDetails) Reset() {
	*x = GetTicketsResponse_TicketDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketsResponse_TicketDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketsResponse_TicketDetails) ProtoMessage() {}

func (x *GetTicketsResponse_TicketDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketsResponse_TicketDetails.ProtoReflect.Descriptor instead.
func (*GetTicketsResponse_TicketDetails) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38, 0}
}

func (x *GetTicketsResponse_TicketDetails) GetTicket() *TransactionDetails {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *GetTicketsResponse_TicketDetails) GetSpender() *TransactionDetails {
	if x != nil {
		return x.Spender
	}
	return nil
}

func (x *GetTicketsResponse_TicketDetails) GetTicketStatus() GetTicketsResponse_TicketDetails_TicketStatus {
	if x != nil {
		return x.TicketStatus
	}
	return GetTicketsResponse_TicketDetails_UNKNOWN
}

type GetTicketsResponse_BlockDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash      []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height    int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetTicketsResponse_BlockDetails) Reset() {
	*x = GetTicketsResponse_BlockDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketsResponse_BlockDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketsResponse_BlockDetails) ProtoMessage() {}

func (x *GetTicketsResponse_BlockDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketsResponse_BlockDetails.ProtoReflect.Descriptor instead.
func (*GetTicketsResponse_BlockDetails) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38, 1}
}

func (x *GetTicketsResponse_BlockDetails) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *GetTicketsResponse_BlockDetails) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetTicketsResponse_BlockDetails) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type FundTransactionResponse_PreviousOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	OutputIndex     uint32 `protobuf:"varint,2,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"`
	Amount          int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	PkScript        []byte `protobuf:"bytes,4,opt,name=pk_script,json=pkScript,proto3" json:"pk_script,omitempty"`
	ReceiveTime     int64  `protobuf:"varint,5,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`
	FromCoinbase    bool   `protobuf:"varint,6,opt,name=from_coinbase,json=fromCoinbase,proto3" json:"from_coinbase,omitempty"`
	Tree            int32  `protobuf:"varint,7,opt,name=tree,proto3" json:"tree,omitempty"`
}

func (x *FundTransactionResponse_PreviousOutput) Reset() {
	*x = FundTransactionResponse_PreviousOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundTransactionResponse_PreviousOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundTransactionResponse_PreviousOutput) ProtoMessage() {}

func (x *FundTransactionResponse_PreviousOutput) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundTransactionResponse_PreviousOutput.ProtoReflect.Descriptor instead.
func (*FundTransactionResponse_PreviousOutput) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{48, 0}
}

func (x *FundTransactionResponse_PreviousOutput) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *FundTransactionResponse_PreviousOutput) GetOutputIndex() uint32 {
	if x != nil {
		return x.OutputIndex
	}
	return 0
}

func (x *FundTransactionResponse_PreviousOutput) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *FundTransactionResponse_PreviousOutput) GetPkScript() []byte {
	if x != nil {
		return x.PkScript
	}
	return nil
}

func (x *FundTransactionResponse_PreviousOutput) GetReceiveTime() int64 {
	if x != nil {
		return x.ReceiveTime
	}
	return 0
}

func (x *FundTransactionResponse_PreviousOutput) GetFromCoinbase() bool {
	if x != nil {
		return x.FromCoinbase
	}
	return false
}

func (x *FundTransactionResponse_PreviousOutput) GetTree() int32 {
	if x != nil {
		return x.Tree
	}
	return 0
}

type ConstructTransactionRequest_OutputDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Script        []byte `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	ScriptVersion uint32 `protobuf:"varint,3,opt,name=script_version,json=scriptVersion,proto3" json:"script_version,omitempty"`
}

func (x *ConstructTransactionRequest_OutputDestination) Reset() {
	*x = ConstructTransactionRequest_OutputDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstructTransactionRequest_OutputDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstructTransactionRequest_OutputDestination) ProtoMessage() {}

func (x *ConstructTransactionRequest_OutputDestination) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstructTransactionRequest_OutputDestination.ProtoReflect.Descriptor instead.
func (*ConstructTransactionRequest_OutputDestination) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{51, 0}
}

func (x *ConstructTransactionRequest_OutputDestination) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ConstructTransactionRequest_OutputDestination) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *ConstructTransactionRequest_OutputDestination) GetScriptVersion() uint32 {
	if x != nil {
		return x.ScriptVersion
	}
	return 0
}

type ConstructTransactionRequest_Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination *ConstructTransactionRequest_OutputDestination `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Amount      int64                                          `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ConstructTransactionRequest_Output) Reset() {
	*x = ConstructTransactionRequest_Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstructTransactionRequest_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstructTransactionRequest_Output) ProtoMessage() {}

func (x *ConstructTransactionRequest_Output) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstructTransactionRequest_Output.ProtoReflect.Descriptor instead.
func (*ConstructTransactionRequest_Output) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{51, 1}
}

func (x *ConstructTransactionRequest_Output) GetDestination() *ConstructTransactionRequest_OutputDestination {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *ConstructTransactionRequest_Output) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type SignTransactionRequest_AdditionalScript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	OutputIndex     uint32 `protobuf:"varint,2,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"`
	Tree            int32  `protobuf:"varint,3,opt,name=tree,proto3" json:"tree,omitempty"`
	PkScript        []byte `protobuf:"bytes,4,opt,name=pk_script,json=pkScript,proto3" json:"pk_script,omitempty"`
}

func (x *SignTransactionRequest_AdditionalScript) Reset() {
	*x = SignTransactionRequest_AdditionalScript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransactionRequest_AdditionalScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionRequest_AdditionalScript) ProtoMessage() {}

func (x *SignTransactionRequest_AdditionalScript) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionRequest_AdditionalScript.ProtoReflect.Descriptor instead.
func (*SignTransactionRequest_AdditionalScript) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{53, 0}
}

func (x *SignTransactionRequest_AdditionalScript) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *SignTransactionRequest_AdditionalScript) GetOutputIndex() uint32 {
	if x != nil {
		return x.OutputIndex
	}
	return 0
}

func (x *SignTransactionRequest_AdditionalScript) GetTree() int32 {
	if x != nil {
		return x.Tree
	}
	return 0
}

func (x *SignTransactionRequest_AdditionalScript) GetPkScript() []byte {
	if x != nil {
		return x.PkScript
	}
	return nil
}

type SignTransactionsRequest_AdditionalScript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	OutputIndex     uint32 `protobuf:"varint,2,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"`
	Tree            int32  `protobuf:"varint,3,opt,name=tree,proto3" json:"tree,omitempty"`
	PkScript        []byte `protobuf:"bytes,4,opt,name=pk_script,json=pkScript,proto3" json:"pk_script,omitempty"`
}

func (x *SignTransactionsRequest_AdditionalScript) Reset() {
	*x = SignTransactionsRequest_AdditionalScript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransactionsRequest_AdditionalScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionsRequest_AdditionalScript) ProtoMessage() {}

func (x *SignTransactionsRequest_AdditionalScript) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionsRequest_AdditionalScript.ProtoReflect.Descriptor instead.
func (*SignTransactionsRequest_AdditionalScript) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{55, 0}
}

func (x *SignTransactionsRequest_AdditionalScript) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *SignTransactionsRequest_AdditionalScript) GetOutputIndex() uint32 {
	if x != nil {
		return x.OutputIndex
	}
	return 0
}

func (x *SignTransactionsRequest_AdditionalScript) GetTree() int32 {
	if x != nil {
		return x.Tree
	}
	return 0
}

func (x *SignTransactionsRequest_AdditionalScript) GetPkScript() []byte {
	if x != nil {
		return x.PkScript
	}
	return nil
}

type SignTransactionsRequest_UnsignedTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializedTransaction []byte `protobuf:"bytes,1,opt,name=serialized_transaction,json=serializedTransaction,proto3" json:"serialized_transaction,omitempty"`
}

func (x *SignTransactionsRequest_UnsignedTransaction) Reset() {
	*x = SignTransactionsRequest_UnsignedTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransactionsRequest_UnsignedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionsRequest_UnsignedTransaction) ProtoMessage() {}

func (x *SignTransactionsRequest_UnsignedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionsRequest_UnsignedTransaction.ProtoReflect.Descriptor instead.
func (*SignTransactionsRequest_UnsignedTransaction) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{55, 1}
}

func (x *SignTransactionsRequest_UnsignedTransaction) GetSerializedTransaction() []byte {
	if x != nil {
		return x.SerializedTransaction
	}
	return nil
}

type SignTransactionsResponse_SignedTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction          []byte   `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	UnsignedInputIndexes []uint32 `protobuf:"varint,2,rep,packed,name=unsigned_input_indexes,json=unsignedInputIndexes,proto3" json:"unsigned_input_indexes,omitempty"`
}

func (x *SignTransactionsResponse_SignedTransaction) Reset() {
	*x = SignTransactionsResponse_SignedTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransactionsResponse_SignedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionsResponse_SignedTransaction) ProtoMessage() {}

func (x *SignTransactionsResponse_SignedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionsResponse_SignedTransaction.ProtoReflect.Descriptor instead.
func (*SignTransactionsResponse_SignedTransaction) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{56, 0}
}

func (x *SignTransactionsResponse_SignedTransaction) GetTransaction() []byte {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *SignTransactionsResponse_SignedTransaction) GetUnsignedInputIndexes() []uint32 {
	if x != nil {
		return x.UnsignedInputIndexes
	}
	return nil
}

type SignMessagesRequest_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignMessagesRequest_Message) Reset() {
	*x = SignMessagesRequest_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessagesRequest_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessagesRequest_Message) ProtoMessage() {}

func (x *SignMessagesRequest_Message) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessagesRequest_Message.ProtoReflect.Descriptor instead.
func (*SignMessagesRequest_Message) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{73, 0}
}

func (x *SignMessagesRequest_Message) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SignMessagesRequest_Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SignMessagesResponse_SignReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SignMessagesResponse_SignReply) Reset() {
	*x = SignMessagesResponse_SignReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessagesResponse_SignReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessagesResponse_SignReply) ProtoMessage() {}

func (x *SignMessagesResponse_SignReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessagesResponse_SignReply.ProtoReflect.Descriptor instead.
func (*SignMessagesResponse_SignReply) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{74, 0}
}

func (x *SignMessagesResponse_SignReply) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SignMessagesResponse_SignReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ConfirmationNotificationsResponse_TransactionConfirmations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash        []byte `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Confirmations int32  `protobuf:"varint,2,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	BlockHash     []byte `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockHeight   int32  `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *ConfirmationNotificationsResponse_TransactionConfirmations) Reset() {
	*x = ConfirmationNotificationsResponse_TransactionConfirmations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmationNotificationsResponse_TransactionConfirmations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmationNotificationsResponse_TransactionConfirmations) ProtoMessage() {}

func (x *ConfirmationNotificationsResponse_TransactionConfirmations) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmationNotificationsResponse_TransactionConfirmations.ProtoReflect.Descriptor instead.
func (*ConfirmationNotificationsResponse_TransactionConfirmations) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{80, 0}
}

func (x *ConfirmationNotificationsResponse_TransactionConfirmations) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *ConfirmationNotificationsResponse_TransactionConfirmations) GetConfirmations() int32 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *ConfirmationNotificationsResponse_TransactionConfirmations) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *ConfirmationNotificationsResponse_TransactionConfirmations) GetBlockHeight() int32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type AgendasResponse_Agenda struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Mask        uint32                    `protobuf:"varint,3,opt,name=mask,proto3" json:"mask,omitempty"`
	Choices     []*AgendasResponse_Choice `protobuf:"bytes,4,rep,name=choices,proto3" json:"choices,omitempty"`
	StartTime   int64                     `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ExpireTime  int64                     `protobuf:"varint,6,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
}

func (x *AgendasResponse_Agenda) Reset() {
	*x = AgendasResponse_Agenda{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgendasResponse_Agenda) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgendasResponse_Agenda) ProtoMessage() {}

func (x *AgendasResponse_Agenda) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgendasResponse_Agenda.ProtoReflect.Descriptor instead.
func (*AgendasResponse_Agenda) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{144, 0}
}

func (x *AgendasResponse_Agenda) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgendasResponse_Agenda) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AgendasResponse_Agenda) GetMask() uint32 {
	if x != nil {
		return x.Mask
	}
	return 0
}

func (x *AgendasResponse_Agenda) GetChoices() []*AgendasResponse_Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *AgendasResponse_Agenda) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgendasResponse_Agenda) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

type AgendasResponse_Choice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Bits        uint32 `protobuf:"varint,3,opt,name=bits,proto3" json:"bits,omitempty"`
	IsAbstain   bool   `protobuf:"varint,4,opt,name=is_abstain,json=isAbstain,proto3" json:"is_abstain,omitempty"`
	IsNo        bool   `protobuf:"varint,5,opt,name=is_no,json=isNo,proto3" json:"is_no,omitempty"`
}

func (x *AgendasResponse_Choice) Reset() {
	*x = AgendasResponse_Choice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgendasResponse_Choice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgendasResponse_Choice) ProtoMessage() {}

func (x *AgendasResponse_Choice) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgendasResponse_Choice.ProtoReflect.Descriptor instead.
func (*AgendasResponse_Choice) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{144, 1}
}

func (x *AgendasResponse_Choice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgendasResponse_Choice) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AgendasResponse_Choice) GetBits() uint32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

func (x *AgendasResponse_Choice) GetIsAbstain() bool {
	if x != nil {
		return x.IsAbstain
	}
	return false
}

func (x *AgendasResponse_Choice) GetIsNo() bool {
	if x != nil {
		return x.IsNo
	}
	return false
}

type VoteChoicesResponse_Choice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgendaId          string `protobuf:"bytes,1,opt,name=agenda_id,json=agendaId,proto3" json:"agenda_id,omitempty"`
	AgendaDescription string `protobuf:"bytes,2,opt,name=agenda_description,json=agendaDescription,proto3" json:"agenda_description,omitempty"`
	ChoiceId          string `protobuf:"bytes,3,opt,name=choice_id,json=choiceId,proto3" json:"choice_id,omitempty"`
	ChoiceDescription string `protobuf:"bytes,4,opt,name=choice_description,json=choiceDescription,proto3" json:"choice_description,omitempty"`
}

func (x *VoteChoicesResponse_Choice) Reset() {
	*x = VoteChoicesResponse_Choice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteChoicesResponse_Choice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteChoicesResponse_Choice) ProtoMessage() {}

func (x *VoteChoicesResponse_Choice) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteChoicesResponse_Choice.ProtoReflect.Descriptor instead.
func (*VoteChoicesResponse_Choice) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{146, 0}
}

func (x *VoteChoicesResponse_Choice) GetAgendaId() string {
	if x != nil {
		return x.AgendaId
	}
	return ""
}

func (x *VoteChoicesResponse_Choice) GetAgendaDescription() string {
	if x != nil {
		return x.AgendaDescription
	}
	return ""
}

func (x *VoteChoicesResponse_Choice) GetChoiceId() string {
	if x != nil {
		return x.ChoiceId
	}
	return ""
}

func (x *VoteChoicesResponse_Choice) GetChoiceDescription() string {
	if x != nil {
		return x.ChoiceDescription
	}
	return ""
}

type SetVoteChoicesRequest_Choice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgendaId string `protobuf:"bytes,1,opt,name=agenda_id,json=agendaId,proto3" json:"agenda_id,omitempty"`
	ChoiceId string `protobuf:"bytes,2,opt,name=choice_id,json=choiceId,proto3" json:"choice_id,omitempty"`
}

func (x *SetVoteChoicesRequest_Choice) Reset() {
	*x = SetVoteChoicesRequest_Choice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVoteChoicesRequest_Choice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVoteChoicesRequest_Choice) ProtoMessage() {}

func (x *SetVoteChoicesRequest_Choice) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVoteChoicesRequest_Choice.ProtoReflect.Descriptor instead.
func (*SetVoteChoicesRequest_Choice) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{147, 0}
}

func (x *SetVoteChoicesRequest_Choice) GetAgendaId() string {
	if x != nil {
		return x.AgendaId
	}
	return ""
}

func (x *SetVoteChoicesRequest_Choice) GetChoiceId() string {
	if x != nil {
		return x.ChoiceId
	}
	return ""
}

type DecodedTransaction_Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousTransactionHash  []byte                            `protobuf:"bytes,1,opt,name=previous_transaction_hash,json=previousTransactionHash,proto3" json:"previous_transaction_hash,omitempty"`
	PreviousTransactionIndex uint32                            `protobuf:"varint,2,opt,name=previous_transaction_index,json=previousTransactionIndex,proto3" json:"previous_transaction_index,omitempty"`
	Tree                     DecodedTransaction_Input_TreeType `protobuf:"varint,3,opt,name=tree,proto3,enum=walletrpc.DecodedTransaction_Input_TreeType" json:"tree,omitempty"`
	Sequence                 uint32                            `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	AmountIn                 int64                             `protobuf:"varint,5,opt,name=amount_in,json=amountIn,proto3" json:"amount_in,omitempty"`
	BlockHeight              uint32                            `protobuf:"varint,6,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BlockIndex               uint32                            `protobuf:"varint,7,opt,name=block_index,json=blockIndex,proto3" json:"block_index,omitempty"`
	SignatureScript          []byte                            `protobuf:"bytes,8,opt,name=signature_script,json=signatureScript,proto3" json:"signature_script,omitempty"`
	SignatureScriptAsm       string                            `protobuf:"bytes,9,opt,name=signature_script_asm,json=signatureScriptAsm,proto3" json:"signature_script_asm,omitempty"`
}

func (x *DecodedTransaction_Input) Reset() {
	*x = DecodedTransaction_Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedTransaction_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedTransaction_Input) ProtoMessage() {}

func (x *DecodedTransaction_Input) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedTransaction_Input.ProtoReflect.Descriptor instead.
func (*DecodedTransaction_Input) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{151, 0}
}

func (x *DecodedTransaction_Input) GetPreviousTransactionHash() []byte {
	if x != nil {
		return x.PreviousTransactionHash
	}
	return nil
}

func (x *DecodedTransaction_Input) GetPreviousTransactionIndex() uint32 {
	if x != nil {
		return x.PreviousTransactionIndex
	}
	return 0
}

func (x *DecodedTransaction_Input) GetTree() DecodedTransaction_Input_TreeType {
	if x != nil {
		return x.Tree
	}
	return DecodedTransaction_Input_REGULAR
}

func (x *DecodedTransaction_Input) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *DecodedTransaction_Input) GetAmountIn() int64 {
	if x != nil {
		return x.AmountIn
	}
	return 0
}

func (x *DecodedTransaction_Input) GetBlockHeight() uint32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *DecodedTransaction_Input) GetBlockIndex() uint32 {
	if x != nil {
		return x.BlockIndex
	}
	return 0
}

func (x *DecodedTransaction_Input) GetSignatureScript() []byte {
	if x != nil {
		return x.SignatureScript
	}
	return nil
}

func (x *DecodedTransaction_Input) GetSignatureScriptAsm() string {
	if x != nil {
		return x.SignatureScriptAsm
	}
	return ""
}

type DecodedTransaction_Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value              int64                                 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Index              uint32                                `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Version            int32                                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Script             []byte                                `protobuf:"bytes,4,opt,name=script,proto3" json:"script,omitempty"`
	ScriptAsm          string                                `protobuf:"bytes,5,opt,name=script_asm,json=scriptAsm,proto3" json:"script_asm,omitempty"`
	RequiredSignatures int32                                 `protobuf:"varint,6,opt,name=required_signatures,json=requiredSignatures,proto3" json:"required_signatures,omitempty"`
	ScriptClass        DecodedTransaction_Output_ScriptClass `protobuf:"varint,7,opt,name=script_class,json=scriptClass,proto3,enum=walletrpc.DecodedTransaction_Output_ScriptClass" json:"script_class,omitempty"`
	Addresses          []string                              `protobuf:"bytes,8,rep,name=addresses,proto3" json:"addresses,omitempty"`
	CommitmentAmount   int64                                 `protobuf:"varint,9,opt,name=commitment_amount,json=commitmentAmount,proto3" json:"commitment_amount,omitempty"`
}

func (x *DecodedTransaction_Output) Reset() {
	*x = DecodedTransaction_Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedTransaction_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedTransaction_Output) ProtoMessage() {}

func (x *DecodedTransaction_Output) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedTransaction_Output.ProtoReflect.Descriptor instead.
func (*DecodedTransaction_Output) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{151, 1}
}

func (x *DecodedTransaction_Output) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DecodedTransaction_Output) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *DecodedTransaction_Output) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DecodedTransaction_Output) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *DecodedTransaction_Output) GetScriptAsm() string {
	if x != nil {
		return x.ScriptAsm
	}
	return ""
}

func (x *DecodedTransaction_Output) GetRequiredSignatures() int32 {
	if x != nil {
		return x.RequiredSignatures
	}
	return 0
}

func (x *DecodedTransaction_Output) GetScriptClass() DecodedTransaction_Output_ScriptClass {
	if x != nil {
		return x.ScriptClass
	}
	return DecodedTransaction_Output_NON_STANDARD
}

func (x *DecodedTransaction_Output) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *DecodedTransaction_Output) GetCommitmentAmount() int64 {
	if x != nil {
		return x.CommitmentAmount
	}
	return 0
}

type CommittedTicketsResponse_TicketAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket  []byte `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *CommittedTicketsResponse_TicketAddress) Reset() {
	*x = CommittedTicketsResponse_TicketAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommittedTicketsResponse_TicketAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommittedTicketsResponse_TicketAddress) ProtoMessage() {}

func (x *CommittedTicketsResponse_TicketAddress) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommittedTicketsResponse_TicketAddress.ProtoReflect.Descriptor instead.
func (*CommittedTicketsResponse_TicketAddress) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{161, 0}
}

func (x *CommittedTicketsResponse_TicketAddress) GetTicket() []byte {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *CommittedTicketsResponse_TicketAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetPeerInfoResponse_PeerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr           string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	AddrLocal      string `protobuf:"bytes,3,opt,name=addr_local,json=addrLocal,proto3" json:"addr_local,omitempty"`
	Services       string `protobuf:"bytes,4,opt,name=services,proto3" json:"services,omitempty"`
	Version        uint32 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	SubVer         string `protobuf:"bytes,6,opt,name=sub_ver,json=subVer,proto3" json:"sub_ver,omitempty"`
	StartingHeight int64  `protobuf:"varint,7,opt,name=starting_height,json=startingHeight,proto3" json:"starting_height,omitempty"`
	BanScore       int32  `protobuf:"varint,8,opt,name=ban_score,json=banScore,proto3" json:"ban_score,omitempty"`
}

func (x *GetPeerInfoResponse_PeerInfo) Reset() {
	*x = GetPeerInfoResponse_PeerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerInfoResponse_PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerInfoResponse_PeerInfo) ProtoMessage() {}

func (x *GetPeerInfoResponse_PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerInfoResponse_PeerInfo.ProtoReflect.Descriptor instead.
func (*GetPeerInfoResponse_PeerInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{192, 0}
}

func (x *GetPeerInfoResponse_PeerInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPeerInfoResponse_PeerInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *GetPeerInfoResponse_PeerInfo) GetAddrLocal() string {
	if x != nil {
		return x.AddrLocal
	}
	return ""
}

func (x *GetPeerInfoResponse_PeerInfo) GetServices() string {
	if x != nil {
		return x.Services
	}
	return ""
}

func (x *GetPeerInfoResponse_PeerInfo) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetPeerInfoResponse_PeerInfo) GetSubVer() string {
	if x != nil {
		return x.SubVer
	}
	return ""
}

func (x *GetPeerInfoResponse_PeerInfo) GetStartingHeight() int64 {
	if x != nil {
		return x.StartingHeight
	}
	return 0
}

func (x *GetPeerInfoResponse_PeerInfo) GetBanScore() int32 {
	if x != nil {
		return x.BanScore
	}
	return 0
}

type GetTrackedVSPTicketsResponse_Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketHash        []byte `protobuf:"bytes,1,opt,name=ticket_hash,json=ticketHash,proto3" json:"ticket_hash,omitempty"`
	VotingAddress     string `protobuf:"bytes,2,opt,name=voting_address,json=votingAddress,proto3" json:"voting_address,omitempty"`
	CommitmentAddress string `protobuf:"bytes,3,opt,name=commitment_address,json=commitmentAddress,proto3" json:"commitment_address,omitempty"`
	State             uint32 `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	Fee               int64  `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeHash           []byte `protobuf:"bytes,6,opt,name=fee_hash,json=feeHash,proto3" json:"fee_hash,omitempty"`
}

func (x *GetTrackedVSPTicketsResponse_Ticket) Reset() {
	*x = GetTrackedVSPTicketsResponse_Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackedVSPTicketsResponse_Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackedVSPTicketsResponse_Ticket) ProtoMessage() {}

func (x *GetTrackedVSPTicketsResponse_Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackedVSPTicketsResponse_Ticket.ProtoReflect.Descriptor instead.
func (*GetTrackedVSPTicketsResponse_Ticket) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{204, 0}
}

func (x *GetTrackedVSPTicketsResponse_Ticket) GetTicketHash() []byte {
	if x != nil {
		return x.TicketHash
	}
	return nil
}

func (x *GetTrackedVSPTicketsResponse_Ticket) GetVotingAddress() string {
	if x != nil {
		return x.VotingAddress
	}
	return ""
}

func (x *GetTrackedVSPTicketsResponse_Ticket) GetCommitmentAddress() string {
	if x != nil {
		return x.CommitmentAddress
	}
	return ""
}

func (x *GetTrackedVSPTicketsResponse_Ticket) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GetTrackedVSPTicketsResponse_Ticket) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *GetTrackedVSPTicketsResponse_Ticket) GetFeeHash() []byte {
	if x != nil {
		return x.FeeHash
	}
	return nil
}

type GetTrackedVSPTicketsResponse_VSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    string                                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Tickets []*GetTrackedVSPTicketsResponse_Ticket `protobuf:"bytes,2,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *GetTrackedVSPTicketsResponse_VSP) Reset() {
	*x = GetTrackedVSPTicketsResponse_VSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackedVSPTicketsResponse_VSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackedVSPTicketsResponse_VSP) ProtoMessage() {}

func (x *GetTrackedVSPTicketsResponse_VSP) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackedVSPTicketsResponse_VSP.ProtoReflect.Descriptor instead.
func (*GetTrackedVSPTicketsResponse_VSP) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{204, 1}
}

func (x *GetTrackedVSPTicketsResponse_VSP) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetTrackedVSPTicketsResponse_VSP) GetTickets() []*GetTrackedVSPTicketsResponse_Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x22, 0x10, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcf, 0x05, 0x0a,
	0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x06, 0x64, 0x65, 0x62,
	0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06,
	0x64, 0x65, 0x62, 0x69, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x58, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x1a, 0x71, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0xab, 0x01, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x22, 0x5b, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x49, 0x4e, 0x42, 0x41, 0x53, 0x45, 0x10, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x50, 0x55, 0x52, 0x43, 0x48, 0x41,
	0x53, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x52, 0x45, 0x56, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x22, 0xe3,
	0x01, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x73, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x7f, 0x0a, 0x14, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72,
	0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4f, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x10, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x3e, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x11, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x90, 0x04, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0xda, 0x02, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b,
	0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x58, 0x0a, 0x14, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x0d, 0x52, 0x65, 0x73,
	0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x3d, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x72, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f,
	0x75, 0x67, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x73, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x22, 0x57, 0x0a, 0x12, 0x4e,
	0x65, 0x78, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x13, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0xcd, 0x02, 0x0a, 0x12, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65,
	0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x46, 0x0a, 0x0a, 0x67,
	0x61, 0x70, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x78, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47,
	0x61, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x09, 0x67, 0x61, 0x70, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x22, 0x32, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x10, 0x42,
	0x49, 0x50, 0x30, 0x30, 0x34, 0x34, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x49, 0x50, 0x30, 0x30, 0x34, 0x34, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x22, 0x69, 0x0a, 0x09, 0x47, 0x61, 0x70, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x41, 0x50, 0x5f, 0x50, 0x4f, 0x4c, 0x49,
	0x43, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x47, 0x41, 0x50, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x41, 0x50, 0x5f, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x5f, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x47, 0x41, 0x50, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x57, 0x52, 0x41, 0x50,
	0x10, 0x03, 0x22, 0x4e, 0x0a, 0x13, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x22, 0xb0, 0x01, 0x0a, 0x17, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x77, 0x69, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x57, 0x69, 0x66,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x61,
	0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x1a, 0x0a, 0x18, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x8c, 0x01, 0x0a, 0x1e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x78, 0x70, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x78, 0x70, 0x75, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x63, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x61, 0x6e, 0x46, 0x72, 0x6f, 0x6d,
	0x22, 0x21, 0x0a, 0x1f, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x63, 0x61, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x63, 0x61, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x52, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x59, 0x0a, 0x14, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x32, 0x73, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x32, 0x73, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x6e, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x16, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6d,
	0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x69, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x69, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x42, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x76,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x6e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x22, 0x42, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x9e, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0xd2, 0x02,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3e, 0x0a, 0x1b, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x14, 0x75, 0x6e, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x13, 0x75, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22, 0x83, 0x02,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xc9, 0x04, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x40, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x1a, 0xd1, 0x02, 0x0a, 0x0d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x71, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4d, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x49, 0x4d, 0x4d, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49,
	0x56, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x4f, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x0a, 0x0a, 0x06, 0x4d, 0x49, 0x53, 0x53, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x45,
	0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x56, 0x4f,
	0x4b, 0x45, 0x44, 0x10, 0x07, 0x1a, 0x58, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x14, 0x0a, 0x12, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x13, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd1, 0x02, 0x0a, 0x11,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x69,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x70,
	0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x78, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x5f, 0x6d, 0x65,
	0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x6f, 0x77, 0x6e, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x78, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x69, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76,
	0x6f, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75,
	0x62, 0x73, 0x69, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x22,
	0x54, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x92, 0x02, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x69, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x73, 0x5f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x1e,
	0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x22, 0x1a,
	0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x16, 0x46,
	0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x18, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0xb6, 0x03,
	0x0a, 0x17, 0x46, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x10, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x6b, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6b, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x1a, 0xef, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6b, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x70, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x15, 0x55, 0x6e, 0x73, 0x70, 0x65,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x35, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x69, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x49, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x73, 0x22, 0x95, 0x02, 0x0a, 0x15, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6b, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x69,
	0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x72, 0x6f,
	0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x72, 0x65,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x22, 0x80, 0x06, 0x0a,
	0x1b, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x66, 0x65,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6b, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x66, 0x65, 0x65, 0x50, 0x65, 0x72, 0x4b, 0x62, 0x12, 0x7d, 0x0a, 0x1a, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x18, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x5b, 0x0a, 0x12, 0x6e, 0x6f, 0x6e, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x10, 0x6e, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x67, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x6c, 0x0a,
	0x11, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x7c, 0x0a, 0x06, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x18, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x22,
	0x99, 0x02, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x14, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13,
	0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x1c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x13, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xfb, 0x02, 0x0a, 0x16,
	0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x61, 0x0a,
	0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x11, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x1a, 0x91, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6b, 0x5f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x6b, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x52, 0x0d, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x71, 0x0a, 0x17, 0x53, 0x69, 0x67,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x14, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0xdb, 0x03, 0x0a,
	0x17, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x29, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6b, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x70, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x1a, 0x4c, 0x0a, 0x13,
	0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x15, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe2, 0x01, 0x0a, 0x18, 0x53,
	0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x6b, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x75, 0x6e, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x14, 0x75, 0x6e, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22,
	0xad, 0x03, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4a, 0x0a, 0x09,
	0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x68, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x6b, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x6b,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x48, 0x61,
	0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x49, 0x47, 0x48, 0x41, 0x53,
	0x48, 0x5f, 0x4f, 0x4c, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x49, 0x47, 0x48, 0x41,
	0x53, 0x48, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x49, 0x47, 0x48,
	0x41, 0x53, 0x48, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x49,
	0x47, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x49, 0x47, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x4c, 0x4c, 0x56, 0x41, 0x4c,
	0x55, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x49, 0x47, 0x48, 0x41, 0x53, 0x48, 0x5f,
	0x41, 0x4e, 0x59, 0x4f, 0x4e, 0x45, 0x43, 0x41, 0x4e, 0x50, 0x41, 0x59, 0x10, 0x80, 0x01, 0x22,
	0x56, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x4a, 0x0a, 0x19, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x1a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x23, 0x0a, 0x21,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x24, 0x0a, 0x22, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x6e, 0x6d, 0x69,
	0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x05, 0x0a, 0x16, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x35, 0x0a,
	0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x75, 0x6d, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x46, 0x65, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x78, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x6f,
	0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x64, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x78, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x73, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x73, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x73, 0x70,
	0x6c, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76,
	0x73, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x73, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x73, 0x70, 0x5f, 0x70, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x73, 0x70, 0x50,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0x73, 0x0a, 0x17, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x78, 0x22, 0x36, 0x0a, 0x13, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x4c,
	0x6f, 0x61, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x4c,
	0x6f, 0x61, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x12,
	0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x13,
	0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x53, 0x69, 0x67, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x1a, 0x3f, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x21, 0x0a, 0x1f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf4, 0x02, 0x0a, 0x20, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x50, 0x0a, 0x14, 0x75, 0x6e, 0x6d, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x13, 0x75, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x75, 0x6e,
	0x6d, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x18,
	0x75, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x16, 0x64, 0x65, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x14, 0x64, 0x65, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22,
	0x1d, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf2,
	0x01, 0x0a, 0x1c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4b,
	0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4b, 0x65, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x22, 0xae, 0x02, 0x0a, 0x21, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x9b, 0x01, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x22, 0x16, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x22,
	0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x4f, 0x6e, 0x6c, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x40, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x77, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x22,
	0x14, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x14, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xa6, 0x01, 0x0a, 0x18, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x24, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x27, 0x0a,
	0x25, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x46, 0x65, 0x74, 0x63, 0x68, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa8, 0x02,
	0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x64, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x16, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x38, 0x0a, 0x19, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x15, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x69,
	0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3c, 0x0a, 0x1b, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x17, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x70, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x78, 0x0a, 0x18, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x20, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x43, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x1d, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x63, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x18, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x49, 0x0a, 0x1a, 0x52, 0x65, 0x73,
	0x63, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x68, 0x72,
	0x6f, 0x75, 0x67, 0x68, 0x22, 0x4b, 0x0a, 0x10, 0x50, 0x65, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x65,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xef, 0x01, 0x0a, 0x0e, 0x52, 0x70, 0x63, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x11, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x22, 0xbc, 0x03, 0x0a, 0x0f, 0x52, 0x70, 0x63, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x12,
	0x4c, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a,
	0x0d, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x61, 0x0a, 0x16, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x43, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x43, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x63,
	0x61, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x70, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x0e, 0x53, 0x70, 0x76, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x76, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x22, 0xbc, 0x03, 0x0a, 0x0f, 0x53, 0x70, 0x76, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x12, 0x4c,
	0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x0d,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x66, 0x65, 0x74, 0x63, 0x68, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x61, 0x0a, 0x16, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x43,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x43, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x63, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x73, 0x63, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x63, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0f, 0x70, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x63, 0x61,
	0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x72, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x63, 0x61,
	0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22, 0x3c, 0x0a, 0x19, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x65, 0x64, 0x5f,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65,
	0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x7b, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x65, 0x64,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x65, 0x64, 0x5f, 0x68, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x65, 0x64, 0x48, 0x65, 0x78,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x65, 0x64, 0x5f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x65, 0x64, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0x32, 0x0a, 0x11, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x37, 0x0a, 0x12, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x53, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x53, 0x65,
	0x65, 0x64, 0x22, 0xae, 0x04, 0x0a, 0x15, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f, 0x6f, 0x6c,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x66, 0x65, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c,
	0x46, 0x65, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x73, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x73, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x73, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x73, 0x70, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x73, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x73, 0x70, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69,
	0x78, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x69,
	0x78, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x2e, 0x0a, 0x13,
	0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd7, 0x01,
	0x0a, 0x16, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69, 0x78, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x78, 0x65,
	0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x14, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x69, 0x78,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x73, 0x70, 0x70, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x73, 0x70,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x75, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69, 0x78, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x8d, 0x03, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6b, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x4b, 0x62, 0x12, 0x2c, 0x0a, 0x12, 0x6d,
	0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41,
	0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x46, 0x65, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14,
	0x53, 0x74, 0x6f, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x75, 0x74, 0x6f,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a,
	0x18, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x90, 0x06, 0x0a, 0x19, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x76, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x67, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x76, 0x67, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x56, 0x57, 0x41, 0x50, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x57,
	0x41, 0x50, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x54, 0x6f, 0x41, 0x76, 0x67, 0x12, 0x31, 0x0a, 0x15, 0x64,
	0x6f, 0x6e, 0x74, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64, 0x6f, 0x6e, 0x74,
	0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x65, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x66, 0x65,
	0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6d, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x46, 0x65, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10,
	0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x70, 0x6f,
	0x6f, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x4d,
	0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f,
	0x6f, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f,
	0x6c, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x6f,
	0x6f, 0x6c, 0x46, 0x65, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x78, 0x46, 0x65, 0x65, 0x22, 0x2d, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x53,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4d, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x13, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x37, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x6b, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61,
	0x78, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x4b, 0x62, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x74,
	0x4d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a,
	0x0a, 0x1a, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x1a, 0x53, 0x65, 0x74,
	0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x62, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3a, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x18,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50,
	0x6f, 0x6f, 0x6c, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x46, 0x65, 0x65, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3b, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6d,
	0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22,
	0x18, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x67, 0x65,
	0x6e, 0x64, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xbb, 0x03, 0x0a, 0x0f,
	0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x67, 0x65,
	0x6e, 0x64, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x52, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x64, 0x61, 0x73, 0x1a, 0xcb, 0x01, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x64,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x1a, 0x82, 0x01, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x62, 0x69, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x62, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x62, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4e, 0x6f, 0x22, 0x35, 0x0a, 0x12, 0x56, 0x6f, 0x74,
	0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x22, 0xaf, 0x02, 0x0a, 0x13, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x62, 0x69, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x62, 0x69, 0x74, 0x73, 0x1a,
	0xa0, 0x01, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x64, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x64, 0x61, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x67, 0x65, 0x6e, 0x64,
	0x61, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xbf, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x07,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74,
	0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x1a, 0x42, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x64, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x64, 0x61, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x62, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x62, 0x69, 0x74, 0x73, 0x22, 0x68, 0x0a, 0x14, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x2d, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x22, 0x94, 0x0b, 0x0a, 0x12, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b,
	0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x1a, 0xd7, 0x03, 0x0a, 0x05,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x3c, 0x0a, 0x1a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x40, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x72, 0x65,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x29,
	0x0a, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x61, 0x73,
	0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x41, 0x73, 0x6d, 0x22, 0x38, 0x0a, 0x08, 0x54,
	0x72, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x47, 0x55, 0x4c,
	0x41, 0x52, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54,
	0x41, 0x4b, 0x45, 0x10, 0x01, 0x1a, 0xd2, 0x04, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x61, 0x73, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x41, 0x73, 0x6d, 0x12, 0x2f, 0x0a,
	0x13, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x53,
	0x0a, 0x0c, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf9,
	0x01, 0x0a, 0x0b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x10,
	0x0a, 0x0c, 0x4e, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x42, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x50, 0x55, 0x42, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x53, 0x49, 0x47, 0x10, 0x04, 0x12,
	0x0d, 0x0a, 0x09, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x05, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x47, 0x45,
	0x4e, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x52, 0x45, 0x56,
	0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41,
	0x4b, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x09, 0x12,
	0x0f, 0x0a, 0x0b, 0x50, 0x55, 0x42, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x4c, 0x54, 0x10, 0x0a,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x55, 0x42, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x48, 0x41, 0x53, 0x48,
	0x5f, 0x41, 0x4c, 0x54, 0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x47, 0x45, 0x4e, 0x10, 0x0c,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x41, 0x44, 0x44, 0x10, 0x0d, 0x22, 0x54, 0x0a, 0x1b, 0x44, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x16, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x5f, 0x0a, 0x1c, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xe1, 0x05, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c,
	0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x41, 0x64, 0x64, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6b, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x4e, 0x0a, 0x0b,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x12,
	0x70, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x54, 0x6f, 0x41,
	0x64, 0x64, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x69, 0x67,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x91, 0x02, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x54, 0x79, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x48,
	0x61, 0x73, 0x68, 0x54, 0x79, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x54, 0x79, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x53, 0x69, 0x67, 0x54, 0x79, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x75, 0x6c,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x10, 0x06,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x47, 0x65, 0x6e, 0x54, 0x79, 0x10, 0x07,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x53, 0x75, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x10, 0x09, 0x12, 0x0f, 0x0a,
	0x0b, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x41, 0x6c, 0x74, 0x54, 0x79, 0x10, 0x0a, 0x12, 0x13,
	0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x74, 0x54,
	0x79, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x47,
	0x65, 0x6e, 0x54, 0x79, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x54, 0x79, 0x10, 0x0d, 0x22, 0x33, 0x0a, 0x17, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x48,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x75,
	0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x14,
	0x61, 0x63, 0x63, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x75, 0x62,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x69, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x56, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x72,
	0x69, 0x76, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x15, 0x61, 0x63, 0x63, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x63,
	0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79,
	0x22, 0xba, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a,
	0x0f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x41, 0x0a, 0x0d, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x12, 0x0a,
	0x10, 0x42, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x3f, 0x0a, 0x11, 0x42, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x22, 0xc2, 0x01, 0x0a, 0x13, 0x53, 0x77, 0x65, 0x65, 0x70, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x66, 0x65, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6b, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66,
	0x65, 0x65, 0x50, 0x65, 0x72, 0x4b, 0x62, 0x22, 0xee, 0x01, 0x0a, 0x14, 0x53, 0x77, 0x65, 0x65,
	0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x14, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13,
	0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x1c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x13, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x46, 0x0a, 0x19, 0x41, 0x62, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x1c, 0x0a, 0x1a, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65,
	0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x68,
	0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x48, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x0e, 0x53, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x63, 0x0a,
	0x0f, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x13, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0xd4, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x11, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x5e, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x52, 0x61, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x2b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x22,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x6a, 0x6f, 0x69, 0x6e, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x70, 0x42, 0x79, 0x41, 0x63, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x67, 0x0a, 0x14, 0x63, 0x6f, 0x69, 0x6e, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x78,
	0x73, 0x53, 0x75, 0x6d, 0x42, 0x79, 0x41, 0x63, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x69, 0x6e, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x78,
	0x73, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x69,
	0x6e, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x78, 0x73, 0x53, 0x75, 0x6d, 0x22, 0x58, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x6a, 0x6f, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x70, 0x42, 0x79, 0x41, 0x63, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x6a,
	0x6f, 0x69, 0x6e, 0x54, 0x78, 0x73, 0x53, 0x75, 0x6d, 0x42, 0x79, 0x41, 0x63, 0x63, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd6, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x5d,
	0x0a, 0x14, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3b, 0x0a,
	0x12, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x16, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x17, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xc0, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0xe2, 0x01, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x5f, 0x76, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x56, 0x65, 0x72, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x61, 0x6e,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x56, 0x53,
	0x50, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x76, 0x73, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x73, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x73,
	0x70, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x73, 0x70, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x79,
	0x6e, 0x63, 0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x56, 0x53, 0x50, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x79, 0x46, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x53, 0x50, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x79, 0x46, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x09, 0x66, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7e, 0x0a,
	0x09, 0x46, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x53,
	0x50, 0x5f, 0x46, 0x45, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x53, 0x50, 0x5f, 0x46,
	0x45, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x49, 0x44, 0x10,
	0x01, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x53, 0x50, 0x5f, 0x46, 0x45, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1d,
	0x0a, 0x19, 0x56, 0x53, 0x50, 0x5f, 0x46, 0x45, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53,
	0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x03, 0x22, 0x49, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x79,
	0x46, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x73, 0x70,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x73, 0x70,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x73, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x73, 0x70, 0x50, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x01, 0x0a,
	0x1e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x76, 0x73, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x73, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x73,
	0x70, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x73, 0x70, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x66, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x21, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x56, 0x73, 0x70, 0x64,
	0x56, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x73, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x73, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x73, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x73, 0x70, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x65, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x56, 0x73, 0x70, 0x64, 0x56,
	0x6f, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x89, 0x03, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x76, 0x73, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x53, 0x50, 0x52, 0x04, 0x76,
	0x73, 0x70, 0x73, 0x1a, 0xc2, 0x01, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x25, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x65, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x66, 0x65, 0x65, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x63, 0x0a, 0x03, 0x56, 0x53, 0x50, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x56, 0x53, 0x50, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x90, 0x01,
	0x0a, 0x14, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x70, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x17, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xa7, 0x03, 0x0a, 0x14, 0x53, 0x79,
	0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x55, 0x4e, 0x53, 0x59, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x45, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x45, 0x54, 0x43, 0x48,
	0x45, 0x44, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x46, 0x49, 0x4c, 0x54,
	0x45, 0x52, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x25, 0x0a,
	0x21, 0x46, 0x45, 0x54, 0x43, 0x48, 0x45, 0x44, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47,
	0x5f, 0x43, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x05, 0x12, 0x25, 0x0a, 0x21, 0x46, 0x45, 0x54, 0x43, 0x48, 0x45, 0x44, 0x5f,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x53,
	0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x46,
	0x45, 0x54, 0x43, 0x48, 0x45, 0x44, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x53, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x45, 0x54, 0x43,
	0x48, 0x45, 0x44, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x45, 0x54, 0x43, 0x48, 0x45,
	0x44, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48,
	0x45, 0x44, 0x10, 0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52,
	0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x45, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x45, 0x44, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52,
	0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x45, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53,
	0x48, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x43, 0x41, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x53,
	0x43, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x0d, 0x12, 0x13,
	0x0a, 0x0f, 0x52, 0x45, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45,
	0x44, 0x10, 0x0e, 0x32, 0x52, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x85, 0x2c, 0x0a, 0x0d, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x19, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x12, 0x2a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50,
	0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x12, 0x2b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x12, 0x47, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x1b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x4c, 0x0a, 0x0b, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x42, 0x65, 0x73, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x07, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x75, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x69, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x12, 0x7a, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x2b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x5b,
	0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x12, 0x22, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x12, 0x18, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x12, 0x4c, 0x0a, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x78, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x22, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x17, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1e, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f,
	0x46, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x75, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x46,
	0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0e, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x67,
	0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5b, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x1a, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x6e, 0x6d,
	0x69, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x6e, 0x6d, 0x69, 0x6e,
	0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x27,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x22,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x53, 0x77, 0x65, 0x65, 0x70,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x77, 0x65, 0x65, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x77, 0x65, 0x65, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x41, 0x62, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x62, 0x61, 0x6e, 0x64,
	0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x53,
	0x69, 0x67, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x6a, 0x6f, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x70, 0x42, 0x79, 0x41,
	0x63, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x6a, 0x6f, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x70, 0x42, 0x79, 0x41, 0x63, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x6a, 0x6f, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x70,
	0x42, 0x79, 0x41, 0x63, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67,
	0x0a, 0x14, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x4c,
	0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x4c, 0x6f,
	0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x56, 0x53, 0x50, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x56, 0x53, 0x50, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x79, 0x46,
	0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x42, 0x79, 0x46, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x79,
	0x46, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6a, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a,
	0x17, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x61, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x56, 0x73, 0x70, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x73, 0x70, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x73, 0x70, 0x64, 0x56,
	0x6f, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x56, 0x53, 0x50, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x9b, 0x05, 0x0a, 0x13, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x4f, 0x6e, 0x6c, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x53, 0x70, 0x76, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x19, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x70, 0x76, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x76, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x07, 0x52,
	0x70, 0x63, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x19, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x70, 0x63, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x70,
	0x63, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x4c, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x63, 0x61,
	0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x63, 0x61, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x71, 0x0a,
	0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69, 0x78, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x69, 0x78, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69,
	0x78, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4d, 0x69, 0x78, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x32, 0x6f, 0x0a, 0x14, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x79, 0x65, 0x72, 0x56,
	0x32, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x79, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x32, 0xc0, 0x08, 0x0a, 0x12, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x79,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67,
	0x0a, 0x14, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4d, 0x61,
	0x78, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x64, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x25, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x22, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x56,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x50,
	0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x65, 0x65, 0x73, 0x12, 0x1d,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x0e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x78, 0x50, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xbb, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x65, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x53, 0x65, 0x65, 0x64, 0x12, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x51, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x73, 0x12, 0x19,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb4, 0x01, 0x0a, 0x0d, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x70, 0x0a, 0x1a,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x5e,
	0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x61, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61,
	0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x7f,
	0x0a, 0x14, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x14, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x24, 0x5a, 0x22, 0x64, 0x65, 0x63, 0x72, 0x65, 0x64, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x64, 0x63,
	0x72, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 232)
var file_api_proto_goTypes = []interface{}{
	(SyncNotificationType)(0),                                          // 0: walletrpc.SyncNotificationType
	(TransactionDetails_TransactionType)(0),                            // 1: walletrpc.TransactionDetails.TransactionType
	(NextAddressRequest_Kind)(0),                                       // 2: walletrpc.NextAddressRequest.Kind
	(NextAddressRequest_GapPolicy)(0),                                  // 3: walletrpc.NextAddressRequest.GapPolicy
	(GetTicketsResponse_TicketDetails_TicketStatus)(0),                 // 4: walletrpc.GetTicketsResponse.TicketDetails.TicketStatus
	(ChangePassphraseRequest_Key)(0),                                   // 5: walletrpc.ChangePassphraseRequest.Key
	(ConstructTransactionRequest_OutputSelectionAlgorithm)(0),          // 6: walletrpc.ConstructTransactionRequest.OutputSelectionAlgorithm
	(CreateSignatureRequest_SigHashType)(0),                            // 7: walletrpc.CreateSignatureRequest.SigHashType
	(DecodedTransaction_Input_TreeType)(0),                             // 8: walletrpc.DecodedTransaction.Input.TreeType
	(DecodedTransaction_Output_ScriptClass)(0),                         // 9: walletrpc.DecodedTransaction.Output.ScriptClass
	(ValidateAddressResponse_ScriptType)(0),                            // 10: walletrpc.ValidateAddressResponse.ScriptType
	(GetVSPTicketsByFeeStatusRequest_FeeStatus)(0),                     // 11: walletrpc.GetVSPTicketsByFeeStatusRequest.FeeStatus
	(*VersionRequest)(nil),                                             // 12: walletrpc.VersionRequest
	(*VersionResponse)(nil),                                            // 13: walletrpc.VersionResponse
	(*TransactionDetails)(nil),                                         // 14: walletrpc.TransactionDetails
	(*BlockDetails)(nil),                                               // 15: walletrpc.BlockDetails
	(*DetachedBlockDetails)(nil),                                       // 16: walletrpc.DetachedBlockDetails
	(*AccountBalance)(nil),                                             // 17: walletrpc.AccountBalance
	(*PingRequest)(nil),                                                // 18: walletrpc.PingRequest
	(*PingResponse)(nil),                                               // 19: walletrpc.PingResponse
	(*NetworkRequest)(nil),                                             // 20: walletrpc.NetworkRequest
	(*NetworkResponse)(nil),                                            // 21: walletrpc.NetworkResponse
	(*CoinTypeRequest)(nil),                                            // 22: walletrpc.CoinTypeRequest
	(*CoinTypeResponse)(nil),                                           // 23: walletrpc.CoinTypeResponse
	(*AccountNumberRequest)(nil),                                       // 24: walletrpc.AccountNumberRequest
	(*AccountNumberResponse)(nil),                                      // 25: walletrpc.AccountNumberResponse
	(*AccountsRequest)(nil),                                            // 26: walletrpc.AccountsRequest
	(*AccountsResponse)(nil),                                           // 27: walletrpc.AccountsResponse
	(*RenameAccountRequest)(nil),                                       // 28: walletrpc.RenameAccountRequest
	(*RenameAccountResponse)(nil),                                      // 29: walletrpc.RenameAccountResponse
	(*RescanRequest)(nil),                                              // 30: walletrpc.RescanRequest
	(*RescanResponse)(nil),                                             // 31: walletrpc.RescanResponse
	(*NextAccountRequest)(nil),                                         // 32: walletrpc.NextAccountRequest
	(*NextAccountResponse)(nil),                                        // 33: walletrpc.NextAccountResponse
	(*NextAddressRequest)(nil),                                         // 34: walletrpc.NextAddressRequest
	(*NextAddressResponse)(nil),                                        // 35: walletrpc.NextAddressResponse
	(*ImportPrivateKeyRequest)(nil),                                    // 36: walletrpc.ImportPrivateKeyRequest
	(*ImportPrivateKeyResponse)(nil),                                   // 37: walletrpc.ImportPrivateKeyResponse
	(*ImportExtendedPublicKeyRequest)(nil),                             // 38: walletrpc.ImportExtendedPublicKeyRequest
	(*ImportExtendedPublicKeyResponse)(nil),                            // 39: walletrpc.ImportExtendedPublicKeyResponse
	(*ImportScriptRequest)(nil),                                        // 40: walletrpc.ImportScriptRequest
	(*ImportScriptResponse)(nil),                                       // 41: walletrpc.ImportScriptResponse
	(*BalanceRequest)(nil),                                             // 42: walletrpc.BalanceRequest
	(*BalanceResponse)(nil),                                            // 43: walletrpc.BalanceResponse
	(*GetTransactionRequest)(nil),                                      // 44: walletrpc.GetTransactionRequest
	(*GetTransactionResponse)(nil),                                     // 45: walletrpc.GetTransactionResponse
	(*GetTransactionsRequest)(nil),                                     // 46: walletrpc.GetTransactionsRequest
	(*GetTransactionsResponse)(nil),                                    // 47: walletrpc.GetTransactionsResponse
	(*GetTicketRequest)(nil),                                           // 48: walletrpc.GetTicketRequest
	(*GetTicketsRequest)(nil),                                          // 49: walletrpc.GetTicketsRequest
	(*GetTicketsResponse)(nil),                                         // 50: walletrpc.GetTicketsResponse
	(*TicketPriceRequest)(nil),                                         // 51: walletrpc.TicketPriceRequest
	(*TicketPriceResponse)(nil),                                        // 52: walletrpc.TicketPriceResponse
	(*StakeInfoRequest)(nil),                                           // 53: walletrpc.StakeInfoRequest
	(*StakeInfoResponse)(nil),                                          // 54: walletrpc.StakeInfoResponse
	(*BlockInfoRequest)(nil),                                           // 55: walletrpc.BlockInfoRequest
	(*BlockInfoResponse)(nil),                                          // 56: walletrpc.BlockInfoResponse
	(*ChangePassphraseRequest)(nil),                                    // 57: walletrpc.ChangePassphraseRequest
	(*ChangePassphraseResponse)(nil),                                   // 58: walletrpc.ChangePassphraseResponse
	(*FundTransactionRequest)(nil),                                     // 59: walletrpc.FundTransactionRequest
	(*FundTransactionResponse)(nil),                                    // 60: walletrpc.FundTransactionResponse
	(*UnspentOutputsRequest)(nil),                                      // 61: walletrpc.UnspentOutputsRequest
	(*UnspentOutputResponse)(nil),                                      // 62: walletrpc.UnspentOutputResponse
	(*ConstructTransactionRequest)(nil),                                // 63: walletrpc.ConstructTransactionRequest
	(*ConstructTransactionResponse)(nil),                               // 64: walletrpc.ConstructTransactionResponse
	(*SignTransactionRequest)(nil),                                     // 65: walletrpc.SignTransactionRequest
	(*SignTransactionResponse)(nil),                                    // 66: walletrpc.SignTransactionResponse
	(*SignTransactionsRequest)(nil),                                    // 67: walletrpc.SignTransactionsRequest
	(*SignTransactionsResponse)(nil),                                   // 68: walletrpc.SignTransactionsResponse
	(*CreateSignatureRequest)(nil),                                     // 69: walletrpc.CreateSignatureRequest
	(*CreateSignatureResponse)(nil),                                    // 70: walletrpc.CreateSignatureResponse
	(*PublishTransactionRequest)(nil),                                  // 71: walletrpc.PublishTransactionRequest
	(*PublishTransactionResponse)(nil),                                 // 72: walletrpc.PublishTransactionResponse
	(*PublishUnminedTransactionsRequest)(nil),                          // 73: walletrpc.PublishUnminedTransactionsRequest
	(*PublishUnminedTransactionsResponse)(nil),                         // 74: walletrpc.PublishUnminedTransactionsResponse
	(*PurchaseTicketsRequest)(nil),                                     // 75: walletrpc.PurchaseTicketsRequest
	(*PurchaseTicketsResponse)(nil),                                    // 76: walletrpc.PurchaseTicketsResponse
	(*RevokeTicketRequest)(nil),                                        // 77: walletrpc.RevokeTicketRequest
	(*RevokeTicketResponse)(nil),                                       // 78: walletrpc.RevokeTicketResponse
	(*RevokeTicketsRequest)(nil),                                       // 79: walletrpc.RevokeTicketsRequest
	(*RevokeTicketsResponse)(nil),                                      // 80: walletrpc.RevokeTicketsResponse
	(*LoadActiveDataFiltersRequest)(nil),                               // 81: walletrpc.LoadActiveDataFiltersRequest
	(*LoadActiveDataFiltersResponse)(nil),                              // 82: walletrpc.LoadActiveDataFiltersResponse
	(*SignMessageRequest)(nil),                                         // 83: walletrpc.SignMessageRequest
	(*SignMessageResponse)(nil),                                        // 84: walletrpc.SignMessageResponse
	(*SignMessagesRequest)(nil),                                        // 85: walletrpc.SignMessagesRequest
	(*SignMessagesResponse)(nil),                                       // 86: walletrpc.SignMessagesResponse
	(*TransactionNotificationsRequest)(nil),                            // 87: walletrpc.TransactionNotificationsRequest
	(*TransactionNotificationsResponse)(nil),                           // 88: walletrpc.TransactionNotificationsResponse
	(*AccountNotificationsRequest)(nil),                                // 89: walletrpc.AccountNotificationsRequest
	(*AccountNotificationsResponse)(nil),                               // 90: walletrpc.AccountNotificationsResponse
	(*ConfirmationNotificationsRequest)(nil),                           // 91: walletrpc.ConfirmationNotificationsRequest
	(*ConfirmationNotificationsResponse)(nil),                          // 92: walletrpc.ConfirmationNotificationsResponse
	(*CreateWalletRequest)(nil),                                        // 93: walletrpc.CreateWalletRequest
	(*CreateWalletResponse)(nil),                                       // 94: walletrpc.CreateWalletResponse
	(*CreateWatchingOnlyWalletRequest)(nil),                            // 95: walletrpc.CreateWatchingOnlyWalletRequest
	(*CreateWatchingOnlyWalletResponse)(nil),                           // 96: walletrpc.CreateWatchingOnlyWalletResponse
	(*OpenWalletRequest)(nil),                                          // 97: walletrpc.OpenWalletRequest
	(*OpenWalletResponse)(nil),                                         // 98: walletrpc.OpenWalletResponse
	(*CloseWalletRequest)(nil),                                         // 99: walletrpc.CloseWalletRequest
	(*CloseWalletResponse)(nil),                                        // 100: walletrpc.CloseWalletResponse
	(*WalletExistsRequest)(nil),                                        // 101: walletrpc.WalletExistsRequest
	(*WalletExistsResponse)(nil),                                       // 102: walletrpc.WalletExistsResponse
	(*StartConsensusRpcRequest)(nil),                                   // 103: walletrpc.StartConsensusRpcRequest
	(*StartConsensusRpcResponse)(nil),                                  // 104: walletrpc.StartConsensusRpcResponse
	(*DiscoverAddressesRequest)(nil),                                   // 105: walletrpc.DiscoverAddressesRequest
	(*DiscoverAddressesResponse)(nil),                                  // 106: walletrpc.DiscoverAddressesResponse
	(*FetchMissingCFiltersRequest)(nil),                                // 107: walletrpc.FetchMissingCFiltersRequest
	(*FetchMissingCFiltersResponse)(nil),                               // 108: walletrpc.FetchMissingCFiltersResponse
	(*SubscribeToBlockNotificationsRequest)(nil),                       // 109: walletrpc.SubscribeToBlockNotificationsRequest
	(*SubscribeToBlockNotificationsResponse)(nil),                      // 110: walletrpc.SubscribeToBlockNotificationsResponse
	(*FetchHeadersRequest)(nil),                                        // 111: walletrpc.FetchHeadersRequest
	(*FetchHeadersResponse)(nil),                                       // 112: walletrpc.FetchHeadersResponse
	(*FetchHeadersNotification)(nil),                                   // 113: walletrpc.FetchHeadersNotification
	(*FetchMissingCFiltersNotification)(nil),                           // 114: walletrpc.FetchMissingCFiltersNotification
	(*RescanProgressNotification)(nil),                                 // 115: walletrpc.RescanProgressNotification
	(*PeerNotification)(nil),                                           // 116: walletrpc.PeerNotification
	(*RpcSyncRequest)(nil),                                             // 117: walletrpc.RpcSyncRequest
	(*RpcSyncResponse)(nil),                                            // 118: walletrpc.RpcSyncResponse
	(*SpvSyncRequest)(nil),                                             // 119: walletrpc.SpvSyncRequest
	(*SpvSyncResponse)(nil),                                            // 120: walletrpc.SpvSyncResponse
	(*RescanPointRequest)(nil),                                         // 121: walletrpc.RescanPointRequest
	(*RescanPointResponse)(nil),                                        // 122: walletrpc.RescanPointResponse
	(*GenerateRandomSeedRequest)(nil),                                  // 123: walletrpc.GenerateRandomSeedRequest
	(*GenerateRandomSeedResponse)(nil),                                 // 124: walletrpc.GenerateRandomSeedResponse
	(*DecodeSeedRequest)(nil),                                          // 125: walletrpc.DecodeSeedRequest
	(*DecodeSeedResponse)(nil),                                         // 126: walletrpc.DecodeSeedResponse
	(*RunTicketBuyerRequest)(nil),                                      // 127: walletrpc.RunTicketBuyerRequest
	(*RunTicketBuyerResponse)(nil),                                     // 128: walletrpc.RunTicketBuyerResponse
	(*RunAccountMixerRequest)(nil),                                     // 129: walletrpc.RunAccountMixerRequest
	(*RunAccountMixerResponse)(nil),                                    // 130: walletrpc.RunAccountMixerResponse
	(*StartAutoBuyerRequest)(nil),                                      // 131: walletrpc.StartAutoBuyerRequest
	(*StartAutoBuyerResponse)(nil),                                     // 132: walletrpc.StartAutoBuyerResponse
	(*StopAutoBuyerRequest)(nil),                                       // 133: walletrpc.StopAutoBuyerRequest
	(*StopAutoBuyerResponse)(nil),                                      // 134: walletrpc.StopAutoBuyerResponse
	(*TicketBuyerConfigRequest)(nil),                                   // 135: walletrpc.TicketBuyerConfigRequest
	(*TicketBuyerConfigResponse)(nil),                                  // 136: walletrpc.TicketBuyerConfigResponse
	(*SetAccountRequest)(nil),                                          // 137: walletrpc.SetAccountRequest
	(*SetAccountResponse)(nil),                                         // 138: walletrpc.SetAccountResponse
	(*SetBalanceToMaintainRequest)(nil),                                // 139: walletrpc.SetBalanceToMaintainRequest
	(*SetBalanceToMaintainResponse)(nil),                               // 140: walletrpc.SetBalanceToMaintainResponse
	(*SetMaxFeeRequest)(nil),                                           // 141: walletrpc.SetMaxFeeRequest
	(*SetMaxFeeResponse)(nil),                                          // 142: walletrpc.SetMaxFeeResponse
	(*SetMaxPriceRelativeRequest)(nil),                                 // 143: walletrpc.SetMaxPriceRelativeRequest
	(*SetMaxPriceRelativeResponse)(nil),                                // 144: walletrpc.SetMaxPriceRelativeResponse
	(*SetMaxPriceAbsoluteRequest)(nil),                                 // 145: walletrpc.SetMaxPriceAbsoluteRequest
	(*SetMaxPriceAbsoluteResponse)(nil),                                // 146: walletrpc.SetMaxPriceAbsoluteResponse
	(*SetVotingAddressRequest)(nil),                                    // 147: walletrpc.SetVotingAddressRequest
	(*SetVotingAddressResponse)(nil),                                   // 148: walletrpc.SetVotingAddressResponse
	(*SetPoolAddressRequest)(nil),                                      // 149: walletrpc.SetPoolAddressRequest
	(*SetPoolAddressResponse)(nil),                                     // 150: walletrpc.SetPoolAddressResponse
	(*SetPoolFeesRequest)(nil),                                         // 151: walletrpc.SetPoolFeesRequest
	(*SetPoolFeesResponse)(nil),                                        // 152: walletrpc.SetPoolFeesResponse
	(*SetMaxPerBlockRequest)(nil),                                      // 153: walletrpc.SetMaxPerBlockRequest
	(*SetMaxPerBlockResponse)(nil),                                     // 154: walletrpc.SetMaxPerBlockResponse
	(*AgendasRequest)(nil),                                             // 155: walletrpc.AgendasRequest
	(*AgendasResponse)(nil),                                            // 156: walletrpc.AgendasResponse
	(*VoteChoicesRequest)(nil),                                         // 157: walletrpc.VoteChoicesRequest
	(*VoteChoicesResponse)(nil),                                        // 158: walletrpc.VoteChoicesResponse
	(*SetVoteChoicesRequest)(nil),                                      // 159: walletrpc.SetVoteChoicesRequest
	(*SetVoteChoicesResponse)(nil),                                     // 160: walletrpc.SetVoteChoicesResponse
	(*VerifyMessageRequest)(nil),                                       // 161: walletrpc.VerifyMessageRequest
	(*VerifyMessageResponse)(nil),                                      // 162: walletrpc.VerifyMessageResponse
	(*DecodedTransaction)(nil),                                         // 163: walletrpc.DecodedTransaction
	(*DecodeRawTransactionRequest)(nil),                                // 164: walletrpc.DecodeRawTransactionRequest
	(*DecodeRawTransactionResponse)(nil),                               // 165: walletrpc.DecodeRawTransactionResponse
	(*ValidateAddressRequest)(nil),                                     // 166: walletrpc.ValidateAddressRequest
	(*ValidateAddressResponse)(nil),                                    // 167: walletrpc.ValidateAddressResponse
	(*CommittedTicketsRequest)(nil),                                    // 168: walletrpc.CommittedTicketsRequest
	(*GetAccountExtendedPubKeyRequest)(nil),                            // 169: walletrpc.GetAccountExtendedPubKeyRequest
	(*GetAccountExtendedPubKeyResponse)(nil),                           // 170: walletrpc.GetAccountExtendedPubKeyResponse
	(*GetAccountExtendedPrivKeyRequest)(nil),                           // 171: walletrpc.GetAccountExtendedPrivKeyRequest
	(*GetAccountExtendedPrivKeyResponse)(nil),                          // 172: walletrpc.GetAccountExtendedPrivKeyResponse
	(*CommittedTicketsResponse)(nil),                                   // 173: walletrpc.CommittedTicketsResponse
	(*BestBlockRequest)(nil),                                           // 174: walletrpc.BestBlockRequest
	(*BestBlockResponse)(nil),                                          // 175: walletrpc.BestBlockResponse
	(*SweepAccountRequest)(nil),                                        // 176: walletrpc.SweepAccountRequest
	(*SweepAccountResponse)(nil),                                       // 177: walletrpc.SweepAccountResponse
	(*AbandonTransactionRequest)(nil),                                  // 178: walletrpc.AbandonTransactionRequest
	(*AbandonTransactionResponse)(nil),                                 // 179: walletrpc.AbandonTransactionResponse
	(*SignHashesRequest)(nil),                                          // 180: walletrpc.SignHashesRequest
	(*SignHashesResponse)(nil),                                         // 181: walletrpc.SignHashesResponse
	(*SpenderRequest)(nil),                                             // 182: walletrpc.SpenderRequest
	(*SpenderResponse)(nil),                                            // 183: walletrpc.SpenderResponse
	(*GetCFiltersRequest)(nil),                                         // 184: walletrpc.GetCFiltersRequest
	(*GetCFiltersResponse)(nil),                                        // 185: walletrpc.GetCFiltersResponse
	(*GetRawBlockRequest)(nil),                                         // 186: walletrpc.GetRawBlockRequest
	(*GetRawBlockResponse)(nil),                                        // 187: walletrpc.GetRawBlockResponse
	(*GetCoinjoinOutputspByAcctRequest)(nil),                           // 188: walletrpc.GetCoinjoinOutputspByAcctRequest
	(*CoinjoinTxsSumByAcct)(nil),                                       // 189: walletrpc.coinjoinTxsSumByAcct
	(*GetCoinjoinOutputspByAcctResponse)(nil),                          // 190: walletrpc.GetCoinjoinOutputspByAcctResponse
	(*SetAccountPassphraseRequest)(nil),                                // 191: walletrpc.SetAccountPassphraseRequest
	(*UnlockAccountRequest)(nil),                                       // 192: walletrpc.UnlockAccountRequest
	(*LockAccountRequest)(nil),                                         // 193: walletrpc.LockAccountRequest
	(*SetAccountPassphraseResponse)(nil),                               // 194: walletrpc.SetAccountPassphraseResponse
	(*UnlockAccountResponse)(nil),                                      // 195: walletrpc.UnlockAccountResponse
	(*LockAccountResponse)(nil),                                        // 196: walletrpc.LockAccountResponse
	(*AccountUnlockedRequest)(nil),                                     // 197: walletrpc.AccountUnlockedRequest
	(*AccountUnlockedResponse)(nil),                                    // 198: walletrpc.AccountUnlockedResponse
	(*UnlockWalletRequest)(nil),                                        // 199: walletrpc.UnlockWalletRequest
	(*UnlockWalletResponse)(nil),                                       // 200: walletrpc.UnlockWalletResponse
	(*LockWalletRequest)(nil),                                          // 201: walletrpc.LockWalletRequest
	(*LockWalletResponse)(nil),                                         // 202: walletrpc.LockWalletResponse
	(*GetPeerInfoRequest)(nil),                                         // 203: walletrpc.GetPeerInfoRequest
	(*GetPeerInfoResponse)(nil),                                        // 204: walletrpc.GetPeerInfoResponse
	(*SyncVSPTicketsRequest)(nil),                                      // 205: walletrpc.SyncVSPTicketsRequest
	(*SyncVSPTicketsResponse)(nil),                                     // 206: walletrpc.SyncVSPTicketsResponse
	(*GetVSPTicketsByFeeStatusRequest)(nil),                            // 207: walletrpc.GetVSPTicketsByFeeStatusRequest
	(*GetVSPTicketsByFeeStatusResponse)(nil),                           // 208: walletrpc.GetVSPTicketsByFeeStatusResponse
	(*ProcessManagedTicketsRequest)(nil),                               // 209: walletrpc.ProcessManagedTicketsRequest
	(*ProcessManagedTicketsResponse)(nil),                              // 210: walletrpc.ProcessManagedTicketsResponse
	(*ProcessUnmanagedTicketsRequest)(nil),                             // 211: walletrpc.ProcessUnmanagedTicketsRequest
	(*ProcessUnmanagedTicketsResponse)(nil),                            // 212: walletrpc.ProcessUnmanagedTicketsResponse
	(*SetVspdVoteChoicesRequest)(nil),                                  // 213: walletrpc.SetVspdVoteChoicesRequest
	(*SetVspdVoteChoicesResponse)(nil),                                 // 214: walletrpc.SetVspdVoteChoicesResponse
	(*GetTrackedVSPTicketsRequest)(nil),                                // 215: walletrpc.GetTrackedVSPTicketsRequest
	(*GetTrackedVSPTicketsResponse)(nil),                               // 216: walletrpc.GetTrackedVSPTicketsResponse
	(*DiscoverUsageRequest)(nil),                                       // 217: walletrpc.DiscoverUsageRequest
	(*DiscoverUsageResponse)(nil),                                      // 218: walletrpc.DiscoverUsageResponse
	(*TransactionDetails_Input)(nil),                                   // 219: walletrpc.TransactionDetails.Input
	(*TransactionDetails_Output)(nil),                                  // 220: walletrpc.TransactionDetails.Output
	(*AccountsResponse_Account)(nil),                                   // 221: walletrpc.AccountsResponse.Account
	(*GetTicketsResponse_TicketDetails)(nil),                           // 222: walletrpc.GetTicketsResponse.TicketDetails
	(*GetTicketsResponse_BlockDetails)(nil),                            // 223: walletrpc.GetTicketsResponse.BlockDetails
	(*FundTransactionResponse_PreviousOutput)(nil),                     // 224: walletrpc.FundTransactionResponse.PreviousOutput
	(*ConstructTransactionRequest_OutputDestination)(nil),              // 225: walletrpc.ConstructTransactionRequest.OutputDestination
	(*ConstructTransactionRequest_Output)(nil),                         // 226: walletrpc.ConstructTransactionRequest.Output
	(*SignTransactionRequest_AdditionalScript)(nil),                    // 227: walletrpc.SignTransactionRequest.AdditionalScript
	(*SignTransactionsRequest_AdditionalScript)(nil),                   // 228: walletrpc.SignTransactionsRequest.AdditionalScript
	(*SignTransactionsRequest_UnsignedTransaction)(nil),                // 229: walletrpc.SignTransactionsRequest.UnsignedTransaction
	(*SignTransactionsResponse_SignedTransaction)(nil),                 // 230: walletrpc.SignTransactionsResponse.SignedTransaction
	(*SignMessagesRequest_Message)(nil),                                // 231: walletrpc.SignMessagesRequest.Message
	(*SignMessagesResponse_SignReply)(nil),                             // 232: walletrpc.SignMessagesResponse.SignReply
	(*ConfirmationNotificationsResponse_TransactionConfirmations)(nil), // 233: walletrpc.ConfirmationNotificationsResponse.TransactionConfirmations
	(*AgendasResponse_Agenda)(nil),                                     // 234: walletrpc.AgendasResponse.Agenda
	(*AgendasResponse_Choice)(nil),                                     // 235: walletrpc.AgendasResponse.Choice
	(*VoteChoicesResponse_Choice)(nil),                                 // 236: walletrpc.VoteChoicesResponse.Choice
	(*SetVoteChoicesRequest_Choice)(nil),                               // 237: walletrpc.SetVoteChoicesRequest.Choice
	(*DecodedTransaction_Input)(nil),                                   // 238: walletrpc.DecodedTransaction.Input
	(*DecodedTransaction_Output)(nil),                                  // 239: walletrpc.DecodedTransaction.Output
	(*CommittedTicketsResponse_TicketAddress)(nil),                     // 240: walletrpc.CommittedTicketsResponse.TicketAddress
	(*GetPeerInfoResponse_PeerInfo)(nil),                               // 241: walletrpc.GetPeerInfoResponse.PeerInfo
	(*GetTrackedVSPTicketsResponse_Ticket)(nil),                        // 242: walletrpc.GetTrackedVSPTicketsResponse.Ticket
	(*GetTrackedVSPTicketsResponse_VSP)(nil),                           // 243: walletrpc.GetTrackedVSPTicketsResponse.VSP
}
var file_api_proto_depIdxs = []int32{
	219, // 0: walletrpc.TransactionDetails.debits:type_name -> walletrpc.TransactionDetails.Input
	220, // 1: walletrpc.TransactionDetails.credits:type_name -> walletrpc.TransactionDetails.Output
	1,   // 2: walletrpc.TransactionDetails.transaction_type:type_name -> walletrpc.TransactionDetails.TransactionType
	14,  // 3: walletrpc.BlockDetails.transactions:type_name -> walletrpc.TransactionDetails
	221, // 4: walletrpc.AccountsResponse.accounts:type_name -> walletrpc.AccountsResponse.Account
	2,   // 5: walletrpc.NextAddressRequest.kind:type_name -> walletrpc.NextAddressRequest.Kind
	3,   // 6: walletrpc.NextAddressRequest.gap_policy:type_name -> walletrpc.NextAddressRequest.GapPolicy
	14,  // 7: walletrpc.GetTransactionResponse.transaction:type_name -> walletrpc.TransactionDetails
	15,  // 8: walletrpc.GetTransactionsResponse.mined_transactions:type_name -> walletrpc.BlockDetails
	14,  // 9: walletrpc.GetTransactionsResponse.unmined_transactions:type_name -> walletrpc.TransactionDetails
	222, // 10: walletrpc.GetTicketsResponse.ticket:type_name -> walletrpc.GetTicketsResponse.TicketDetails
	223, // 11: walletrpc.GetTicketsResponse.block:type_name -> walletrpc.GetTicketsResponse.BlockDetails
	5,   // 12: walletrpc.ChangePassphraseRequest.key:type_name -> walletrpc.ChangePassphraseRequest.Key
	224, // 13: walletrpc.FundTransactionResponse.selected_outputs:type_name -> walletrpc.FundTransactionResponse.PreviousOutput
	6,   // 14: walletrpc.ConstructTransactionRequest.output_selection_algorithm:type_name -> walletrpc.ConstructTransactionRequest.OutputSelectionAlgorithm
	226, // 15: walletrpc.ConstructTransactionRequest.non_change_outputs:type_name -> walletrpc.ConstructTransactionRequest.Output
	225, // 16: walletrpc.ConstructTransactionRequest.change_destination:type_name -> walletrpc.ConstructTransactionRequest.OutputDestination
	227, // 17: walletrpc.SignTransactionRequest.additional_scripts:type_name -> walletrpc.SignTransactionRequest.AdditionalScript
	229, // 18: walletrpc.SignTransactionsRequest.transactions:type_name -> walletrpc.SignTransactionsRequest.UnsignedTransaction
	228, // 19: walletrpc.SignTransactionsRequest.additional_scripts:type_name -> walletrpc.SignTransactionsRequest.AdditionalScript
	230, // 20: walletrpc.SignTransactionsResponse.transactions:type_name -> walletrpc.SignTransactionsResponse.SignedTransaction
	7,   // 21: walletrpc.CreateSignatureRequest.hash_type:type_name -> walletrpc.CreateSignatureRequest.SigHashType
	231, // 22: walletrpc.SignMessagesRequest.messages:type_name -> walletrpc.SignMessagesRequest.Message
	232, // 23: walletrpc.SignMessagesResponse.replies:type_name -> walletrpc.SignMessagesResponse.SignReply
	15,  // 24: walletrpc.TransactionNotificationsResponse.attached_blocks:type_name -> walletrpc.BlockDetails
	14,  // 25: walletrpc.TransactionNotificationsResponse.unmined_transactions:type_name -> walletrpc.TransactionDetails
	16,  // 26: walletrpc.TransactionNotificationsResponse.detached_block_headers:type_name -> walletrpc.DetachedBlockDetails
	233, // 27: walletrpc.ConfirmationNotificationsResponse.confirmations:type_name -> walletrpc.ConfirmationNotificationsResponse.TransactionConfirmations
	0,   // 28: walletrpc.RpcSyncResponse.notification_type:type_name -> walletrpc.SyncNotificationType
	113, // 29: walletrpc.RpcSyncResponse.fetch_headers:type_name -> walletrpc.FetchHeadersNotification
	114, // 30: walletrpc.RpcSyncResponse.fetch_missing_cfilters:type_name -> walletrpc.FetchMissingCFiltersNotification
	115, // 31: walletrpc.RpcSyncResponse.rescan_progress:type_name -> walletrpc.RescanProgressNotification
	116, // 32: walletrpc.RpcSyncResponse.peer_information:type_name -> walletrpc.PeerNotification
	0,   // 33: walletrpc.SpvSyncResponse.notification_type:type_name -> walletrpc.SyncNotificationType
	113, // 34: walletrpc.SpvSyncResponse.fetch_headers:type_name -> walletrpc.FetchHeadersNotification
	114, // 35: walletrpc.SpvSyncResponse.fetch_missing_cfilters:type_name -> walletrpc.FetchMissingCFiltersNotification
	115, // 36: walletrpc.SpvSyncResponse.rescan_progress:type_name -> walletrpc.RescanProgressNotification
	116, // 37: walletrpc.SpvSyncResponse.peer_information:type_name -> walletrpc.PeerNotification
	234, // 38: walletrpc.AgendasResponse.agendas:type_name -> walletrpc.AgendasResponse.Agenda
	236, // 39: walletrpc.VoteChoicesResponse.choices:type_name -> walletrpc.VoteChoicesResponse.Choice
	237, // 40: walletrpc.SetVoteChoicesRequest.choices:type_name -> walletrpc.SetVoteChoicesRequest.Choice
	1,   // 41: walletrpc.DecodedTransaction.transaction_type:type_name -> walletrpc.TransactionDetails.TransactionType
	238, // 42: walletrpc.DecodedTransaction.inputs:type_name -> walletrpc.DecodedTransaction.Input
	239, // 43: walletrpc.DecodedTransaction.outputs:type_name -> walletrpc.DecodedTransaction.Output
	163, // 44: walletrpc.DecodeRawTransactionResponse.transaction:type_name -> walletrpc.DecodedTransaction
	10,  // 45: walletrpc.ValidateAddressResponse.script_type:type_name -> walletrpc.ValidateAddressResponse.ScriptType
	240, // 46: walletrpc.CommittedTicketsResponse.ticketAddresses:type_name -> walletrpc.CommittedTicketsResponse.TicketAddress
	189, // 47: walletrpc.GetCoinjoinOutputspByAcctResponse.data:type_name -> walletrpc.coinjoinTxsSumByAcct
	241, // 48: walletrpc.GetPeerInfoResponse.peer_info:type_name -> walletrpc.GetPeerInfoResponse.PeerInfo
	11,  // 49: walletrpc.GetVSPTicketsByFeeStatusRequest.fee_status:type_name -> walletrpc.GetVSPTicketsByFeeStatusRequest.FeeStatus
	243, // 50: walletrpc.GetTrackedVSPTicketsResponse.vsps:type_name -> walletrpc.GetTrackedVSPTicketsResponse.VSP
	14,  // 51: walletrpc.GetTicketsResponse.TicketDetails.ticket:type_name -> walletrpc.TransactionDetails
	14,  // 52: walletrpc.GetTicketsResponse.TicketDetails.spender:type_name -> walletrpc.TransactionDetails
	4,   // 53: walletrpc.GetTicketsResponse.TicketDetails.ticket_status:type_name -> walletrpc.GetTicketsResponse.TicketDetails.TicketStatus
	225, // 54: walletrpc.ConstructTransactionRequest.Output.destination:type_name -> walletrpc.ConstructTransactionRequest.OutputDestination
	235, // 55: walletrpc.AgendasResponse.Agenda.choices:type_name -> walletrpc.AgendasResponse.Choice
	8,   // 56: walletrpc.DecodedTransaction.Input.tree:type_name -> walletrpc.DecodedTransaction.Input.TreeType
	9,   // 57: walletrpc.DecodedTransaction.Output.script_class:type_name -> walletrpc.DecodedTransaction.Output.ScriptClass
	242, // 58: walletrpc.GetTrackedVSPTicketsResponse.VSP.tickets:type_name -> walletrpc.GetTrackedVSPTicketsResponse.Ticket
	12,  // 59: walletrpc.VersionService.Version:input_type -> walletrpc.VersionRequest
	18,  // 60: walletrpc.WalletService.Ping:input_type -> walletrpc.PingRequest
	20,  // 61: walletrpc.WalletService.Network:input_type -> walletrpc.NetworkRequest
	22,  // 62: walletrpc.WalletService.CoinType:input_type -> walletrpc.CoinTypeRequest
	24,  // 63: walletrpc.WalletService.AccountNumber:input_type -> walletrpc.AccountNumberRequest
	26,  // 64: walletrpc.WalletService.Accounts:input_type -> walletrpc.AccountsRequest
	42,  // 65: walletrpc.WalletService.Balance:input_type -> walletrpc.BalanceRequest
	169, // 66: walletrpc.WalletService.GetAccountExtendedPubKey:input_type -> walletrpc.GetAccountExtendedPubKeyRequest
	171, // 67: walletrpc.WalletService.GetAccountExtendedPrivKey:input_type -> walletrpc.GetAccountExtendedPrivKeyRequest
	44,  // 68: walletrpc.WalletService.GetTransaction:input_type -> walletrpc.GetTransactionRequest
	46,  // 69: walletrpc.WalletService.GetTransactions:input_type -> walletrpc.GetTransactionsRequest
	48,  // 70: walletrpc.WalletService.GetTicket:input_type -> walletrpc.GetTicketRequest
	49,  // 71: walletrpc.WalletService.GetTickets:input_type -> walletrpc.GetTicketsRequest
	51,  // 72: walletrpc.WalletService.TicketPrice:input_type -> walletrpc.TicketPriceRequest
	53,  // 73: walletrpc.WalletService.StakeInfo:input_type -> walletrpc.StakeInfoRequest
	55,  // 74: walletrpc.WalletService.BlockInfo:input_type -> walletrpc.BlockInfoRequest
	174, // 75: walletrpc.WalletService.BestBlock:input_type -> walletrpc.BestBlockRequest
	182, // 76: walletrpc.WalletService.Spender:input_type -> walletrpc.SpenderRequest
	184, // 77: walletrpc.WalletService.GetCFilters:input_type -> walletrpc.GetCFiltersRequest
	203, // 78: walletrpc.WalletService.GetPeerInfo:input_type -> walletrpc.GetPeerInfoRequest
	87,  // 79: walletrpc.WalletService.TransactionNotifications:input_type -> walletrpc.TransactionNotificationsRequest
	89,  // 80: walletrpc.WalletService.AccountNotifications:input_type -> walletrpc.AccountNotificationsRequest
	91,  // 81: walletrpc.WalletService.ConfirmationNotifications:input_type -> walletrpc.ConfirmationNotificationsRequest
	57,  // 82: walletrpc.WalletService.ChangePassphrase:input_type -> walletrpc.ChangePassphraseRequest
	28,  // 83: walletrpc.WalletService.RenameAccount:input_type -> walletrpc.RenameAccountRequest
	30,  // 84: walletrpc.WalletService.Rescan:input_type -> walletrpc.RescanRequest
	32,  // 85: walletrpc.WalletService.NextAccount:input_type -> walletrpc.NextAccountRequest
	34,  // 86: walletrpc.WalletService.NextAddress:input_type -> walletrpc.NextAddressRequest
	36,  // 87: walletrpc.WalletService.ImportPrivateKey:input_type -> walletrpc.ImportPrivateKeyRequest
	38,  // 88: walletrpc.WalletService.ImportExtendedPublicKey:input_type -> walletrpc.ImportExtendedPublicKeyRequest
	40,  // 89: walletrpc.WalletService.ImportScript:input_type -> walletrpc.ImportScriptRequest
	59,  // 90: walletrpc.WalletService.FundTransaction:input_type -> walletrpc.FundTransactionRequest
	61,  // 91: walletrpc.WalletService.UnspentOutputs:input_type -> walletrpc.UnspentOutputsRequest
	63,  // 92: walletrpc.WalletService.ConstructTransaction:input_type -> walletrpc.ConstructTransactionRequest
	65,  // 93: walletrpc.WalletService.SignTransaction:input_type -> walletrpc.SignTransactionRequest
	67,  // 94: walletrpc.WalletService.SignTransactions:input_type -> walletrpc.SignTransactionsRequest
	69,  // 95: walletrpc.WalletService.CreateSignature:input_type -> walletrpc.CreateSignatureRequest
	71,  // 96: walletrpc.WalletService.PublishTransaction:input_type -> walletrpc.PublishTransactionRequest
	73,  // 97: walletrpc.WalletService.PublishUnminedTransactions:input_type -> walletrpc.PublishUnminedTransactionsRequest
	75,  // 98: walletrpc.WalletService.PurchaseTickets:input_type -> walletrpc.PurchaseTicketsRequest
	77,  // 99: walletrpc.WalletService.RevokeTicket:input_type -> walletrpc.RevokeTicketRequest
	79,  // 100: walletrpc.WalletService.RevokeTickets:input_type -> walletrpc.RevokeTicketsRequest
	81,  // 101: walletrpc.WalletService.LoadActiveDataFilters:input_type -> walletrpc.LoadActiveDataFiltersRequest
	83,  // 102: walletrpc.WalletService.SignMessage:input_type -> walletrpc.SignMessageRequest
	85,  // 103: walletrpc.WalletService.SignMessages:input_type -> walletrpc.SignMessagesRequest
	166, // 104: walletrpc.WalletService.ValidateAddress:input_type -> walletrpc.ValidateAddressRequest
	168, // 105: walletrpc.WalletService.CommittedTickets:input_type -> walletrpc.CommittedTicketsRequest
	176, // 106: walletrpc.WalletService.SweepAccount:input_type -> walletrpc.SweepAccountRequest
	178, // 107: walletrpc.WalletService.AbandonTransaction:input_type -> walletrpc.AbandonTransactionRequest
	180, // 108: walletrpc.WalletService.SignHashes:input_type -> walletrpc.SignHashesRequest
	188, // 109: walletrpc.WalletService.GetCoinjoinOutputspByAcct:input_type -> walletrpc.GetCoinjoinOutputspByAcctRequest
	191, // 110: walletrpc.WalletService.SetAccountPassphrase:input_type -> walletrpc.SetAccountPassphraseRequest
	192, // 111: walletrpc.WalletService.UnlockAccount:input_type -> walletrpc.UnlockAccountRequest
	193, // 112: walletrpc.WalletService.LockAccount:input_type -> walletrpc.LockAccountRequest
	199, // 113: walletrpc.WalletService.UnlockWallet:input_type -> walletrpc.UnlockWalletRequest
	201, // 114: walletrpc.WalletService.LockWallet:input_type -> walletrpc.LockWalletRequest
	197, // 115: walletrpc.WalletService.AccountUnlocked:input_type -> walletrpc.AccountUnlockedRequest
	205, // 116: walletrpc.WalletService.SyncVSPFailedTickets:input_type -> walletrpc.SyncVSPTicketsRequest
	207, // 117: walletrpc.WalletService.GetVSPTicketsByFeeStatus:input_type -> walletrpc.GetVSPTicketsByFeeStatusRequest
	209, // 118: walletrpc.WalletService.ProcessManagedTickets:input_type -> walletrpc.ProcessManagedTicketsRequest
	211, // 119: walletrpc.WalletService.ProcessUnmanagedTickets:input_type -> walletrpc.ProcessUnmanagedTicketsRequest
	213, // 120: walletrpc.WalletService.SetVspdVoteChoices:input_type -> walletrpc.SetVspdVoteChoicesRequest
	215, // 121: walletrpc.WalletService.GetTrackedVSPTickets:input_type -> walletrpc.GetTrackedVSPTicketsRequest
	217, // 122: walletrpc.WalletService.DiscoverUsage:input_type -> walletrpc.DiscoverUsageRequest
	101, // 123: walletrpc.WalletLoaderService.WalletExists:input_type -> walletrpc.WalletExistsRequest
	93,  // 124: walletrpc.WalletLoaderService.CreateWallet:input_type -> walletrpc.CreateWalletRequest
	95,  // 125: walletrpc.WalletLoaderService.CreateWatchingOnlyWallet:input_type -> walletrpc.CreateWatchingOnlyWalletRequest
	97,  // 126: walletrpc.WalletLoaderService.OpenWallet:input_type -> walletrpc.OpenWalletRequest
	99,  // 127: walletrpc.WalletLoaderService.CloseWallet:input_type -> walletrpc.CloseWalletRequest
	119, // 128: walletrpc.WalletLoaderService.SpvSync:input_type -> walletrpc.SpvSyncRequest
	117, // 129: walletrpc.WalletLoaderService.RpcSync:input_type -> walletrpc.RpcSyncRequest
	121, // 130: walletrpc.WalletLoaderService.RescanPoint:input_type -> walletrpc.RescanPointRequest
	129, // 131: walletrpc.AccountMixerService.RunAccountMixer:input_type -> walletrpc.RunAccountMixerRequest
	127, // 132: walletrpc.TicketBuyerV2Service.RunTicketBuyer:input_type -> walletrpc.RunTicketBuyerRequest
	131, // 133: walletrpc.TicketBuyerService.StartAutoBuyer:input_type -> walletrpc.StartAutoBuyerRequest
	133, // 134: walletrpc.TicketBuyerService.StopAutoBuyer:input_type -> walletrpc.StopAutoBuyerRequest
	135, // 135: walletrpc.TicketBuyerService.TicketBuyerConfig:input_type -> walletrpc.TicketBuyerConfigRequest
	137, // 136: walletrpc.TicketBuyerService.SetAccount:input_type -> walletrpc.SetAccountRequest
	139, // 137: walletrpc.TicketBuyerService.SetBalanceToMaintain:input_type -> walletrpc.SetBalanceToMaintainRequest
	141, // 138: walletrpc.TicketBuyerService.SetMaxFee:input_type -> walletrpc.SetMaxFeeRequest
	143, // 139: walletrpc.TicketBuyerService.SetMaxPriceRelative:input_type -> walletrpc.SetMaxPriceRelativeRequest
	145, // 140: walletrpc.TicketBuyerService.SetMaxPriceAbsolute:input_type -> walletrpc.SetMaxPriceAbsoluteRequest
	147, // 141: walletrpc.TicketBuyerService.SetVotingAddress:input_type -> walletrpc.SetVotingAddressRequest
	149, // 142: walletrpc.TicketBuyerService.SetPoolAddress:input_type -> walletrpc.SetPoolAddressRequest
	151, // 143: walletrpc.TicketBuyerService.SetPoolFees:input_type -> walletrpc.SetPoolFeesRequest
	153, // 144: walletrpc.TicketBuyerService.SetMaxPerBlock:input_type -> walletrpc.SetMaxPerBlockRequest
	123, // 145: walletrpc.SeedService.GenerateRandomSeed:input_type -> walletrpc.GenerateRandomSeedRequest
	125, // 146: walletrpc.SeedService.DecodeSeed:input_type -> walletrpc.DecodeSeedRequest
	155, // 147: walletrpc.AgendaService.Agendas:input_type -> walletrpc.AgendasRequest
	157, // 148: walletrpc.VotingService.VoteChoices:input_type -> walletrpc.VoteChoicesRequest
	159, // 149: walletrpc.VotingService.SetVoteChoices:input_type -> walletrpc.SetVoteChoicesRequest
	161, // 150: walletrpc.MessageVerificationService.VerifyMessage:input_type -> walletrpc.VerifyMessageRequest
	186, // 151: walletrpc.NetworkService.GetRawBlock:input_type -> walletrpc.GetRawBlockRequest
	164, // 152: walletrpc.DecodeMessageService.DecodeRawTransaction:input_type -> walletrpc.DecodeRawTransactionRequest
	13,  // 153: walletrpc.VersionService.Version:output_type -> walletrpc.VersionResponse
	19,  // 154: walletrpc.WalletService.Ping:output_type -> walletrpc.PingResponse
	21,  // 155: walletrpc.WalletService.Network:output_type -> walletrpc.NetworkResponse
	23,  // 156: walletrpc.WalletService.CoinType:output_type -> walletrpc.CoinTypeResponse
	25,  // 157: walletrpc.WalletService.AccountNumber:output_type -> walletrpc.AccountNumberResponse
	27,  // 158: walletrpc.WalletService.Accounts:output_type -> walletrpc.AccountsResponse
	43,  // 159: walletrpc.WalletService.Balance:output_type -> walletrpc.BalanceResponse
	170, // 160: walletrpc.WalletService.GetAccountExtendedPubKey:output_type -> walletrpc.GetAccountExtendedPubKeyResponse
	172, // 161: walletrpc.WalletService.GetAccountExtendedPrivKey:output_type -> walletrpc.GetAccountExtendedPrivKeyResponse
	45,  // 162: walletrpc.WalletService.GetTransaction:output_type -> walletrpc.GetTransactionResponse
	47,  // 163: walletrpc.WalletService.GetTransactions:output_type -> walletrpc.GetTransactionsResponse
	50,  // 164: walletrpc.WalletService.GetTicket:output_type -> walletrpc.GetTicketsResponse
	50,  // 165: walletrpc.WalletService.GetTickets:output_type -> walletrpc.GetTicketsResponse
	52,  // 166: walletrpc.WalletService.TicketPrice:output_type -> walletrpc.TicketPriceResponse
	54,  // 167: walletrpc.WalletService.StakeInfo:output_type -> walletrpc.StakeInfoResponse
	56,  // 168: walletrpc.WalletService.BlockInfo:output_type -> walletrpc.BlockInfoResponse
	175, // 169: walletrpc.WalletService.BestBlock:output_type -> walletrpc.BestBlockResponse
	183, // 170: walletrpc.WalletService.Spender:output_type -> walletrpc.SpenderResponse
	185, // 171: walletrpc.WalletService.GetCFilters:output_type -> walletrpc.GetCFiltersResponse
	204, // 172: walletrpc.WalletService.GetPeerInfo:output_type -> walletrpc.GetPeerInfoResponse
	88,  // 173: walletrpc.WalletService.TransactionNotifications:output_type -> walletrpc.TransactionNotificationsResponse
	90,  // 174: walletrpc.WalletService.AccountNotifications:output_type -> walletrpc.AccountNotificationsResponse
	92,  // 175: walletrpc.WalletService.ConfirmationNotifications:output_type -> walletrpc.ConfirmationNotificationsResponse
	58,  // 176: walletrpc.WalletService.ChangePassphrase:output_type -> walletrpc.ChangePassphraseResponse
	29,  // 177: walletrpc.WalletService.RenameAccount:output_type -> walletrpc.RenameAccountResponse
	31,  // 178: walletrpc.WalletService.Rescan:output_type -> walletrpc.RescanResponse
	33,  // 179: walletrpc.WalletService.NextAccount:output_type -> walletrpc.NextAccountResponse
	35,  // 180: walletrpc.WalletService.NextAddress:output_type -> walletrpc.NextAddressResponse
	37,  // 181: walletrpc.WalletService.ImportPrivateKey:output_type -> walletrpc.ImportPrivateKeyResponse
	39,  // 182: walletrpc.WalletService.ImportExtendedPublicKey:output_type -> walletrpc.ImportExtendedPublicKeyResponse
	41,  // 183: walletrpc.WalletService.ImportScript:output_type -> walletrpc.ImportScriptResponse
	60,  // 184: walletrpc.WalletService.FundTransaction:output_type -> walletrpc.FundTransactionResponse
	62,  // 185: walletrpc.WalletService.UnspentOutputs:output_type -> walletrpc.UnspentOutputResponse
	64,  // 186: walletrpc.WalletService.ConstructTransaction:output_type -> walletrpc.ConstructTransactionResponse
	66,  // 187: walletrpc.WalletService.SignTransaction:output_type -> walletrpc.SignTransactionResponse
	68,  // 188: walletrpc.WalletService.SignTransactions:output_type -> walletrpc.SignTransactionsResponse
	70,  // 189: walletrpc.WalletService.CreateSignature:output_type -> walletrpc.CreateSignatureResponse
	72,  // 190: walletrpc.WalletService.PublishTransaction:output_type -> walletrpc.PublishTransactionResponse
	74,  // 191: walletrpc.WalletService.PublishUnminedTransactions:output_type -> walletrpc.PublishUnminedTransactionsResponse
	76,  // 192: walletrpc.WalletService.PurchaseTickets:output_type -> walletrpc.PurchaseTicketsResponse
	78,  // 193: walletrpc.WalletService.RevokeTicket:output_type -> walletrpc.RevokeTicketResponse
	80,  // 194: walletrpc.WalletService.RevokeTickets:output_type -> walletrpc.RevokeTicketsResponse
	82,  // 195: walletrpc.WalletService.LoadActiveDataFilters:output_type -> walletrpc.LoadActiveDataFiltersResponse
	84,  // 196: walletrpc.WalletService.SignMessage:output_type -> walletrpc.SignMessageResponse
	86,  // 197: walletrpc.WalletService.SignMessages:output_type -> walletrpc.SignMessagesResponse
	167, // 198: walletrpc.WalletService.ValidateAddress:output_type -> walletrpc.ValidateAddressResponse
	173, // 199: walletrpc.WalletService.CommittedTickets:output_type -> walletrpc.CommittedTicketsResponse
	177, // 200: walletrpc.WalletService.SweepAccount:output_type -> walletrpc.SweepAccountResponse
	179, // 201: walletrpc.WalletService.AbandonTransaction:output_type -> walletrpc.AbandonTransactionResponse
	181, // 202: walletrpc.WalletService.SignHashes:output_type -> walletrpc.SignHashesResponse
	190, // 203: walletrpc.WalletService.GetCoinjoinOutputspByAcct:output_type -> walletrpc.GetCoinjoinOutputspByAcctResponse
	194, // 204: walletrpc.WalletService.SetAccountPassphrase:output_type -> walletrpc.SetAccountPassphraseResponse
	195, // 205: walletrpc.WalletService.UnlockAccount:output_type -> walletrpc.UnlockAccountResponse
	196, // 206: walletrpc.WalletService.LockAccount:output_type -> walletrpc.LockAccountResponse
	200, // 207: walletrpc.WalletService.UnlockWallet:output_type -> walletrpc.UnlockWalletResponse
	202, // 208: walletrpc.WalletService.LockWallet:output_type -> walletrpc.LockWalletResponse
	198, // 209: walletrpc.WalletService.AccountUnlocked:output_type -> walletrpc.AccountUnlockedResponse
	206, // 210: walletrpc.WalletService.SyncVSPFailedTickets:output_type -> walletrpc.SyncVSPTicketsResponse
	208, // 211: walletrpc.WalletService.GetVSPTicketsByFeeStatus:output_type -> walletrpc.GetVSPTicketsByFeeStatusResponse
	210, // 212: walletrpc.WalletService.ProcessManagedTickets:output_type -> walletrpc.ProcessManagedTicketsResponse
	212, // 213: walletrpc.WalletService.ProcessUnmanagedTickets:output_type -> walletrpc.ProcessUnmanagedTicketsResponse
	214, // 214: walletrpc.WalletService.SetVspdVoteChoices:output_type -> walletrpc.SetVspdVoteChoicesResponse
	216, // 215: walletrpc.WalletService.GetTrackedVSPTickets:output_type -> walletrpc.GetTrackedVSPTicketsResponse
	218, // 216: walletrpc.WalletService.DiscoverUsage:output_type -> walletrpc.DiscoverUsageResponse
	102, // 217: walletrpc.WalletLoaderService.WalletExists:output_type -> walletrpc.WalletExistsResponse
	94,  // 218: walletrpc.WalletLoaderService.CreateWallet:output_type -> walletrpc.CreateWalletResponse
	96,  // 219: walletrpc.WalletLoaderService.CreateWatchingOnlyWallet:output_type -> walletrpc.CreateWatchingOnlyWalletResponse
	98,  // 220: walletrpc.WalletLoaderService.OpenWallet:output_type -> walletrpc.OpenWalletResponse
	100, // 221: walletrpc.WalletLoaderService.CloseWallet:output_type -> walletrpc.CloseWalletResponse
	120, // 222: walletrpc.WalletLoaderService.SpvSync:output_type -> walletrpc.SpvSyncResponse
	118, // 223: walletrpc.WalletLoaderService.RpcSync:output_type -> walletrpc.RpcSyncResponse
	122, // 224: walletrpc.WalletLoaderService.RescanPoint:output_type -> walletrpc.RescanPointResponse
	130, // 225: walletrpc.AccountMixerService.RunAccountMixer:output_type -> walletrpc.RunAccountMixerResponse
	128, // 226: walletrpc.TicketBuyerV2Service.RunTicketBuyer:output_type -> walletrpc.RunTicketBuyerResponse
	132, // 227: walletrpc.TicketBuyerService.StartAutoBuyer:output_type -> walletrpc.StartAutoBuyerResponse
	134, // 228: walletrpc.TicketBuyerService.StopAutoBuyer:output_type -> walletrpc.StopAutoBuyerResponse
	136, // 229: walletrpc.TicketBuyerService.TicketBuyerConfig:output_type -> walletrpc.TicketBuyerConfigResponse
	138, // 230: walletrpc.TicketBuyerService.SetAccount:output_type -> walletrpc.SetAccountResponse
	140, // 231: walletrpc.TicketBuyerService.SetBalanceToMaintain:output_type -> walletrpc.SetBalanceToMaintainResponse
	142, // 232: walletrpc.TicketBuyerService.SetMaxFee:output_type -> walletrpc.SetMaxFeeResponse
	144, // 233: walletrpc.TicketBuyerService.SetMaxPriceRelative:output_type -> walletrpc.SetMaxPriceRelativeResponse
	146, // 234: walletrpc.TicketBuyerService.SetMaxPriceAbsolute:output_type -> walletrpc.SetMaxPriceAbsoluteResponse
	148, // 235: walletrpc.TicketBuyerService.SetVotingAddress:output_type -> walletrpc.SetVotingAddressResponse
	150, // 236: walletrpc.TicketBuyerService.SetPoolAddress:output_type -> walletrpc.SetPoolAddressResponse
	152, // 237: walletrpc.TicketBuyerService.SetPoolFees:output_type -> walletrpc.SetPoolFeesResponse
	154, // 238: walletrpc.TicketBuyerService.SetMaxPerBlock:output_type -> walletrpc.SetMaxPerBlockResponse
	124, // 239: walletrpc.SeedService.GenerateRandomSeed:output_type -> walletrpc.GenerateRandomSeedResponse
	126, // 240: walletrpc.SeedService.DecodeSeed:output_type -> walletrpc.DecodeSeedResponse
	156, // 241: walletrpc.AgendaService.Agendas:output_type -> walletrpc.AgendasResponse
	158, // 242: walletrpc.VotingService.VoteChoices:output_type -> walletrpc.VoteChoicesResponse
	160, // 243: walletrpc.VotingService.SetVoteChoices:output_type -> walletrpc.SetVoteChoicesResponse
	162, // 244: walletrpc.MessageVerificationService.VerifyMessage:output_type -> walletrpc.VerifyMessageResponse
	187, // 245: walletrpc.NetworkService.GetRawBlock:output_type -> walletrpc.GetRawBlockResponse
	165, // 246: walletrpc.DecodeMessageService.DecodeRawTransaction:output_type -> walletrpc.DecodeRawTransactionResponse
	153, // [153:247] is the sub-list for method output_type
	59,  // [59:153] is the sub-list for method input_type
	59,  // [59:59] is the sub-list for extension type_name
	59,  // [59:59] is the sub-list for extension extendee
	0,   // [0:59] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetachedBlockDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RescanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RescanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportPrivateKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportPrivateKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportExtendedPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportExtendedPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePassphraseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePassphraseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnspentOutputsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnspentOutputResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstructTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstructTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishUnminedTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishUnminedTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadActiveDataFiltersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadActiveDataFiltersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmationNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmationNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWatchingOnlyWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWatchingOnlyWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartConsensusRpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartConsensusRpcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchMissingCFiltersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchMissingCFiltersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToBlockNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToBlockNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchHeadersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchHeadersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchHeadersNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchMissingCFiltersNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RescanProgressNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpvSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpvSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RescanPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RescanPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateRandomSeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateRandomSeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeSeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeSeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTicketBuyerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTicketBuyerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunAccountMixerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunAccountMixerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartAutoBuyerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartAutoBuyerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAutoBuyerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAutoBuyerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketBuyerConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketBuyerConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBalanceToMaintainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBalanceToMaintainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaxFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaxFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaxPriceRelativeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaxPriceRelativeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaxPriceAbsoluteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaxPriceAbsoluteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVotingAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVotingAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPoolAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPoolAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPoolFeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPoolFeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaxPerBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaxPerBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgendasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgendasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteChoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteChoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVoteChoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVoteChoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeRawTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeRawTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommittedTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountExtendedPubKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountExtendedPubKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountExtendedPrivKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountExtendedPrivKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommittedTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BestBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BestBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SweepAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SweepAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignHashesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignHashesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpenderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpenderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCFiltersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCFiltersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRawBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRawBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinjoinOutputspByAcctRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinjoinTxsSumByAcct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinjoinOutputspByAcctResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountPassphraseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountPassphraseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUnlockedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUnlockedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncVSPTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncVSPTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVSPTicketsByFeeStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVSPTicketsByFeeStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessManagedTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessManagedTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessUnmanagedTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessUnmanagedTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVspdVoteChoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVspdVoteChoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackedVSPTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackedVSPTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetails_Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetails_Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountsResponse_Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketsResponse_TicketDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketsResponse_BlockDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundTransactionResponse_PreviousOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstructTransactionRequest_OutputDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstructTransactionRequest_Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransactionRequest_AdditionalScript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransactionsRequest_AdditionalScript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransactionsRequest_UnsignedTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransactionsResponse_SignedTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessagesRequest_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessagesResponse_SignReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmationNotificationsResponse_TransactionConfirmations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgendasResponse_Agenda); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgendasResponse_Choice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteChoicesResponse_Choice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVoteChoicesRequest_Choice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedTransaction_Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedTransaction_Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommittedTicketsResponse_TicketAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeerInfoResponse_PeerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackedVSPTicketsResponse_Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackedVSPTicketsResponse_VSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   232,
			NumExtensions: 0,
			NumServices:   12,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VersionServiceClient is the client API for VersionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VersionServiceClient interface {
	Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
}

type versionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVersionServiceClient(cc grpc.ClientConnInterface) VersionServiceClient {
	return &versionServiceClient{cc}
}

func (c *versionServiceClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.VersionService/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VersionServiceServer is the server API for VersionService service.
type VersionServiceServer interface {
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
}

// UnimplementedVersionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVersionServiceServer struct {
}

func (*UnimplementedVersionServiceServer) Version(context.Context, *VersionRequest) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}

func RegisterVersionServiceServer(s *grpc.Server, srv VersionServiceServer) {
	s.RegisterService(&_VersionService_serviceDesc, srv)
}

func _VersionService_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServiceServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.VersionService/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServiceServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VersionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.VersionService",
	HandlerType: (*VersionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _VersionService_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// WalletServiceClient is the client API for WalletService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletServiceClient interface {
	// Queries
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	Network(ctx context.Context, in *NetworkRequest, opts ...grpc.CallOption) (*NetworkResponse, error)
	CoinType(ctx context.Context, in *CoinTypeRequest, opts ...grpc.CallOption) (*CoinTypeResponse, error)
	AccountNumber(ctx context.Context, in *AccountNumberRequest, opts ...grpc.CallOption) (*AccountNumberResponse, error)
	Accounts(ctx context.Context, in *AccountsRequest, opts ...grpc.CallOption) (*AccountsResponse, error)
	Balance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceResponse, error)
	GetAccountExtendedPubKey(ctx context.Context, in *GetAccountExtendedPubKeyRequest, opts ...grpc.CallOption) (*GetAccountExtendedPubKeyResponse, error)
	GetAccountExtendedPrivKey(ctx context.Context, in *GetAccountExtendedPrivKeyRequest, opts ...grpc.CallOption) (*GetAccountExtendedPrivKeyResponse, error)
	GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error)
	GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (WalletService_GetTransactionsClient, error)
	GetTicket(ctx context.Context, in *GetTicketRequest, opts ...grpc.CallOption) (*GetTicketsResponse, error)
	GetTickets(ctx context.Context, in *GetTicketsRequest, opts ...grpc.CallOption) (WalletService_GetTicketsClient, error)
	TicketPrice(ctx context.Context, in *TicketPriceRequest, opts ...grpc.CallOption) (*TicketPriceResponse, error)
	StakeInfo(ctx context.Context, in *StakeInfoRequest, opts ...grpc.CallOption) (*StakeInfoResponse, error)
	BlockInfo(ctx context.Context, in *BlockInfoRequest, opts ...grpc.CallOption) (*BlockInfoResponse, error)
	BestBlock(ctx context.Context, in *BestBlockRequest, opts ...grpc.CallOption) (*BestBlockResponse, error)
	Spender(ctx context.Context, in *SpenderRequest, opts ...grpc.CallOption) (*SpenderResponse, error)
	GetCFilters(ctx context.Context, in *GetCFiltersRequest, opts ...grpc.CallOption) (WalletService_GetCFiltersClient, error)
	GetPeerInfo(ctx context.Context, in *GetPeerInfoRequest, opts ...grpc.CallOption) (*GetPeerInfoResponse, error)
	// Notifications
	TransactionNotifications(ctx context.Context, in *TransactionNotificationsRequest, opts ...grpc.CallOption) (WalletService_TransactionNotificationsClient, error)
	AccountNotifications(ctx context.Context, in *AccountNotificationsRequest, opts ...grpc.CallOption) (WalletService_AccountNotificationsClient, error)
	ConfirmationNotifications(ctx context.Context, opts ...grpc.CallOption) (WalletService_ConfirmationNotificationsClient, error)
	// Control
	ChangePassphrase(ctx context.Context, in *ChangePassphraseRequest, opts ...grpc.CallOption) (*ChangePassphraseResponse, error)
	RenameAccount(ctx context.Context, in *RenameAccountRequest, opts ...grpc.CallOption) (*RenameAccountResponse, error)
	Rescan(ctx context.Context, in *RescanRequest, opts ...grpc.CallOption) (WalletService_RescanClient, error)
	NextAccount(ctx context.Context, in *NextAccountRequest, opts ...grpc.CallOption) (*NextAccountResponse, error)
	NextAddress(ctx context.Context, in *NextAddressRequest, opts ...grpc.CallOption) (*NextAddressResponse, error)
	ImportPrivateKey(ctx context.Context, in *ImportPrivateKeyRequest, opts ...grpc.CallOption) (*ImportPrivateKeyResponse, error)
	ImportExtendedPublicKey(ctx context.Context, in *ImportExtendedPublicKeyRequest, opts ...grpc.CallOption) (*ImportExtendedPublicKeyResponse, error)
	ImportScript(ctx context.Context, in *ImportScriptRequest, opts ...grpc.CallOption) (*ImportScriptResponse, error)
	FundTransaction(ctx context.Context, in *FundTransactionRequest, opts ...grpc.CallOption) (*FundTransactionResponse, error)
	UnspentOutputs(ctx context.Context, in *UnspentOutputsRequest, opts ...grpc.CallOption) (WalletService_UnspentOutputsClient, error)
	ConstructTransaction(ctx context.Context, in *ConstructTransactionRequest, opts ...grpc.CallOption) (*ConstructTransactionResponse, error)
	SignTransaction(ctx context.Context, in *SignTransactionRequest, opts ...grpc.CallOption) (*SignTransactionResponse, error)
	SignTransactions(ctx context.Context, in *SignTransactionsRequest, opts ...grpc.CallOption) (*SignTransactionsResponse, error)
	CreateSignature(ctx context.Context, in *CreateSignatureRequest, opts ...grpc.CallOption) (*CreateSignatureResponse, error)
	PublishTransaction(ctx context.Context, in *PublishTransactionRequest, opts ...grpc.CallOption) (*PublishTransactionResponse, error)
	PublishUnminedTransactions(ctx context.Context, in *PublishUnminedTransactionsRequest, opts ...grpc.CallOption) (*PublishUnminedTransactionsResponse, error)
	PurchaseTickets(ctx context.Context, in *PurchaseTicketsRequest, opts ...grpc.CallOption) (*PurchaseTicketsResponse, error)
	RevokeTicket(ctx context.Context, in *RevokeTicketRequest, opts ...grpc.CallOption) (*RevokeTicketResponse, error)
	RevokeTickets(ctx context.Context, in *RevokeTicketsRequest, opts ...grpc.CallOption) (*RevokeTicketsResponse, error)
	LoadActiveDataFilters(ctx context.Context, in *LoadActiveDataFiltersRequest, opts ...grpc.CallOption) (*LoadActiveDataFiltersResponse, error)
	SignMessage(ctx context.Context, in *SignMessageRequest, opts ...grpc.CallOption) (*SignMessageResponse, error)
	SignMessages(ctx context.Context, in *SignMessagesRequest, opts ...grpc.CallOption) (*SignMessagesResponse, error)
	ValidateAddress(ctx context.Context, in *ValidateAddressRequest, opts ...grpc.CallOption) (*ValidateAddressResponse, error)
	CommittedTickets(ctx context.Context, in *CommittedTicketsRequest, opts ...grpc.CallOption) (*CommittedTicketsResponse, error)
	SweepAccount(ctx context.Context, in *SweepAccountRequest, opts ...grpc.CallOption) (*SweepAccountResponse, error)
	AbandonTransaction(ctx context.Context, in *AbandonTransactionRequest, opts ...grpc.CallOption) (*AbandonTransactionResponse, error)
	SignHashes(ctx context.Context, in *SignHashesRequest, opts ...grpc.CallOption) (*SignHashesResponse, error)
	GetCoinjoinOutputspByAcct(ctx context.Context, in *GetCoinjoinOutputspByAcctRequest, opts ...grpc.CallOption) (*GetCoinjoinOutputspByAcctResponse, error)
	SetAccountPassphrase(ctx context.Context, in *SetAccountPassphraseRequest, opts ...grpc.CallOption) (*SetAccountPassphraseResponse, error)
	UnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error)
	LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountResponse, error)
	UnlockWallet(ctx context.Context, in *UnlockWalletRequest, opts ...grpc.CallOption) (*UnlockWalletResponse, error)
	LockWallet(ctx context.Context, in *LockWalletRequest, opts ...grpc.CallOption) (*LockWalletResponse, error)
	AccountUnlocked(ctx context.Context, in *AccountUnlockedRequest, opts ...grpc.CallOption) (*AccountUnlockedResponse, error)
	SyncVSPFailedTickets(ctx context.Context, in *SyncVSPTicketsRequest, opts ...grpc.CallOption) (*SyncVSPTicketsResponse, error)
	GetVSPTicketsByFeeStatus(ctx context.Context, in *GetVSPTicketsByFeeStatusRequest, opts ...grpc.CallOption) (*GetVSPTicketsByFeeStatusResponse, error)
	ProcessManagedTickets(ctx context.Context, in *ProcessManagedTicketsRequest, opts ...grpc.CallOption) (*ProcessManagedTicketsResponse, error)
	ProcessUnmanagedTickets(ctx context.Context, in *ProcessUnmanagedTicketsRequest, opts ...grpc.CallOption) (*ProcessUnmanagedTicketsResponse, error)
	SetVspdVoteChoices(ctx context.Context, in *SetVspdVoteChoicesRequest, opts ...grpc.CallOption) (*SetVspdVoteChoicesResponse, error)
	GetTrackedVSPTickets(ctx context.Context, in *GetTrackedVSPTicketsRequest, opts ...grpc.CallOption) (*GetTrackedVSPTicketsResponse, error)
	DiscoverUsage(ctx context.Context, in *DiscoverUsageRequest, opts ...grpc.CallOption) (*DiscoverUsageResponse, error)
}

type walletServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWalletServiceClient(cc grpc.ClientConnInterface) WalletServiceClient {
	return &walletServiceClient{cc}
}

func (c *walletServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Network(ctx context.Context, in *NetworkRequest, opts ...grpc.CallOption) (*NetworkResponse, error) {
	out := new(NetworkResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/Network", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) CoinType(ctx context.Context, in *CoinTypeRequest, opts ...grpc.CallOption) (*CoinTypeResponse, error) {
	out := new(CoinTypeResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/CoinType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) AccountNumber(ctx context.Context, in *AccountNumberRequest, opts ...grpc.CallOption) (*AccountNumberResponse, error) {
	out := new(AccountNumberResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/AccountNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Accounts(ctx context.Context, in *AccountsRequest, opts ...grpc.CallOption) (*AccountsResponse, error) {
	out := new(AccountsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/Accounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Balance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceResponse, error) {
	out := new(BalanceResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/Balance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetAccountExtendedPubKey(ctx context.Context, in *GetAccountExtendedPubKeyRequest, opts ...grpc.CallOption) (*GetAccountExtendedPubKeyResponse, error) {
	out := new(GetAccountExtendedPubKeyResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/GetAccountExtendedPubKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetAccountExtendedPrivKey(ctx context.Context, in *GetAccountExtendedPrivKeyRequest, opts ...grpc.CallOption) (*GetAccountExtendedPrivKeyResponse, error) {
	out := new(GetAccountExtendedPrivKeyResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/GetAccountExtendedPrivKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error) {
	out := new(GetTransactionResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/GetTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (WalletService_GetTransactionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WalletService_serviceDesc.Streams[0], "/walletrpc.WalletService/GetTransactions", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletServiceGetTransactionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WalletService_GetTransactionsClient interface {
	Recv() (*GetTransactionsResponse, error)
	grpc.ClientStream
}

type walletServiceGetTransactionsClient struct {
	grpc.ClientStream
}

func (x *walletServiceGetTransactionsClient) Recv() (*GetTransactionsResponse, error) {
	m := new(GetTransactionsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *walletServiceClient) GetTicket(ctx context.Context, in *GetTicketRequest, opts ...grpc.CallOption) (*GetTicketsResponse, error) {
	out := new(GetTicketsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/GetTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetTickets(ctx context.Context, in *GetTicketsRequest, opts ...grpc.CallOption) (WalletService_GetTicketsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WalletService_serviceDesc.Streams[1], "/walletrpc.WalletService/GetTickets", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletServiceGetTicketsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WalletService_GetTicketsClient interface {
	Recv() (*GetTicketsResponse, error)
	grpc.ClientStream
}

type walletServiceGetTicketsClient struct {
	grpc.ClientStream
}

func (x *walletServiceGetTicketsClient) Recv() (*GetTicketsResponse, error) {
	m := new(GetTicketsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *walletServiceClient) TicketPrice(ctx context.Context, in *TicketPriceRequest, opts ...grpc.CallOption) (*TicketPriceResponse, error) {
	out := new(TicketPriceResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/TicketPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) StakeInfo(ctx context.Context, in *StakeInfoRequest, opts ...grpc.CallOption) (*StakeInfoResponse, error) {
	out := new(StakeInfoResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/StakeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) BlockInfo(ctx context.Context, in *BlockInfoRequest, opts ...grpc.CallOption) (*BlockInfoResponse, error) {
	out := new(BlockInfoResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/BlockInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) BestBlock(ctx context.Context, in *BestBlockRequest, opts ...grpc.CallOption) (*BestBlockResponse, error) {
	out := new(BestBlockResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/BestBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Spender(ctx context.Context, in *SpenderRequest, opts ...grpc.CallOption) (*SpenderResponse, error) {
	out := new(SpenderResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/Spender", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetCFilters(ctx context.Context, in *GetCFiltersRequest, opts ...grpc.CallOption) (WalletService_GetCFiltersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WalletService_serviceDesc.Streams[2], "/walletrpc.WalletService/GetCFilters", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletServiceGetCFiltersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WalletService_GetCFiltersClient interface {
	Recv() (*GetCFiltersResponse, error)
	grpc.ClientStream
}

type walletServiceGetCFiltersClient struct {
	grpc.ClientStream
}

func (x *walletServiceGetCFiltersClient) Recv() (*GetCFiltersResponse, error) {
	m := new(GetCFiltersResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *walletServiceClient) GetPeerInfo(ctx context.Context, in *GetPeerInfoRequest, opts ...grpc.CallOption) (*GetPeerInfoResponse, error) {
	out := new(GetPeerInfoResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/GetPeerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) TransactionNotifications(ctx context.Context, in *TransactionNotificationsRequest, opts ...grpc.CallOption) (WalletService_TransactionNotificationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WalletService_serviceDesc.Streams[3], "/walletrpc.WalletService/TransactionNotifications", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletServiceTransactionNotificationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WalletService_TransactionNotificationsClient interface {
	Recv() (*TransactionNotificationsResponse, error)
	grpc.ClientStream
}

type walletServiceTransactionNotificationsClient struct {
	grpc.ClientStream
}

func (x *walletServiceTransactionNotificationsClient) Recv() (*TransactionNotificationsResponse, error) {
	m := new(TransactionNotificationsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *walletServiceClient) AccountNotifications(ctx context.Context, in *AccountNotificationsRequest, opts ...grpc.CallOption) (WalletService_AccountNotificationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WalletService_serviceDesc.Streams[4], "/walletrpc.WalletService/AccountNotifications", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletServiceAccountNotificationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WalletService_AccountNotificationsClient interface {
	Recv() (*AccountNotificationsResponse, error)
	grpc.ClientStream
}

type walletServiceAccountNotificationsClient struct {
	grpc.ClientStream
}

func (x *walletServiceAccountNotificationsClient) Recv() (*AccountNotificationsResponse, error) {
	m := new(AccountNotificationsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *walletServiceClient) ConfirmationNotifications(ctx context.Context, opts ...grpc.CallOption) (WalletService_ConfirmationNotificationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WalletService_serviceDesc.Streams[5], "/walletrpc.WalletService/ConfirmationNotifications", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletServiceConfirmationNotificationsClient{stream}
	return x, nil
}

type WalletService_ConfirmationNotificationsClient interface {
	Send(*ConfirmationNotificationsRequest) error
	Recv() (*ConfirmationNotificationsResponse, error)
	grpc.ClientStream
}

type walletServiceConfirmationNotificationsClient struct {
	grpc.ClientStream
}

func (x *walletServiceConfirmationNotificationsClient) Send(m *ConfirmationNotificationsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *walletServiceConfirmationNotificationsClient) Recv() (*ConfirmationNotificationsResponse, error) {
	m := new(ConfirmationNotificationsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *walletServiceClient) ChangePassphrase(ctx context.Context, in *ChangePassphraseRequest, opts ...grpc.CallOption) (*ChangePassphraseResponse, error) {
	out := new(ChangePassphraseResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/ChangePassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) RenameAccount(ctx context.Context, in *RenameAccountRequest, opts ...grpc.CallOption) (*RenameAccountResponse, error) {
	out := new(RenameAccountResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/RenameAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Rescan(ctx context.Context, in *RescanRequest, opts ...grpc.CallOption) (WalletService_RescanClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WalletService_serviceDesc.Streams[6], "/walletrpc.WalletService/Rescan", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletServiceRescanClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WalletService_RescanClient interface {
	Recv() (*RescanResponse, error)
	grpc.ClientStream
}

type walletServiceRescanClient struct {
	grpc.ClientStream
}

func (x *walletServiceRescanClient) Recv() (*RescanResponse, error) {
	m := new(RescanResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *walletServiceClient) NextAccount(ctx context.Context, in *NextAccountRequest, opts ...grpc.CallOption) (*NextAccountResponse, error) {
	out := new(NextAccountResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/NextAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) NextAddress(ctx context.Context, in *NextAddressRequest, opts ...grpc.CallOption) (*NextAddressResponse, error) {
	out := new(NextAddressResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/NextAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) ImportPrivateKey(ctx context.Context, in *ImportPrivateKeyRequest, opts ...grpc.CallOption) (*ImportPrivateKeyResponse, error) {
	out := new(ImportPrivateKeyResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/ImportPrivateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) ImportExtendedPublicKey(ctx context.Context, in *ImportExtendedPublicKeyRequest, opts ...grpc.CallOption) (*ImportExtendedPublicKeyResponse, error) {
	out := new(ImportExtendedPublicKeyResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/ImportExtendedPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) ImportScript(ctx context.Context, in *ImportScriptRequest, opts ...grpc.CallOption) (*ImportScriptResponse, error) {
	out := new(ImportScriptResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/ImportScript", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) FundTransaction(ctx context.Context, in *FundTransactionRequest, opts ...grpc.CallOption) (*FundTransactionResponse, error) {
	out := new(FundTransactionResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/FundTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) UnspentOutputs(ctx context.Context, in *UnspentOutputsRequest, opts ...grpc.CallOption) (WalletService_UnspentOutputsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WalletService_serviceDesc.Streams[7], "/walletrpc.WalletService/UnspentOutputs", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletServiceUnspentOutputsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WalletService_UnspentOutputsClient interface {
	Recv() (*UnspentOutputResponse, error)
	grpc.ClientStream
}

type walletServiceUnspentOutputsClient struct {
	grpc.ClientStream
}

func (x *walletServiceUnspentOutputsClient) Recv() (*UnspentOutputResponse, error) {
	m := new(UnspentOutputResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *walletServiceClient) ConstructTransaction(ctx context.Context, in *ConstructTransactionRequest, opts ...grpc.CallOption) (*ConstructTransactionResponse, error) {
	out := new(ConstructTransactionResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/ConstructTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) SignTransaction(ctx context.Context, in *SignTransactionRequest, opts ...grpc.CallOption) (*SignTransactionResponse, error) {
	out := new(SignTransactionResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/SignTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) SignTransactions(ctx context.Context, in *SignTransactionsRequest, opts ...grpc.CallOption) (*SignTransactionsResponse, error) {
	out := new(SignTransactionsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/SignTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) CreateSignature(ctx context.Context, in *CreateSignatureRequest, opts ...grpc.CallOption) (*CreateSignatureResponse, error) {
	out := new(CreateSignatureResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/CreateSignature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) PublishTransaction(ctx context.Context, in *PublishTransactionRequest, opts ...grpc.CallOption) (*PublishTransactionResponse, error) {
	out := new(PublishTransactionResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/PublishTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) PublishUnminedTransactions(ctx context.Context, in *PublishUnminedTransactionsRequest, opts ...grpc.CallOption) (*PublishUnminedTransactionsResponse, error) {
	out := new(PublishUnminedTransactionsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/PublishUnminedTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) PurchaseTickets(ctx context.Context, in *PurchaseTicketsRequest, opts ...grpc.CallOption) (*PurchaseTicketsResponse, error) {
	out := new(PurchaseTicketsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/PurchaseTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) RevokeTicket(ctx context.Context, in *RevokeTicketRequest, opts ...grpc.CallOption) (*RevokeTicketResponse, error) {
	out := new(RevokeTicketResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/RevokeTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) RevokeTickets(ctx context.Context, in *RevokeTicketsRequest, opts ...grpc.CallOption) (*RevokeTicketsResponse, error) {
	out := new(RevokeTicketsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/RevokeTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) LoadActiveDataFilters(ctx context.Context, in *LoadActiveDataFiltersRequest, opts ...grpc.CallOption) (*LoadActiveDataFiltersResponse, error) {
	out := new(LoadActiveDataFiltersResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/LoadActiveDataFilters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) SignMessage(ctx context.Context, in *SignMessageRequest, opts ...grpc.CallOption) (*SignMessageResponse, error) {
	out := new(SignMessageResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/SignMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) SignMessages(ctx context.Context, in *SignMessagesRequest, opts ...grpc.CallOption) (*SignMessagesResponse, error) {
	out := new(SignMessagesResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/SignMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) ValidateAddress(ctx context.Context, in *ValidateAddressRequest, opts ...grpc.CallOption) (*ValidateAddressResponse, error) {
	out := new(ValidateAddressResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/ValidateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) CommittedTickets(ctx context.Context, in *CommittedTicketsRequest, opts ...grpc.CallOption) (*CommittedTicketsResponse, error) {
	out := new(CommittedTicketsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/CommittedTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) SweepAccount(ctx context.Context, in *SweepAccountRequest, opts ...grpc.CallOption) (*SweepAccountResponse, error) {
	out := new(SweepAccountResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/SweepAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) AbandonTransaction(ctx context.Context, in *AbandonTransactionRequest, opts ...grpc.CallOption) (*AbandonTransactionResponse, error) {
	out := new(AbandonTransactionResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/AbandonTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) SignHashes(ctx context.Context, in *SignHashesRequest, opts ...grpc.CallOption) (*SignHashesResponse, error) {
	out := new(SignHashesResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/SignHashes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetCoinjoinOutputspByAcct(ctx context.Context, in *GetCoinjoinOutputspByAcctRequest, opts ...grpc.CallOption) (*GetCoinjoinOutputspByAcctResponse, error) {
	out := new(GetCoinjoinOutputspByAcctResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/GetCoinjoinOutputspByAcct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) SetAccountPassphrase(ctx context.Context, in *SetAccountPassphraseRequest, opts ...grpc.CallOption) (*SetAccountPassphraseResponse, error) {
	out := new(SetAccountPassphraseResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/SetAccountPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) UnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error) {
	out := new(UnlockAccountResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/UnlockAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountResponse, error) {
	out := new(LockAccountResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/LockAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) UnlockWallet(ctx context.Context, in *UnlockWalletRequest, opts ...grpc.CallOption) (*UnlockWalletResponse, error) {
	out := new(UnlockWalletResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/UnlockWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) LockWallet(ctx context.Context, in *LockWalletRequest, opts ...grpc.CallOption) (*LockWalletResponse, error) {
	out := new(LockWalletResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/LockWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) AccountUnlocked(ctx context.Context, in *AccountUnlockedRequest, opts ...grpc.CallOption) (*AccountUnlockedResponse, error) {
	out := new(AccountUnlockedResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/AccountUnlocked", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) SyncVSPFailedTickets(ctx context.Context, in *SyncVSPTicketsRequest, opts ...grpc.CallOption) (*SyncVSPTicketsResponse, error) {
	out := new(SyncVSPTicketsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/SyncVSPFailedTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetVSPTicketsByFeeStatus(ctx context.Context, in *GetVSPTicketsByFeeStatusRequest, opts ...grpc.CallOption) (*GetVSPTicketsByFeeStatusResponse, error) {
	out := new(GetVSPTicketsByFeeStatusResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/GetVSPTicketsByFeeStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) ProcessManagedTickets(ctx context.Context, in *ProcessManagedTicketsRequest, opts ...grpc.CallOption) (*ProcessManagedTicketsResponse, error) {
	out := new(ProcessManagedTicketsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/ProcessManagedTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) ProcessUnmanagedTickets(ctx context.Context, in *ProcessUnmanagedTicketsRequest, opts ...grpc.CallOption) (*ProcessUnmanagedTicketsResponse, error) {
	out := new(ProcessUnmanagedTicketsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/ProcessUnmanagedTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) SetVspdVoteChoices(ctx context.Context, in *SetVspdVoteChoicesRequest, opts ...grpc.CallOption) (*SetVspdVoteChoicesResponse, error) {
	out := new(SetVspdVoteChoicesResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/SetVspdVoteChoices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetTrackedVSPTickets(ctx context.Context, in *GetTrackedVSPTicketsRequest, opts ...grpc.CallOption) (*GetTrackedVSPTicketsResponse, error) {
	out := new(GetTrackedVSPTicketsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/GetTrackedVSPTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) DiscoverUsage(ctx context.Context, in *DiscoverUsageRequest, opts ...grpc.CallOption) (*DiscoverUsageResponse, error) {
	out := new(DiscoverUsageResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletService/DiscoverUsage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletServiceServer is the server API for WalletService service.
type WalletServiceServer interface {
	// Queries
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	Network(context.Context, *NetworkRequest) (*NetworkResponse, error)
	CoinType(context.Context, *CoinTypeRequest) (*CoinTypeResponse, error)
	AccountNumber(context.Context, *AccountNumberRequest) (*AccountNumberResponse, error)
	Accounts(context.Context, *AccountsRequest) (*AccountsResponse, error)
	Balance(context.Context, *BalanceRequest) (*BalanceResponse, error)
	GetAccountExtendedPubKey(context.Context, *GetAccountExtendedPubKeyRequest) (*GetAccountExtendedPubKeyResponse, error)
	GetAccountExtendedPrivKey(context.Context, *GetAccountExtendedPrivKeyRequest) (*GetAccountExtendedPrivKeyResponse, error)
	GetTransaction(context.Context, *GetTransactionRequest) (*GetTransactionResponse, error)
	GetTransactions(*GetTransactionsRequest, WalletService_GetTransactionsServer) error
	GetTicket(context.Context, *GetTicketRequest) (*GetTicketsResponse, error)
	GetTickets(*GetTicketsRequest, WalletService_GetTicketsServer) error
	TicketPrice(context.Context, *TicketPriceRequest) (*TicketPriceResponse, error)
	StakeInfo(context.Context, *StakeInfoRequest) (*StakeInfoResponse, error)
	BlockInfo(context.Context, *BlockInfoRequest) (*BlockInfoResponse, error)
	BestBlock(context.Context, *BestBlockRequest) (*BestBlockResponse, error)
	Spender(context.Context, *SpenderRequest) (*SpenderResponse, error)
	GetCFilters(*GetCFiltersRequest, WalletService_GetCFiltersServer) error
	GetPeerInfo(context.Context, *GetPeerInfoRequest) (*GetPeerInfoResponse, error)
	// Notifications
	TransactionNotifications(*TransactionNotificationsRequest, WalletService_TransactionNotificationsServer) error
	AccountNotifications(*AccountNotificationsRequest, WalletService_AccountNotificationsServer) error
	ConfirmationNotifications(WalletService_ConfirmationNotificationsServer) error
	// Control
	ChangePassphrase(context.Context, *ChangePassphraseRequest) (*ChangePassphraseResponse, error)
	RenameAccount(context.Context, *RenameAccountRequest) (*RenameAccountResponse, error)
	Rescan(*RescanRequest, WalletService_RescanServer) error
	NextAccount(context.Context, *NextAccountRequest) (*NextAccountResponse, error)
	NextAddress(context.Context, *NextAddressRequest) (*NextAddressResponse, error)
	ImportPrivateKey(context.Context, *ImportPrivateKeyRequest) (*ImportPrivateKeyResponse, error)
	ImportExtendedPublicKey(context.Context, *ImportExtendedPublicKeyRequest) (*ImportExtendedPublicKeyResponse, error)
	ImportScript(context.Context, *ImportScriptRequest) (*ImportScriptResponse, error)
	FundTransaction(context.Context, *FundTransactionRequest) (*FundTransactionResponse, error)
	UnspentOutputs(*UnspentOutputsRequest, WalletService_UnspentOutputsServer) error
	ConstructTransaction(context.Context, *ConstructTransactionRequest) (*ConstructTransactionResponse, error)
	SignTransaction(context.Context, *SignTransactionRequest) (*SignTransactionResponse, error)
	SignTransactions(context.Context, *SignTransactionsRequest) (*SignTransactionsResponse, error)
	CreateSignature(context.Context, *CreateSignatureRequest) (*CreateSignatureResponse, error)
	PublishTransaction(context.Context, *PublishTransactionRequest) (*PublishTransactionResponse, error)
	PublishUnminedTransactions(context.Context, *PublishUnminedTransactionsRequest) (*PublishUnminedTransactionsResponse, error)
	PurchaseTickets(context.Context, *PurchaseTicketsRequest) (*PurchaseTicketsResponse, error)
	RevokeTicket(context.Context, *RevokeTicketRequest) (*RevokeTicketResponse, error)
	RevokeTickets(context.Context, *RevokeTicketsRequest) (*RevokeTicketsResponse, error)
	LoadActiveDataFilters(context.Context, *LoadActiveDataFiltersRequest) (*LoadActiveDataFiltersResponse, error)
	SignMessage(context.Context, *SignMessageRequest) (*SignMessageResponse, error)
	SignMessages(context.Context, *SignMessagesRequest) (*SignMessagesResponse, error)
	ValidateAddress(context.Context, *ValidateAddressRequest) (*ValidateAddressResponse, error)
	CommittedTickets(context.Context, *CommittedTicketsRequest) (*CommittedTicketsResponse, error)
	SweepAccount(context.Context, *SweepAccountRequest) (*SweepAccountResponse, error)
	AbandonTransaction(context.Context, *AbandonTransactionRequest) (*AbandonTransactionResponse, error)
	SignHashes(context.Context, *SignHashesRequest) (*SignHashesResponse, error)
	GetCoinjoinOutputspByAcct(context.Context, *GetCoinjoinOutputspByAcctRequest) (*GetCoinjoinOutputspByAcctResponse, error)
	SetAccountPassphrase(context.Context, *SetAccountPassphraseRequest) (*SetAccountPassphraseResponse, error)
	UnlockAccount(context.Context, *UnlockAccountRequest) (*UnlockAccountResponse, error)
	LockAccount(context.Context, *LockAccountRequest) (*LockAccountResponse, error)
	UnlockWallet(context.Context, *UnlockWalletRequest) (*UnlockWalletResponse, error)
	LockWallet(context.Context, *LockWalletRequest) (*LockWalletResponse, error)
	AccountUnlocked(context.Context, *AccountUnlockedRequest) (*AccountUnlockedResponse, error)
	SyncVSPFailedTickets(context.Context, *SyncVSPTicketsRequest) (*SyncVSPTicketsResponse, error)
	GetVSPTicketsByFeeStatus(context.Context, *GetVSPTicketsByFeeStatusRequest) (*GetVSPTicketsByFeeStatusResponse, error)
	ProcessManagedTickets(context.Context, *ProcessManagedTicketsRequest) (*ProcessManagedTicketsResponse, error)
	ProcessUnmanagedTickets(context.Context, *ProcessUnmanagedTicketsRequest) (*ProcessUnmanagedTicketsResponse, error)
	SetVspdVoteChoices(context.Context, *SetVspdVoteChoicesRequest) (*SetVspdVoteChoicesResponse, error)
	GetTrackedVSPTickets(context.Context, *GetTrackedVSPTicketsRequest) (*GetTrackedVSPTicketsResponse, error)
	DiscoverUsage(context.Context, *DiscoverUsageRequest) (*DiscoverUsageResponse, error)
}

// UnimplementedWalletServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWalletServiceServer struct {
}

func (*UnimplementedWalletServiceServer) Ping(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedWalletServiceServer) Network(context.Context, *NetworkRequest) (*NetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Network not implemented")
}
func (*UnimplementedWalletServiceServer) CoinType(context.Context, *CoinTypeRequest) (*CoinTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CoinType not implemented")
}
func (*UnimplementedWalletServiceServer) AccountNumber(context.Context, *AccountNumberRequest) (*AccountNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountNumber not implemented")
}
func (*UnimplementedWalletServiceServer) Accounts(context.Context, *AccountsRequest) (*AccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Accounts not implemented")
}
func (*UnimplementedWalletServiceServer) Balance(context.Context, *BalanceRequest) (*BalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance not implemented")
}
func (*UnimplementedWalletServiceServer) GetAccountExtendedPubKey(context.Context, *GetAccountExtendedPubKeyRequest) (*GetAccountExtendedPubKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountExtendedPubKey not implemented")
}
func (*UnimplementedWalletServiceServer) GetAccountExtendedPrivKey(context.Context, *GetAccountExtendedPrivKeyRequest) (*GetAccountExtendedPrivKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountExtendedPrivKey not implemented")
}
func (*UnimplementedWalletServiceServer) GetTransaction(context.Context, *GetTransactionRequest) (*GetTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransaction not implemented")
}
func (*UnimplementedWalletServiceServer) GetTransactions(*GetTransactionsRequest, WalletService_GetTransactionsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTransactions not implemented")
}
func (*UnimplementedWalletServiceServer) GetTicket(context.Context, *GetTicketRequest) (*GetTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTicket not implemented")
}
func (*UnimplementedWalletServiceServer) GetTickets(*GetTicketsRequest, WalletService_GetTicketsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTickets not implemented")
}
func (*UnimplementedWalletServiceServer) TicketPrice(context.Context, *TicketPriceRequest) (*TicketPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TicketPrice not implemented")
}
func (*UnimplementedWalletServiceServer) StakeInfo(context.Context, *StakeInfoRequest) (*StakeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StakeInfo not implemented")
}
func (*UnimplementedWalletServiceServer) BlockInfo(context.Context, *BlockInfoRequest) (*BlockInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlockInfo not implemented")
}
func (*UnimplementedWalletServiceServer) BestBlock(context.Context, *BestBlockRequest) (*BestBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BestBlock not implemented")
}
func (*UnimplementedWalletServiceServer) Spender(context.Context, *SpenderRequest) (*SpenderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Spender not implemented")
}
func (*UnimplementedWalletServiceServer) GetCFilters(*GetCFiltersRequest, WalletService_GetCFiltersServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCFilters not implemented")
}
func (*UnimplementedWalletServiceServer) GetPeerInfo(context.Context, *GetPeerInfoRequest) (*GetPeerInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPeerInfo not implemented")
}
func (*UnimplementedWalletServiceServer) TransactionNotifications(*TransactionNotificationsRequest, WalletService_TransactionNotificationsServer) error {
	return status.Errorf(codes.Unimplemented, "method TransactionNotifications not implemented")
}
func (*UnimplementedWalletServiceServer) AccountNotifications(*AccountNotificationsRequest, WalletService_AccountNotificationsServer) error {
	return status.Errorf(codes.Unimplemented, "method AccountNotifications not implemented")
}
func (*UnimplementedWalletServiceServer) ConfirmationNotifications(WalletService_ConfirmationNotificationsServer) error {
	return status.Errorf(codes.Unimplemented, "method ConfirmationNotifications not implemented")
}
func (*UnimplementedWalletServiceServer) ChangePassphrase(context.Context, *ChangePassphraseRequest) (*ChangePassphraseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassphrase not implemented")
}
func (*UnimplementedWalletServiceServer) RenameAccount(context.Context, *RenameAccountRequest) (*RenameAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenameAccount not implemented")
}
func (*UnimplementedWalletServiceServer) Rescan(*RescanRequest, WalletService_RescanServer) error {
	return status.Errorf(codes.Unimplemented, "method Rescan not implemented")
}
func (*UnimplementedWalletServiceServer) NextAccount(context.Context, *NextAccountRequest) (*NextAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextAccount not implemented")
}
func (*UnimplementedWalletServiceServer) NextAddress(context.Context, *NextAddressRequest) (*NextAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextAddress not implemented")
}
func (*UnimplementedWalletServiceServer) ImportPrivateKey(context.Context, *ImportPrivateKeyRequest) (*ImportPrivateKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportPrivateKey not implemented")
}
func (*UnimplementedWalletServiceServer) ImportExtendedPublicKey(context.Context, *ImportExtendedPublicKeyRequest) (*ImportExtendedPublicKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportExtendedPublicKey not implemented")
}
func (*UnimplementedWalletServiceServer) ImportScript(context.Context, *ImportScriptRequest) (*ImportScriptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportScript not implemented")
}
func (*UnimplementedWalletServiceServer) FundTransaction(context.Context, *FundTransactionRequest) (*FundTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FundTransaction not implemented")
}
func (*UnimplementedWalletServiceServer) UnspentOutputs(*UnspentOutputsRequest, WalletService_UnspentOutputsServer) error {
	return status.Errorf(codes.Unimplemented, "method UnspentOutputs not implemented")
}
func (*UnimplementedWalletServiceServer) ConstructTransaction(context.Context, *ConstructTransactionRequest) (*ConstructTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConstructTransaction not implemented")
}
func (*UnimplementedWalletServiceServer) SignTransaction(context.Context, *SignTransactionRequest) (*SignTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignTransaction not implemented")
}
func (*UnimplementedWalletServiceServer) SignTransactions(context.Context, *SignTransactionsRequest) (*SignTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignTransactions not implemented")
}
func (*UnimplementedWalletServiceServer) CreateSignature(context.Context, *CreateSignatureRequest) (*CreateSignatureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSignature not implemented")
}
func (*UnimplementedWalletServiceServer) PublishTransaction(context.Context, *PublishTransactionRequest) (*PublishTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishTransaction not implemented")
}
func (*UnimplementedWalletServiceServer) PublishUnminedTransactions(context.Context, *PublishUnminedTransactionsRequest) (*PublishUnminedTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishUnminedTransactions not implemented")
}
func (*UnimplementedWalletServiceServer) PurchaseTickets(context.Context, *PurchaseTicketsRequest) (*PurchaseTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PurchaseTickets not implemented")
}
func (*UnimplementedWalletServiceServer) RevokeTicket(context.Context, *RevokeTicketRequest) (*RevokeTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeTicket not implemented")
}
func (*UnimplementedWalletServiceServer) RevokeTickets(context.Context, *RevokeTicketsRequest) (*RevokeTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeTickets not implemented")
}
func (*UnimplementedWalletServiceServer) LoadActiveDataFilters(context.Context, *LoadActiveDataFiltersRequest) (*LoadActiveDataFiltersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadActiveDataFilters not implemented")
}
func (*UnimplementedWalletServiceServer) SignMessage(context.Context, *SignMessageRequest) (*SignMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignMessage not implemented")
}
func (*UnimplementedWalletServiceServer) SignMessages(context.Context, *SignMessagesRequest) (*SignMessagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignMessages not implemented")
}
func (*UnimplementedWalletServiceServer) ValidateAddress(context.Context, *ValidateAddressRequest) (*ValidateAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateAddress not implemented")
}
func (*UnimplementedWalletServiceServer) CommittedTickets(context.Context, *CommittedTicketsRequest) (*CommittedTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommittedTickets not implemented")
}
func (*UnimplementedWalletServiceServer) SweepAccount(context.Context, *SweepAccountRequest) (*SweepAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SweepAccount not implemented")
}
func (*UnimplementedWalletServiceServer) AbandonTransaction(context.Context, *AbandonTransactionRequest) (*AbandonTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AbandonTransaction not implemented")
}
func (*UnimplementedWalletServiceServer) SignHashes(context.Context, *SignHashesRequest) (*SignHashesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignHashes not implemented")
}
func (*UnimplementedWalletServiceServer) GetCoinjoinOutputspByAcct(context.Context, *GetCoinjoinOutputspByAcctRequest) (*GetCoinjoinOutputspByAcctResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCoinjoinOutputspByAcct not implemented")
}
func (*UnimplementedWalletServiceServer) SetAccountPassphrase(context.Context, *SetAccountPassphraseRequest) (*SetAccountPassphraseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAccountPassphrase not implemented")
}
func (*UnimplementedWalletServiceServer) UnlockAccount(context.Context, *UnlockAccountRequest) (*UnlockAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlockAccount not implemented")
}
func (*UnimplementedWalletServiceServer) LockAccount(context.Context, *LockAccountRequest) (*LockAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LockAccount not implemented")
}
func (*UnimplementedWalletServiceServer) UnlockWallet(context.Context, *UnlockWalletRequest) (*UnlockWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlockWallet not implemented")
}
func (*UnimplementedWalletServiceServer) LockWallet(context.Context, *LockWalletRequest) (*LockWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LockWallet not implemented")
}
func (*UnimplementedWalletServiceServer) AccountUnlocked(context.Context, *AccountUnlockedRequest) (*AccountUnlockedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUnlocked not implemented")
}
func (*UnimplementedWalletServiceServer) SyncVSPFailedTickets(context.Context, *SyncVSPTicketsRequest) (*SyncVSPTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncVSPFailedTickets not implemented")
}
func (*UnimplementedWalletServiceServer) GetVSPTicketsByFeeStatus(context.Context, *GetVSPTicketsByFeeStatusRequest) (*GetVSPTicketsByFeeStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVSPTicketsByFeeStatus not implemented")
}
func (*UnimplementedWalletServiceServer) ProcessManagedTickets(context.Context, *ProcessManagedTicketsRequest) (*ProcessManagedTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessManagedTickets not implemented")
}
func (*UnimplementedWalletServiceServer) ProcessUnmanagedTickets(context.Context, *ProcessUnmanagedTicketsRequest) (*ProcessUnmanagedTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessUnmanagedTickets not implemented")
}
func (*UnimplementedWalletServiceServer) SetVspdVoteChoices(context.Context, *SetVspdVoteChoicesRequest) (*SetVspdVoteChoicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVspdVoteChoices not implemented")
}
func (*UnimplementedWalletServiceServer) GetTrackedVSPTickets(context.Context, *GetTrackedVSPTicketsRequest) (*GetTrackedVSPTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrackedVSPTickets not implemented")
}
func (*UnimplementedWalletServiceServer) DiscoverUsage(context.Context, *DiscoverUsageRequest) (*DiscoverUsageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiscoverUsage not implemented")
}

func RegisterWalletServiceServer(s *grpc.Server, srv WalletServiceServer) {
	s.RegisterService(&_WalletService_serviceDesc, srv)
}

func _WalletService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Network_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Network(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/Network",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Network(ctx, req.(*NetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_CoinType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoinTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).CoinType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/CoinType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).CoinType(ctx, req.(*CoinTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_AccountNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).AccountNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/AccountNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).AccountNumber(ctx, req.(*AccountNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Accounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Accounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/Accounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Accounts(ctx, req.(*AccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Balance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Balance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/Balance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Balance(ctx, req.(*BalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetAccountExtendedPubKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountExtendedPubKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetAccountExtendedPubKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/GetAccountExtendedPubKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetAccountExtendedPubKey(ctx, req.(*GetAccountExtendedPubKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetAccountExtendedPrivKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountExtendedPrivKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetAccountExtendedPrivKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/GetAccountExtendedPrivKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetAccountExtendedPrivKey(ctx, req.(*GetAccountExtendedPrivKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetTransaction(ctx, req.(*GetTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetTransactions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetTransactionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WalletServiceServer).GetTransactions(m, &walletServiceGetTransactionsServer{stream})
}

type WalletService_GetTransactionsServer interface {
	Send(*GetTransactionsResponse) error
	grpc.ServerStream
}

type walletServiceGetTransactionsServer struct {
	grpc.ServerStream
}

func (x *walletServiceGetTransactionsServer) Send(m *GetTransactionsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WalletService_GetTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/GetTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetTicket(ctx, req.(*GetTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetTickets_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetTicketsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WalletServiceServer).GetTickets(m, &walletServiceGetTicketsServer{stream})
}

type WalletService_GetTicketsServer interface {
	Send(*GetTicketsResponse) error
	grpc.ServerStream
}

type walletServiceGetTicketsServer struct {
	grpc.ServerStream
}

func (x *walletServiceGetTicketsServer) Send(m *GetTicketsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WalletService_TicketPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TicketPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).TicketPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/TicketPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).TicketPrice(ctx, req.(*TicketPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_StakeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StakeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).StakeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/StakeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).StakeInfo(ctx, req.(*StakeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_BlockInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).BlockInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/BlockInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).BlockInfo(ctx, req.(*BlockInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_BestBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BestBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).BestBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/BestBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).BestBlock(ctx, req.(*BestBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Spender_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Spender(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/Spender",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Spender(ctx, req.(*SpenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetCFilters_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetCFiltersRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WalletServiceServer).GetCFilters(m, &walletServiceGetCFiltersServer{stream})
}

type WalletService_GetCFiltersServer interface {
	Send(*GetCFiltersResponse) error
	grpc.ServerStream
}

type walletServiceGetCFiltersServer struct {
	grpc.ServerStream
}

func (x *walletServiceGetCFiltersServer) Send(m *GetCFiltersResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WalletService_GetPeerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetPeerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/GetPeerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetPeerInfo(ctx, req.(*GetPeerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_TransactionNotifications_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TransactionNotificationsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WalletServiceServer).TransactionNotifications(m, &walletServiceTransactionNotificationsServer{stream})
}

type WalletService_TransactionNotificationsServer interface {
	Send(*TransactionNotificationsResponse) error
	grpc.ServerStream
}

type walletServiceTransactionNotificationsServer struct {
	grpc.ServerStream
}

func (x *walletServiceTransactionNotificationsServer) Send(m *TransactionNotificationsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WalletService_AccountNotifications_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AccountNotificationsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WalletServiceServer).AccountNotifications(m, &walletServiceAccountNotificationsServer{stream})
}

type WalletService_AccountNotificationsServer interface {
	Send(*AccountNotificationsResponse) error
	grpc.ServerStream
}

type walletServiceAccountNotificationsServer struct {
	grpc.ServerStream
}

func (x *walletServiceAccountNotificationsServer) Send(m *AccountNotificationsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WalletService_ConfirmationNotifications_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WalletServiceServer).ConfirmationNotifications(&walletServiceConfirmationNotificationsServer{stream})
}

type WalletService_ConfirmationNotificationsServer interface {
	Send(*ConfirmationNotificationsResponse) error
	Recv() (*ConfirmationNotificationsRequest, error)
	grpc.ServerStream
}

type walletServiceConfirmationNotificationsServer struct {
	grpc.ServerStream
}

func (x *walletServiceConfirmationNotificationsServer) Send(m *ConfirmationNotificationsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *walletServiceConfirmationNotificationsServer) Recv() (*ConfirmationNotificationsRequest, error) {
	m := new(ConfirmationNotificationsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _WalletService_ChangePassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).ChangePassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/ChangePassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).ChangePassphrase(ctx, req.(*ChangePassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_RenameAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).RenameAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/RenameAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).RenameAccount(ctx, req.(*RenameAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Rescan_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RescanRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WalletServiceServer).Rescan(m, &walletServiceRescanServer{stream})
}

type WalletService_RescanServer interface {
	Send(*RescanResponse) error
	grpc.ServerStream
}

type walletServiceRescanServer struct {
	grpc.ServerStream
}

func (x *walletServiceRescanServer) Send(m *RescanResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WalletService_NextAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NextAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).NextAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/NextAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).NextAccount(ctx, req.(*NextAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_NextAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NextAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).NextAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/NextAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).NextAddress(ctx, req.(*NextAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_ImportPrivateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportPrivateKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).ImportPrivateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/ImportPrivateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).ImportPrivateKey(ctx, req.(*ImportPrivateKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_ImportExtendedPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportExtendedPublicKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).ImportExtendedPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/ImportExtendedPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).ImportExtendedPublicKey(ctx, req.(*ImportExtendedPublicKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_ImportScript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportScriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).ImportScript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/ImportScript",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).ImportScript(ctx, req.(*ImportScriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_FundTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FundTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).FundTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/FundTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).FundTransaction(ctx, req.(*FundTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_UnspentOutputs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UnspentOutputsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WalletServiceServer).UnspentOutputs(m, &walletServiceUnspentOutputsServer{stream})
}

type WalletService_UnspentOutputsServer interface {
	Send(*UnspentOutputResponse) error
	grpc.ServerStream
}

type walletServiceUnspentOutputsServer struct {
	grpc.ServerStream
}

func (x *walletServiceUnspentOutputsServer) Send(m *UnspentOutputResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WalletService_ConstructTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConstructTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).ConstructTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/ConstructTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).ConstructTransaction(ctx, req.(*ConstructTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_SignTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).SignTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/SignTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).SignTransaction(ctx, req.(*SignTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_SignTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).SignTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/SignTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).SignTransactions(ctx, req.(*SignTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_CreateSignature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSignatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).CreateSignature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/CreateSignature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).CreateSignature(ctx, req.(*CreateSignatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_PublishTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).PublishTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/PublishTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).PublishTransaction(ctx, req.(*PublishTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_PublishUnminedTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishUnminedTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).PublishUnminedTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/PublishUnminedTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).PublishUnminedTransactions(ctx, req.(*PublishUnminedTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_PurchaseTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurchaseTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).PurchaseTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/PurchaseTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).PurchaseTickets(ctx, req.(*PurchaseTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_RevokeTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).RevokeTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/RevokeTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).RevokeTicket(ctx, req.(*RevokeTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_RevokeTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).RevokeTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/RevokeTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).RevokeTickets(ctx, req.(*RevokeTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_LoadActiveDataFilters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadActiveDataFiltersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).LoadActiveDataFilters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/LoadActiveDataFilters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).LoadActiveDataFilters(ctx, req.(*LoadActiveDataFiltersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_SignMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).SignMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/SignMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).SignMessage(ctx, req.(*SignMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_SignMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).SignMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/SignMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).SignMessages(ctx, req.(*SignMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_ValidateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).ValidateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/ValidateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).ValidateAddress(ctx, req.(*ValidateAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_CommittedTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommittedTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).CommittedTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/CommittedTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).CommittedTickets(ctx, req.(*CommittedTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_SweepAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SweepAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).SweepAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/SweepAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).SweepAccount(ctx, req.(*SweepAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_AbandonTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AbandonTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).AbandonTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/AbandonTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).AbandonTransaction(ctx, req.(*AbandonTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_SignHashes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignHashesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).SignHashes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/SignHashes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).SignHashes(ctx, req.(*SignHashesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetCoinjoinOutputspByAcct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCoinjoinOutputspByAcctRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetCoinjoinOutputspByAcct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/GetCoinjoinOutputspByAcct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetCoinjoinOutputspByAcct(ctx, req.(*GetCoinjoinOutputspByAcctRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_SetAccountPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAccountPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).SetAccountPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/SetAccountPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).SetAccountPassphrase(ctx, req.(*SetAccountPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_UnlockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).UnlockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/UnlockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).UnlockAccount(ctx, req.(*UnlockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_LockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).LockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/LockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).LockAccount(ctx, req.(*LockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_UnlockWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).UnlockWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/UnlockWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).UnlockWallet(ctx, req.(*UnlockWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_LockWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).LockWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/LockWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).LockWallet(ctx, req.(*LockWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_AccountUnlocked_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountUnlockedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).AccountUnlocked(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/AccountUnlocked",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).AccountUnlocked(ctx, req.(*AccountUnlockedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_SyncVSPFailedTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncVSPTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).SyncVSPFailedTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/SyncVSPFailedTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).SyncVSPFailedTickets(ctx, req.(*SyncVSPTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetVSPTicketsByFeeStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVSPTicketsByFeeStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetVSPTicketsByFeeStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/GetVSPTicketsByFeeStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetVSPTicketsByFeeStatus(ctx, req.(*GetVSPTicketsByFeeStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_ProcessManagedTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessManagedTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).ProcessManagedTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/ProcessManagedTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).ProcessManagedTickets(ctx, req.(*ProcessManagedTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_ProcessUnmanagedTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessUnmanagedTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).ProcessUnmanagedTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/ProcessUnmanagedTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).ProcessUnmanagedTickets(ctx, req.(*ProcessUnmanagedTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_SetVspdVoteChoices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVspdVoteChoicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).SetVspdVoteChoices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/SetVspdVoteChoices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).SetVspdVoteChoices(ctx, req.(*SetVspdVoteChoicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetTrackedVSPTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrackedVSPTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetTrackedVSPTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/GetTrackedVSPTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetTrackedVSPTickets(ctx, req.(*GetTrackedVSPTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_DiscoverUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscoverUsageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).DiscoverUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletService/DiscoverUsage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).DiscoverUsage(ctx, req.(*DiscoverUsageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WalletService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.WalletService",
	HandlerType: (*WalletServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _WalletService_Ping_Handler,
		},
		{
			MethodName: "Network",
			Handler:    _WalletService_Network_Handler,
		},
		{
			MethodName: "CoinType",
			Handler:    _WalletService_CoinType_Handler,
		},
		{
			MethodName: "AccountNumber",
			Handler:    _WalletService_AccountNumber_Handler,
		},
		{
			MethodName: "Accounts",
			Handler:    _WalletService_Accounts_Handler,
		},
		{
			MethodName: "Balance",
			Handler:    _WalletService_Balance_Handler,
		},
		{
			MethodName: "GetAccountExtendedPubKey",
			Handler:    _WalletService_GetAccountExtendedPubKey_Handler,
		},
		{
			MethodName: "GetAccountExtendedPrivKey",
			Handler:    _WalletService_GetAccountExtendedPrivKey_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _WalletService_GetTransaction_Handler,
		},
		{
			MethodName: "GetTicket",
			Handler:    _WalletService_GetTicket_Handler,
		},
		{
			MethodName: "TicketPrice",
			Handler:    _WalletService_TicketPrice_Handler,
		},
		{
			MethodName: "StakeInfo",
			Handler:    _WalletService_StakeInfo_Handler,
		},
		{
			MethodName: "BlockInfo",
			Handler:    _WalletService_BlockInfo_Handler,
		},
		{
			MethodName: "BestBlock",
			Handler:    _WalletService_BestBlock_Handler,
		},
		{
			MethodName: "Spender",
			Handler:    _WalletService_Spender_Handler,
		},
		{
			MethodName: "GetPeerInfo",
			Handler:    _WalletService_GetPeerInfo_Handler,
		},
		{
			MethodName: "ChangePassphrase",
			Handler:    _WalletService_ChangePassphrase_Handler,
		},
		{
			MethodName: "RenameAccount",
			Handler:    _WalletService_RenameAccount_Handler,
		},
		{
			MethodName: "NextAccount",
			Handler:    _WalletService_NextAccount_Handler,
		},
		{
			MethodName: "NextAddress",
			Handler:    _WalletService_NextAddress_Handler,
		},
		{
			MethodName: "ImportPrivateKey",
			Handler:    _WalletService_ImportPrivateKey_Handler,
		},
		{
			MethodName: "ImportExtendedPublicKey",
			Handler:    _WalletService_ImportExtendedPublicKey_Handler,
		},
		{
			MethodName: "ImportScript",
			Handler:    _WalletService_ImportScript_Handler,
		},
		{
			MethodName: "FundTransaction",
			Handler:    _WalletService_FundTransaction_Handler,
		},
		{
			MethodName: "ConstructTransaction",
			Handler:    _WalletService_ConstructTransaction_Handler,
		},
		{
			MethodName: "SignTransaction",
			Handler:    _WalletService_SignTransaction_Handler,
		},
		{
			MethodName: "SignTransactions",
			Handler:    _WalletService_SignTransactions_Handler,
		},
		{
			MethodName: "CreateSignature",
			Handler:    _WalletService_CreateSignature_Handler,
		},
		{
			MethodName: "PublishTransaction",
			Handler:    _WalletService_PublishTransaction_Handler,
		},
		{
			MethodName: "PublishUnminedTransactions",
			Handler:    _WalletService_PublishUnminedTransactions_Handler,
		},
		{
			MethodName: "PurchaseTickets",
			Handler:    _WalletService_PurchaseTickets_Handler,
		},
		{
			MethodName: "RevokeTicket",
			Handler:    _WalletService_RevokeTicket_Handler,
		},
		{
			MethodName: "RevokeTickets",
			Handler:    _WalletService_RevokeTickets_Handler,
		},
		{
			MethodName: "LoadActiveDataFilters",
			Handler:    _WalletService_LoadActiveDataFilters_Handler,
		},
		{
			MethodName: "SignMessage",
			Handler:    _WalletService_SignMessage_Handler,
		},
		{
			MethodName: "SignMessages",
			Handler:    _WalletService_SignMessages_Handler,
		},
		{
			MethodName: "ValidateAddress",
			Handler:    _WalletService_ValidateAddress_Handler,
		},
		{
			MethodName: "CommittedTickets",
			Handler:    _WalletService_CommittedTickets_Handler,
		},
		{
			MethodName: "SweepAccount",
			Handler:    _WalletService_SweepAccount_Handler,
		},
		{
			MethodName: "AbandonTransaction",
			Handler:    _WalletService_AbandonTransaction_Handler,
		},
		{
			MethodName: "SignHashes",
			Handler:    _WalletService_SignHashes_Handler,
		},
		{
			MethodName: "GetCoinjoinOutputspByAcct",
			Handler:    _WalletService_GetCoinjoinOutputspByAcct_Handler,
		},
		{
			MethodName: "SetAccountPassphrase",
			Handler:    _WalletService_SetAccountPassphrase_Handler,
		},
		{
			MethodName: "UnlockAccount",
			Handler:    _WalletService_UnlockAccount_Handler,
		},
		{
			MethodName: "LockAccount",
			Handler:    _WalletService_LockAccount_Handler,
		},
		{
			MethodName: "UnlockWallet",
			Handler:    _WalletService_UnlockWallet_Handler,
		},
		{
			MethodName: "LockWallet",
			Handler:    _WalletService_LockWallet_Handler,
		},
		{
			MethodName: "AccountUnlocked",
			Handler:    _WalletService_AccountUnlocked_Handler,
		},
		{
			MethodName: "SyncVSPFailedTickets",
			Handler:    _WalletService_SyncVSPFailedTickets_Handler,
		},
		{
			MethodName: "GetVSPTicketsByFeeStatus",
			Handler:    _WalletService_GetVSPTicketsByFeeStatus_Handler,
		},
		{
			MethodName: "ProcessManagedTickets",
			Handler:    _WalletService_ProcessManagedTickets_Handler,
		},
		{
			MethodName: "ProcessUnmanagedTickets",
			Handler:    _WalletService_ProcessUnmanagedTickets_Handler,
		},
		{
			MethodName: "SetVspdVoteChoices",
			Handler:    _WalletService_SetVspdVoteChoices_Handler,
		},
		{
			MethodName: "GetTrackedVSPTickets",
			Handler:    _WalletService_GetTrackedVSPTickets_Handler,
		},
		{
			MethodName: "DiscoverUsage",
			Handler:    _WalletService_DiscoverUsage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTransactions",
			Handler:       _WalletService_GetTransactions_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetTickets",
			Handler:       _WalletService_GetTickets_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetCFilters",
			Handler:       _WalletService_GetCFilters_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "TransactionNotifications",
			Handler:       _WalletService_TransactionNotifications_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AccountNotifications",
			Handler:       _WalletService_AccountNotifications_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ConfirmationNotifications",
			Handler:       _WalletService_ConfirmationNotifications_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Rescan",
			Handler:       _WalletService_Rescan_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "UnspentOutputs",
			Handler:       _WalletService_UnspentOutputs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// WalletLoaderServiceClient is the client API for WalletLoaderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletLoaderServiceClient interface {
	WalletExists(ctx context.Context, in *WalletExistsRequest, opts ...grpc.CallOption) (*WalletExistsResponse, error)
	CreateWallet(ctx context.Context, in *CreateWalletRequest, opts ...grpc.CallOption) (*CreateWalletResponse, error)
	CreateWatchingOnlyWallet(ctx context.Context, in *CreateWatchingOnlyWalletRequest, opts ...grpc.CallOption) (*CreateWatchingOnlyWalletResponse, error)
	OpenWallet(ctx context.Context, in *OpenWalletRequest, opts ...grpc.CallOption) (*OpenWalletResponse, error)
	CloseWallet(ctx context.Context, in *CloseWalletRequest, opts ...grpc.CallOption) (*CloseWalletResponse, error)
	SpvSync(ctx context.Context, in *SpvSyncRequest, opts ...grpc.CallOption) (WalletLoaderService_SpvSyncClient, error)
	RpcSync(ctx context.Context, in *RpcSyncRequest, opts ...grpc.CallOption) (WalletLoaderService_RpcSyncClient, error)
	RescanPoint(ctx context.Context, in *RescanPointRequest, opts ...grpc.CallOption) (*RescanPointResponse, error)
}

type walletLoaderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWalletLoaderServiceClient(cc grpc.ClientConnInterface) WalletLoaderServiceClient {
	return &walletLoaderServiceClient{cc}
}

func (c *walletLoaderServiceClient) WalletExists(ctx context.Context, in *WalletExistsRequest, opts ...grpc.CallOption) (*WalletExistsResponse, error) {
	out := new(WalletExistsResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletLoaderService/WalletExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletLoaderServiceClient) CreateWallet(ctx context.Context, in *CreateWalletRequest, opts ...grpc.CallOption) (*CreateWalletResponse, error) {
	out := new(CreateWalletResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletLoaderService/CreateWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletLoaderServiceClient) CreateWatchingOnlyWallet(ctx context.Context, in *CreateWatchingOnlyWalletRequest, opts ...grpc.CallOption) (*CreateWatchingOnlyWalletResponse, error) {
	out := new(CreateWatchingOnlyWalletResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletLoaderService/CreateWatchingOnlyWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletLoaderServiceClient) OpenWallet(ctx context.Context, in *OpenWalletRequest, opts ...grpc.CallOption) (*OpenWalletResponse, error) {
	out := new(OpenWalletResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletLoaderService/OpenWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletLoaderServiceClient) CloseWallet(ctx context.Context, in *CloseWalletRequest, opts ...grpc.CallOption) (*CloseWalletResponse, error) {
	out := new(CloseWalletResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletLoaderService/CloseWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletLoaderServiceClient) SpvSync(ctx context.Context, in *SpvSyncRequest, opts ...grpc.CallOption) (WalletLoaderService_SpvSyncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WalletLoaderService_serviceDesc.Streams[0], "/walletrpc.WalletLoaderService/SpvSync", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletLoaderServiceSpvSyncClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WalletLoaderService_SpvSyncClient interface {
	Recv() (*SpvSyncResponse, error)
	grpc.ClientStream
}

type walletLoaderServiceSpvSyncClient struct {
	grpc.ClientStream
}

func (x *walletLoaderServiceSpvSyncClient) Recv() (*SpvSyncResponse, error) {
	m := new(SpvSyncResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *walletLoaderServiceClient) RpcSync(ctx context.Context, in *RpcSyncRequest, opts ...grpc.CallOption) (WalletLoaderService_RpcSyncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WalletLoaderService_serviceDesc.Streams[1], "/walletrpc.WalletLoaderService/RpcSync", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletLoaderServiceRpcSyncClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WalletLoaderService_RpcSyncClient interface {
	Recv() (*RpcSyncResponse, error)
	grpc.ClientStream
}

type walletLoaderServiceRpcSyncClient struct {
	grpc.ClientStream
}

func (x *walletLoaderServiceRpcSyncClient) Recv() (*RpcSyncResponse, error) {
	m := new(RpcSyncResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *walletLoaderServiceClient) RescanPoint(ctx context.Context, in *RescanPointRequest, opts ...grpc.CallOption) (*RescanPointResponse, error) {
	out := new(RescanPointResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.WalletLoaderService/RescanPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletLoaderServiceServer is the server API for WalletLoaderService service.
type WalletLoaderServiceServer interface {
	WalletExists(context.Context, *WalletExistsRequest) (*WalletExistsResponse, error)
	CreateWallet(context.Context, *CreateWalletRequest) (*CreateWalletResponse, error)
	CreateWatchingOnlyWallet(context.Context, *CreateWatchingOnlyWalletRequest) (*CreateWatchingOnlyWalletResponse, error)
	OpenWallet(context.Context, *OpenWalletRequest) (*OpenWalletResponse, error)
	CloseWallet(context.Context, *CloseWalletRequest) (*CloseWalletResponse, error)
	SpvSync(*SpvSyncRequest, WalletLoaderService_SpvSyncServer) error
	RpcSync(*RpcSyncRequest, WalletLoaderService_RpcSyncServer) error
	RescanPoint(context.Context, *RescanPointRequest) (*RescanPointResponse, error)
}

// UnimplementedWalletLoaderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWalletLoaderServiceServer struct {
}

func (*UnimplementedWalletLoaderServiceServer) WalletExists(context.Context, *WalletExistsRequest) (*WalletExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WalletExists not implemented")
}
func (*UnimplementedWalletLoaderServiceServer) CreateWallet(context.Context, *CreateWalletRequest) (*CreateWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWallet not implemented")
}
func (*UnimplementedWalletLoaderServiceServer) CreateWatchingOnlyWallet(context.Context, *CreateWatchingOnlyWalletRequest) (*CreateWatchingOnlyWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWatchingOnlyWallet not implemented")
}
func (*UnimplementedWalletLoaderServiceServer) OpenWallet(context.Context, *OpenWalletRequest) (*OpenWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenWallet not implemented")
}
func (*UnimplementedWalletLoaderServiceServer) CloseWallet(context.Context, *CloseWalletRequest) (*CloseWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseWallet not implemented")
}
func (*UnimplementedWalletLoaderServiceServer) SpvSync(*SpvSyncRequest, WalletLoaderService_SpvSyncServer) error {
	return status.Errorf(codes.Unimplemented, "method SpvSync not implemented")
}
func (*UnimplementedWalletLoaderServiceServer) RpcSync(*RpcSyncRequest, WalletLoaderService_RpcSyncServer) error {
	return status.Errorf(codes.Unimplemented, "method RpcSync not implemented")
}
func (*UnimplementedWalletLoaderServiceServer) RescanPoint(context.Context, *RescanPointRequest) (*RescanPointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RescanPoint not implemented")
}

func RegisterWalletLoaderServiceServer(s *grpc.Server, srv WalletLoaderServiceServer) {
	s.RegisterService(&_WalletLoaderService_serviceDesc, srv)
}

func _WalletLoaderService_WalletExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletLoaderServiceServer).WalletExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletLoaderService/WalletExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletLoaderServiceServer).WalletExists(ctx, req.(*WalletExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletLoaderService_CreateWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletLoaderServiceServer).CreateWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletLoaderService/CreateWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletLoaderServiceServer).CreateWallet(ctx, req.(*CreateWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletLoaderService_CreateWatchingOnlyWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWatchingOnlyWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletLoaderServiceServer).CreateWatchingOnlyWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletLoaderService/CreateWatchingOnlyWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletLoaderServiceServer).CreateWatchingOnlyWallet(ctx, req.(*CreateWatchingOnlyWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletLoaderService_OpenWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletLoaderServiceServer).OpenWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletLoaderService/OpenWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletLoaderServiceServer).OpenWallet(ctx, req.(*OpenWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletLoaderService_CloseWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletLoaderServiceServer).CloseWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletLoaderService/CloseWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletLoaderServiceServer).CloseWallet(ctx, req.(*CloseWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletLoaderService_SpvSync_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SpvSyncRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WalletLoaderServiceServer).SpvSync(m, &walletLoaderServiceSpvSyncServer{stream})
}

type WalletLoaderService_SpvSyncServer interface {
	Send(*SpvSyncResponse) error
	grpc.ServerStream
}

type walletLoaderServiceSpvSyncServer struct {
	grpc.ServerStream
}

func (x *walletLoaderServiceSpvSyncServer) Send(m *SpvSyncResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WalletLoaderService_RpcSync_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RpcSyncRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WalletLoaderServiceServer).RpcSync(m, &walletLoaderServiceRpcSyncServer{stream})
}

type WalletLoaderService_RpcSyncServer interface {
	Send(*RpcSyncResponse) error
	grpc.ServerStream
}

type walletLoaderServiceRpcSyncServer struct {
	grpc.ServerStream
}

func (x *walletLoaderServiceRpcSyncServer) Send(m *RpcSyncResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WalletLoaderService_RescanPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RescanPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletLoaderServiceServer).RescanPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.WalletLoaderService/RescanPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletLoaderServiceServer).RescanPoint(ctx, req.(*RescanPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WalletLoaderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.WalletLoaderService",
	HandlerType: (*WalletLoaderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WalletExists",
			Handler:    _WalletLoaderService_WalletExists_Handler,
		},
		{
			MethodName: "CreateWallet",
			Handler:    _WalletLoaderService_CreateWallet_Handler,
		},
		{
			MethodName: "CreateWatchingOnlyWallet",
			Handler:    _WalletLoaderService_CreateWatchingOnlyWallet_Handler,
		},
		{
			MethodName: "OpenWallet",
			Handler:    _WalletLoaderService_OpenWallet_Handler,
		},
		{
			MethodName: "CloseWallet",
			Handler:    _WalletLoaderService_CloseWallet_Handler,
		},
		{
			MethodName: "RescanPoint",
			Handler:    _WalletLoaderService_RescanPoint_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SpvSync",
			Handler:       _WalletLoaderService_SpvSync_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RpcSync",
			Handler:       _WalletLoaderService_RpcSync_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// AccountMixerServiceClient is the client API for AccountMixerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountMixerServiceClient interface {
	RunAccountMixer(ctx context.Context, in *RunAccountMixerRequest, opts ...grpc.CallOption) (AccountMixerService_RunAccountMixerClient, error)
}

type accountMixerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountMixerServiceClient(cc grpc.ClientConnInterface) AccountMixerServiceClient {
	return &accountMixerServiceClient{cc}
}

func (c *accountMixerServiceClient) RunAccountMixer(ctx context.Context, in *RunAccountMixerRequest, opts ...grpc.CallOption) (AccountMixerService_RunAccountMixerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AccountMixerService_serviceDesc.Streams[0], "/walletrpc.AccountMixerService/RunAccountMixer", opts...)
	if err != nil {
		return nil, err
	}
	x := &accountMixerServiceRunAccountMixerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AccountMixerService_RunAccountMixerClient interface {
	Recv() (*RunAccountMixerResponse, error)
	grpc.ClientStream
}

type accountMixerServiceRunAccountMixerClient struct {
	grpc.ClientStream
}

func (x *accountMixerServiceRunAccountMixerClient) Recv() (*RunAccountMixerResponse, error) {
	m := new(RunAccountMixerResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AccountMixerServiceServer is the server API for AccountMixerService service.
type AccountMixerServiceServer interface {
	RunAccountMixer(*RunAccountMixerRequest, AccountMixerService_RunAccountMixerServer) error
}

// UnimplementedAccountMixerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccountMixerServiceServer struct {
}

func (*UnimplementedAccountMixerServiceServer) RunAccountMixer(*RunAccountMixerRequest, AccountMixerService_RunAccountMixerServer) error {
	return status.Errorf(codes.Unimplemented, "method RunAccountMixer not implemented")
}

func RegisterAccountMixerServiceServer(s *grpc.Server, srv AccountMixerServiceServer) {
	s.RegisterService(&_AccountMixerService_serviceDesc, srv)
}

func _AccountMixerService_RunAccountMixer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RunAccountMixerRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AccountMixerServiceServer).RunAccountMixer(m, &accountMixerServiceRunAccountMixerServer{stream})
}

type AccountMixerService_RunAccountMixerServer interface {
	Send(*RunAccountMixerResponse) error
	grpc.ServerStream
}

type accountMixerServiceRunAccountMixerServer struct {
	grpc.ServerStream
}

func (x *accountMixerServiceRunAccountMixerServer) Send(m *RunAccountMixerResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _AccountMixerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.AccountMixerService",
	HandlerType: (*AccountMixerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RunAccountMixer",
			Handler:       _AccountMixerService_RunAccountMixer_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// TicketBuyerV2ServiceClient is the client API for TicketBuyerV2Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketBuyerV2ServiceClient interface {
	RunTicketBuyer(ctx context.Context, in *RunTicketBuyerRequest, opts ...grpc.CallOption) (TicketBuyerV2Service_RunTicketBuyerClient, error)
}

type ticketBuyerV2ServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTicketBuyerV2ServiceClient(cc grpc.ClientConnInterface) TicketBuyerV2ServiceClient {
	return &ticketBuyerV2ServiceClient{cc}
}

func (c *ticketBuyerV2ServiceClient) RunTicketBuyer(ctx context.Context, in *RunTicketBuyerRequest, opts ...grpc.CallOption) (TicketBuyerV2Service_RunTicketBuyerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TicketBuyerV2Service_serviceDesc.Streams[0], "/walletrpc.TicketBuyerV2Service/RunTicketBuyer", opts...)
	if err != nil {
		return nil, err
	}
	x := &ticketBuyerV2ServiceRunTicketBuyerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TicketBuyerV2Service_RunTicketBuyerClient interface {
	Recv() (*RunTicketBuyerResponse, error)
	grpc.ClientStream
}

type ticketBuyerV2ServiceRunTicketBuyerClient struct {
	grpc.ClientStream
}

func (x *ticketBuyerV2ServiceRunTicketBuyerClient) Recv() (*RunTicketBuyerResponse, error) {
	m := new(RunTicketBuyerResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TicketBuyerV2ServiceServer is the server API for TicketBuyerV2Service service.
type TicketBuyerV2ServiceServer interface {
	RunTicketBuyer(*RunTicketBuyerRequest, TicketBuyerV2Service_RunTicketBuyerServer) error
}

// UnimplementedTicketBuyerV2ServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTicketBuyerV2ServiceServer struct {
}

func (*UnimplementedTicketBuyerV2ServiceServer) RunTicketBuyer(*RunTicketBuyerRequest, TicketBuyerV2Service_RunTicketBuyerServer) error {
	return status.Errorf(codes.Unimplemented, "method RunTicketBuyer not implemented")
}

func RegisterTicketBuyerV2ServiceServer(s *grpc.Server, srv TicketBuyerV2ServiceServer) {
	s.RegisterService(&_TicketBuyerV2Service_serviceDesc, srv)
}

func _TicketBuyerV2Service_RunTicketBuyer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RunTicketBuyerRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TicketBuyerV2ServiceServer).RunTicketBuyer(m, &ticketBuyerV2ServiceRunTicketBuyerServer{stream})
}

type TicketBuyerV2Service_RunTicketBuyerServer interface {
	Send(*RunTicketBuyerResponse) error
	grpc.ServerStream
}

type ticketBuyerV2ServiceRunTicketBuyerServer struct {
	grpc.ServerStream
}

func (x *ticketBuyerV2ServiceRunTicketBuyerServer) Send(m *RunTicketBuyerResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _TicketBuyerV2Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.TicketBuyerV2Service",
	HandlerType: (*TicketBuyerV2ServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RunTicketBuyer",
			Handler:       _TicketBuyerV2Service_RunTicketBuyer_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// TicketBuyerServiceClient is the client API for TicketBuyerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketBuyerServiceClient interface {
	StartAutoBuyer(ctx context.Context, in *StartAutoBuyerRequest, opts ...grpc.CallOption) (*StartAutoBuyerResponse, error)
	StopAutoBuyer(ctx context.Context, in *StopAutoBuyerRequest, opts ...grpc.CallOption) (*StopAutoBuyerResponse, error)
	TicketBuyerConfig(ctx context.Context, in *TicketBuyerConfigRequest, opts ...grpc.CallOption) (*TicketBuyerConfigResponse, error)
	SetAccount(ctx context.Context, in *SetAccountRequest, opts ...grpc.CallOption) (*SetAccountResponse, error)
	SetBalanceToMaintain(ctx context.Context, in *SetBalanceToMaintainRequest, opts ...grpc.CallOption) (*SetBalanceToMaintainResponse, error)
	SetMaxFee(ctx context.Context, in *SetMaxFeeRequest, opts ...grpc.CallOption) (*SetMaxFeeResponse, error)
	SetMaxPriceRelative(ctx context.Context, in *SetMaxPriceRelativeRequest, opts ...grpc.CallOption) (*SetMaxPriceRelativeResponse, error)
	SetMaxPriceAbsolute(ctx context.Context, in *SetMaxPriceAbsoluteRequest, opts ...grpc.CallOption) (*SetMaxPriceAbsoluteResponse, error)
	SetVotingAddress(ctx context.Context, in *SetVotingAddressRequest, opts ...grpc.CallOption) (*SetVotingAddressResponse, error)
	SetPoolAddress(ctx context.Context, in *SetPoolAddressRequest, opts ...grpc.CallOption) (*SetPoolAddressResponse, error)
	SetPoolFees(ctx context.Context, in *SetPoolFeesRequest, opts ...grpc.CallOption) (*SetPoolFeesResponse, error)
	SetMaxPerBlock(ctx context.Context, in *SetMaxPerBlockRequest, opts ...grpc.CallOption) (*SetMaxPerBlockResponse, error)
}

type ticketBuyerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTicketBuyerServiceClient(cc grpc.ClientConnInterface) TicketBuyerServiceClient {
	return &ticketBuyerServiceClient{cc}
}

func (c *ticketBuyerServiceClient) StartAutoBuyer(ctx context.Context, in *StartAutoBuyerRequest, opts ...grpc.CallOption) (*StartAutoBuyerResponse, error) {
	out := new(StartAutoBuyerResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/StartAutoBuyer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) StopAutoBuyer(ctx context.Context, in *StopAutoBuyerRequest, opts ...grpc.CallOption) (*StopAutoBuyerResponse, error) {
	out := new(StopAutoBuyerResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/StopAutoBuyer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) TicketBuyerConfig(ctx context.Context, in *TicketBuyerConfigRequest, opts ...grpc.CallOption) (*TicketBuyerConfigResponse, error) {
	out := new(TicketBuyerConfigResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/TicketBuyerConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) SetAccount(ctx context.Context, in *SetAccountRequest, opts ...grpc.CallOption) (*SetAccountResponse, error) {
	out := new(SetAccountResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/SetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) SetBalanceToMaintain(ctx context.Context, in *SetBalanceToMaintainRequest, opts ...grpc.CallOption) (*SetBalanceToMaintainResponse, error) {
	out := new(SetBalanceToMaintainResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/SetBalanceToMaintain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) SetMaxFee(ctx context.Context, in *SetMaxFeeRequest, opts ...grpc.CallOption) (*SetMaxFeeResponse, error) {
	out := new(SetMaxFeeResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/SetMaxFee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) SetMaxPriceRelative(ctx context.Context, in *SetMaxPriceRelativeRequest, opts ...grpc.CallOption) (*SetMaxPriceRelativeResponse, error) {
	out := new(SetMaxPriceRelativeResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/SetMaxPriceRelative", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) SetMaxPriceAbsolute(ctx context.Context, in *SetMaxPriceAbsoluteRequest, opts ...grpc.CallOption) (*SetMaxPriceAbsoluteResponse, error) {
	out := new(SetMaxPriceAbsoluteResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/SetMaxPriceAbsolute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) SetVotingAddress(ctx context.Context, in *SetVotingAddressRequest, opts ...grpc.CallOption) (*SetVotingAddressResponse, error) {
	out := new(SetVotingAddressResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/SetVotingAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) SetPoolAddress(ctx context.Context, in *SetPoolAddressRequest, opts ...grpc.CallOption) (*SetPoolAddressResponse, error) {
	out := new(SetPoolAddressResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/SetPoolAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) SetPoolFees(ctx context.Context, in *SetPoolFeesRequest, opts ...grpc.CallOption) (*SetPoolFeesResponse, error) {
	out := new(SetPoolFeesResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/SetPoolFees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketBuyerServiceClient) SetMaxPerBlock(ctx context.Context, in *SetMaxPerBlockRequest, opts ...grpc.CallOption) (*SetMaxPerBlockResponse, error) {
	out := new(SetMaxPerBlockResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.TicketBuyerService/SetMaxPerBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TicketBuyerServiceServer is the server API for TicketBuyerService service.
type TicketBuyerServiceServer interface {
	StartAutoBuyer(context.Context, *StartAutoBuyerRequest) (*StartAutoBuyerResponse, error)
	StopAutoBuyer(context.Context, *StopAutoBuyerRequest) (*StopAutoBuyerResponse, error)
	TicketBuyerConfig(context.Context, *TicketBuyerConfigRequest) (*TicketBuyerConfigResponse, error)
	SetAccount(context.Context, *SetAccountRequest) (*SetAccountResponse, error)
	SetBalanceToMaintain(context.Context, *SetBalanceToMaintainRequest) (*SetBalanceToMaintainResponse, error)
	SetMaxFee(context.Context, *SetMaxFeeRequest) (*SetMaxFeeResponse, error)
	SetMaxPriceRelative(context.Context, *SetMaxPriceRelativeRequest) (*SetMaxPriceRelativeResponse, error)
	SetMaxPriceAbsolute(context.Context, *SetMaxPriceAbsoluteRequest) (*SetMaxPriceAbsoluteResponse, error)
	SetVotingAddress(context.Context, *SetVotingAddressRequest) (*SetVotingAddressResponse, error)
	SetPoolAddress(context.Context, *SetPoolAddressRequest) (*SetPoolAddressResponse, error)
	SetPoolFees(context.Context, *SetPoolFeesRequest) (*SetPoolFeesResponse, error)
	SetMaxPerBlock(context.Context, *SetMaxPerBlockRequest) (*SetMaxPerBlockResponse, error)
}

// UnimplementedTicketBuyerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTicketBuyerServiceServer struct {
}

func (*UnimplementedTicketBuyerServiceServer) StartAutoBuyer(context.Context, *StartAutoBuyerRequest) (*StartAutoBuyerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartAutoBuyer not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) StopAutoBuyer(context.Context, *StopAutoBuyerRequest) (*StopAutoBuyerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopAutoBuyer not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) TicketBuyerConfig(context.Context, *TicketBuyerConfigRequest) (*TicketBuyerConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TicketBuyerConfig not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) SetAccount(context.Context, *SetAccountRequest) (*SetAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAccount not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) SetBalanceToMaintain(context.Context, *SetBalanceToMaintainRequest) (*SetBalanceToMaintainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBalanceToMaintain not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) SetMaxFee(context.Context, *SetMaxFeeRequest) (*SetMaxFeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMaxFee not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) SetMaxPriceRelative(context.Context, *SetMaxPriceRelativeRequest) (*SetMaxPriceRelativeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMaxPriceRelative not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) SetMaxPriceAbsolute(context.Context, *SetMaxPriceAbsoluteRequest) (*SetMaxPriceAbsoluteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMaxPriceAbsolute not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) SetVotingAddress(context.Context, *SetVotingAddressRequest) (*SetVotingAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVotingAddress not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) SetPoolAddress(context.Context, *SetPoolAddressRequest) (*SetPoolAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPoolAddress not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) SetPoolFees(context.Context, *SetPoolFeesRequest) (*SetPoolFeesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPoolFees not implemented")
}
func (*UnimplementedTicketBuyerServiceServer) SetMaxPerBlock(context.Context, *SetMaxPerBlockRequest) (*SetMaxPerBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMaxPerBlock not implemented")
}

func RegisterTicketBuyerServiceServer(s *grpc.Server, srv TicketBuyerServiceServer) {
	s.RegisterService(&_TicketBuyerService_serviceDesc, srv)
}

func _TicketBuyerService_StartAutoBuyer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartAutoBuyerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).StartAutoBuyer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/StartAutoBuyer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).StartAutoBuyer(ctx, req.(*StartAutoBuyerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_StopAutoBuyer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopAutoBuyerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).StopAutoBuyer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/StopAutoBuyer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).StopAutoBuyer(ctx, req.(*StopAutoBuyerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_TicketBuyerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TicketBuyerConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).TicketBuyerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/TicketBuyerConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).TicketBuyerConfig(ctx, req.(*TicketBuyerConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_SetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).SetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/SetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).SetAccount(ctx, req.(*SetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_SetBalanceToMaintain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBalanceToMaintainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).SetBalanceToMaintain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/SetBalanceToMaintain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).SetBalanceToMaintain(ctx, req.(*SetBalanceToMaintainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_SetMaxFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMaxFeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).SetMaxFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/SetMaxFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).SetMaxFee(ctx, req.(*SetMaxFeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_SetMaxPriceRelative_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMaxPriceRelativeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).SetMaxPriceRelative(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/SetMaxPriceRelative",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).SetMaxPriceRelative(ctx, req.(*SetMaxPriceRelativeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_SetMaxPriceAbsolute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMaxPriceAbsoluteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).SetMaxPriceAbsolute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/SetMaxPriceAbsolute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).SetMaxPriceAbsolute(ctx, req.(*SetMaxPriceAbsoluteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_SetVotingAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVotingAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).SetVotingAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/SetVotingAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).SetVotingAddress(ctx, req.(*SetVotingAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_SetPoolAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPoolAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).SetPoolAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/SetPoolAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).SetPoolAddress(ctx, req.(*SetPoolAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_SetPoolFees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPoolFeesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).SetPoolFees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/SetPoolFees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).SetPoolFees(ctx, req.(*SetPoolFeesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketBuyerService_SetMaxPerBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMaxPerBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketBuyerServiceServer).SetMaxPerBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.TicketBuyerService/SetMaxPerBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketBuyerServiceServer).SetMaxPerBlock(ctx, req.(*SetMaxPerBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TicketBuyerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.TicketBuyerService",
	HandlerType: (*TicketBuyerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartAutoBuyer",
			Handler:    _TicketBuyerService_StartAutoBuyer_Handler,
		},
		{
			MethodName: "StopAutoBuyer",
			Handler:    _TicketBuyerService_StopAutoBuyer_Handler,
		},
		{
			MethodName: "TicketBuyerConfig",
			Handler:    _TicketBuyerService_TicketBuyerConfig_Handler,
		},
		{
			MethodName: "SetAccount",
			Handler:    _TicketBuyerService_SetAccount_Handler,
		},
		{
			MethodName: "SetBalanceToMaintain",
			Handler:    _TicketBuyerService_SetBalanceToMaintain_Handler,
		},
		{
			MethodName: "SetMaxFee",
			Handler:    _TicketBuyerService_SetMaxFee_Handler,
		},
		{
			MethodName: "SetMaxPriceRelative",
			Handler:    _TicketBuyerService_SetMaxPriceRelative_Handler,
		},
		{
			MethodName: "SetMaxPriceAbsolute",
			Handler:    _TicketBuyerService_SetMaxPriceAbsolute_Handler,
		},
		{
			MethodName: "SetVotingAddress",
			Handler:    _TicketBuyerService_SetVotingAddress_Handler,
		},
		{
			MethodName: "SetPoolAddress",
			Handler:    _TicketBuyerService_SetPoolAddress_Handler,
		},
		{
			MethodName: "SetPoolFees",
			Handler:    _TicketBuyerService_SetPoolFees_Handler,
		},
		{
			MethodName: "SetMaxPerBlock",
			Handler:    _TicketBuyerService_SetMaxPerBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// SeedServiceClient is the client API for SeedService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SeedServiceClient interface {
	GenerateRandomSeed(ctx context.Context, in *GenerateRandomSeedRequest, opts ...grpc.CallOption) (*GenerateRandomSeedResponse, error)
	DecodeSeed(ctx context.Context, in *DecodeSeedRequest, opts ...grpc.CallOption) (*DecodeSeedResponse, error)
}

type seedServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSeedServiceClient(cc grpc.ClientConnInterface) SeedServiceClient {
	return &seedServiceClient{cc}
}

func (c *seedServiceClient) GenerateRandomSeed(ctx context.Context, in *GenerateRandomSeedRequest, opts ...grpc.CallOption) (*GenerateRandomSeedResponse, error) {
	out := new(GenerateRandomSeedResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.SeedService/GenerateRandomSeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *seedServiceClient) DecodeSeed(ctx context.Context, in *DecodeSeedRequest, opts ...grpc.CallOption) (*DecodeSeedResponse, error) {
	out := new(DecodeSeedResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.SeedService/DecodeSeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SeedServiceServer is the server API for SeedService service.
type SeedServiceServer interface {
	GenerateRandomSeed(context.Context, *GenerateRandomSeedRequest) (*GenerateRandomSeedResponse, error)
	DecodeSeed(context.Context, *DecodeSeedRequest) (*DecodeSeedResponse, error)
}

// UnimplementedSeedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSeedServiceServer struct {
}

func (*UnimplementedSeedServiceServer) GenerateRandomSeed(context.Context, *GenerateRandomSeedRequest) (*GenerateRandomSeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateRandomSeed not implemented")
}
func (*UnimplementedSeedServiceServer) DecodeSeed(context.Context, *DecodeSeedRequest) (*DecodeSeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecodeSeed not implemented")
}

func RegisterSeedServiceServer(s *grpc.Server, srv SeedServiceServer) {
	s.RegisterService(&_SeedService_serviceDesc, srv)
}

func _SeedService_GenerateRandomSeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateRandomSeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeedServiceServer).GenerateRandomSeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.SeedService/GenerateRandomSeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeedServiceServer).GenerateRandomSeed(ctx, req.(*GenerateRandomSeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SeedService_DecodeSeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecodeSeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeedServiceServer).DecodeSeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.SeedService/DecodeSeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeedServiceServer).DecodeSeed(ctx, req.(*DecodeSeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SeedService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.SeedService",
	HandlerType: (*SeedServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateRandomSeed",
			Handler:    _SeedService_GenerateRandomSeed_Handler,
		},
		{
			MethodName: "DecodeSeed",
			Handler:    _SeedService_DecodeSeed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// AgendaServiceClient is the client API for AgendaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgendaServiceClient interface {
	Agendas(ctx context.Context, in *AgendasRequest, opts ...grpc.CallOption) (*AgendasResponse, error)
}

type agendaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAgendaServiceClient(cc grpc.ClientConnInterface) AgendaServiceClient {
	return &agendaServiceClient{cc}
}

func (c *agendaServiceClient) Agendas(ctx context.Context, in *AgendasRequest, opts ...grpc.CallOption) (*AgendasResponse, error) {
	out := new(AgendasResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.AgendaService/Agendas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgendaServiceServer is the server API for AgendaService service.
type AgendaServiceServer interface {
	Agendas(context.Context, *AgendasRequest) (*AgendasResponse, error)
}

// UnimplementedAgendaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAgendaServiceServer struct {
}

func (*UnimplementedAgendaServiceServer) Agendas(context.Context, *AgendasRequest) (*AgendasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Agendas not implemented")
}

func RegisterAgendaServiceServer(s *grpc.Server, srv AgendaServiceServer) {
	s.RegisterService(&_AgendaService_serviceDesc, srv)
}

func _AgendaService_Agendas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgendasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgendaServiceServer).Agendas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.AgendaService/Agendas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgendaServiceServer).Agendas(ctx, req.(*AgendasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgendaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.AgendaService",
	HandlerType: (*AgendaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Agendas",
			Handler:    _AgendaService_Agendas_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// VotingServiceClient is the client API for VotingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VotingServiceClient interface {
	VoteChoices(ctx context.Context, in *VoteChoicesRequest, opts ...grpc.CallOption) (*VoteChoicesResponse, error)
	SetVoteChoices(ctx context.Context, in *SetVoteChoicesRequest, opts ...grpc.CallOption) (*SetVoteChoicesResponse, error)
}

type votingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVotingServiceClient(cc grpc.ClientConnInterface) VotingServiceClient {
	return &votingServiceClient{cc}
}

func (c *votingServiceClient) VoteChoices(ctx context.Context, in *VoteChoicesRequest, opts ...grpc.CallOption) (*VoteChoicesResponse, error) {
	out := new(VoteChoicesResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.VotingService/VoteChoices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *votingServiceClient) SetVoteChoices(ctx context.Context, in *SetVoteChoicesRequest, opts ...grpc.CallOption) (*SetVoteChoicesResponse, error) {
	out := new(SetVoteChoicesResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.VotingService/SetVoteChoices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VotingServiceServer is the server API for VotingService service.
type VotingServiceServer interface {
	VoteChoices(context.Context, *VoteChoicesRequest) (*VoteChoicesResponse, error)
	SetVoteChoices(context.Context, *SetVoteChoicesRequest) (*SetVoteChoicesResponse, error)
}

// UnimplementedVotingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVotingServiceServer struct {
}

func (*UnimplementedVotingServiceServer) VoteChoices(context.Context, *VoteChoicesRequest) (*VoteChoicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteChoices not implemented")
}
func (*UnimplementedVotingServiceServer) SetVoteChoices(context.Context, *SetVoteChoicesRequest) (*SetVoteChoicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVoteChoices not implemented")
}

func RegisterVotingServiceServer(s *grpc.Server, srv VotingServiceServer) {
	s.RegisterService(&_VotingService_serviceDesc, srv)
}

func _VotingService_VoteChoices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteChoicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VotingServiceServer).VoteChoices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.VotingService/VoteChoices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VotingServiceServer).VoteChoices(ctx, req.(*VoteChoicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VotingService_SetVoteChoices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVoteChoicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VotingServiceServer).SetVoteChoices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.VotingService/SetVoteChoices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VotingServiceServer).SetVoteChoices(ctx, req.(*SetVoteChoicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VotingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.VotingService",
	HandlerType: (*VotingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VoteChoices",
			Handler:    _VotingService_VoteChoices_Handler,
		},
		{
			MethodName: "SetVoteChoices",
			Handler:    _VotingService_SetVoteChoices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// MessageVerificationServiceClient is the client API for MessageVerificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageVerificationServiceClient interface {
	VerifyMessage(ctx context.Context, in *VerifyMessageRequest, opts ...grpc.CallOption) (*VerifyMessageResponse, error)
}

type messageVerificationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMessageVerificationServiceClient(cc grpc.ClientConnInterface) MessageVerificationServiceClient {
	return &messageVerificationServiceClient{cc}
}

func (c *messageVerificationServiceClient) VerifyMessage(ctx context.Context, in *VerifyMessageRequest, opts ...grpc.CallOption) (*VerifyMessageResponse, error) {
	out := new(VerifyMessageResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.MessageVerificationService/VerifyMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageVerificationServiceServer is the server API for MessageVerificationService service.
type MessageVerificationServiceServer interface {
	VerifyMessage(context.Context, *VerifyMessageRequest) (*VerifyMessageResponse, error)
}

// UnimplementedMessageVerificationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMessageVerificationServiceServer struct {
}

func (*UnimplementedMessageVerificationServiceServer) VerifyMessage(context.Context, *VerifyMessageRequest) (*VerifyMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyMessage not implemented")
}

func RegisterMessageVerificationServiceServer(s *grpc.Server, srv MessageVerificationServiceServer) {
	s.RegisterService(&_MessageVerificationService_serviceDesc, srv)
}

func _MessageVerificationService_VerifyMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageVerificationServiceServer).VerifyMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.MessageVerificationService/VerifyMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageVerificationServiceServer).VerifyMessage(ctx, req.(*VerifyMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageVerificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.MessageVerificationService",
	HandlerType: (*MessageVerificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VerifyMessage",
			Handler:    _MessageVerificationService_VerifyMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// NetworkServiceClient is the client API for NetworkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkServiceClient interface {
	GetRawBlock(ctx context.Context, in *GetRawBlockRequest, opts ...grpc.CallOption) (*GetRawBlockResponse, error)
}

type networkServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNetworkServiceClient(cc grpc.ClientConnInterface) NetworkServiceClient {
	return &networkServiceClient{cc}
}

func (c *networkServiceClient) GetRawBlock(ctx context.Context, in *GetRawBlockRequest, opts ...grpc.CallOption) (*GetRawBlockResponse, error) {
	out := new(GetRawBlockResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.NetworkService/GetRawBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkServiceServer is the server API for NetworkService service.
type NetworkServiceServer interface {
	GetRawBlock(context.Context, *GetRawBlockRequest) (*GetRawBlockResponse, error)
}

// UnimplementedNetworkServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNetworkServiceServer struct {
}

func (*UnimplementedNetworkServiceServer) GetRawBlock(context.Context, *GetRawBlockRequest) (*GetRawBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRawBlock not implemented")
}

func RegisterNetworkServiceServer(s *grpc.Server, srv NetworkServiceServer) {
	s.RegisterService(&_NetworkService_serviceDesc, srv)
}

func _NetworkService_GetRawBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRawBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).GetRawBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.NetworkService/GetRawBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).GetRawBlock(ctx, req.(*GetRawBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.NetworkService",
	HandlerType: (*NetworkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRawBlock",
			Handler:    _NetworkService_GetRawBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// DecodeMessageServiceClient is the client API for DecodeMessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DecodeMessageServiceClient interface {
	DecodeRawTransaction(ctx context.Context, in *DecodeRawTransactionRequest, opts ...grpc.CallOption) (*DecodeRawTransactionResponse, error)
}

type decodeMessageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDecodeMessageServiceClient(cc grpc.ClientConnInterface) DecodeMessageServiceClient {
	return &decodeMessageServiceClient{cc}
}

func (c *decodeMessageServiceClient) DecodeRawTransaction(ctx context.Context, in *DecodeRawTransactionRequest, opts ...grpc.CallOption) (*DecodeRawTransactionResponse, error) {
	out := new(DecodeRawTransactionResponse)
	err := c.cc.Invoke(ctx, "/walletrpc.DecodeMessageService/DecodeRawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DecodeMessageServiceServer is the server API for DecodeMessageService service.
type DecodeMessageServiceServer interface {
	DecodeRawTransaction(context.Context, *DecodeRawTransactionRequest) (*DecodeRawTransactionResponse, error)
}

// UnimplementedDecodeMessageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDecodeMessageServiceServer struct {
}

func (*UnimplementedDecodeMessageServiceServer) DecodeRawTransaction(context.Context, *DecodeRawTransactionRequest) (*DecodeRawTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecodeRawTransaction not implemented")
}

func RegisterDecodeMessageServiceServer(s *grpc.Server, srv DecodeMessageServiceServer) {
	s.RegisterService(&_DecodeMessageService_serviceDesc, srv)
}

func _DecodeMessageService_DecodeRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecodeRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DecodeMessageServiceServer).DecodeRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/walletrpc.DecodeMessageService/DecodeRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DecodeMessageServiceServer).DecodeRawTransaction(ctx, req.(*DecodeRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DecodeMessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "walletrpc.DecodeMessageService",
	HandlerType: (*DecodeMessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DecodeRawTransaction",
			Handler:    _DecodeMessageService_DecodeRawTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
